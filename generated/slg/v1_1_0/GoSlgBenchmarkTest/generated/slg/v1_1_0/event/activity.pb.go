// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: slg-proto/v1.1.0/event/activity.proto

package event

import (
	common "GoSlgBenchmarkTest/generated/slg/v1_1_0/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举定义
type ActivityType int32

const (
	ActivityType_ACTIVITY_TYPE_UNKNOWN  ActivityType = 0
	ActivityType_ACTIVITY_TYPE_LOGIN    ActivityType = 1 // 登录活动
	ActivityType_ACTIVITY_TYPE_BATTLE   ActivityType = 2 // 战斗活动
	ActivityType_ACTIVITY_TYPE_COLLECT  ActivityType = 3 // 收集活动
	ActivityType_ACTIVITY_TYPE_RANKING  ActivityType = 4 // 排行活动
	ActivityType_ACTIVITY_TYPE_GUILD    ActivityType = 5 // 公会活动
	ActivityType_ACTIVITY_TYPE_SPENDING ActivityType = 6 // 消费活动
	ActivityType_ACTIVITY_TYPE_FESTIVAL ActivityType = 7 // 节日活动
	ActivityType_ACTIVITY_TYPE_PVP      ActivityType = 8 // PVP活动
)

// Enum value maps for ActivityType.
var (
	ActivityType_name = map[int32]string{
		0: "ACTIVITY_TYPE_UNKNOWN",
		1: "ACTIVITY_TYPE_LOGIN",
		2: "ACTIVITY_TYPE_BATTLE",
		3: "ACTIVITY_TYPE_COLLECT",
		4: "ACTIVITY_TYPE_RANKING",
		5: "ACTIVITY_TYPE_GUILD",
		6: "ACTIVITY_TYPE_SPENDING",
		7: "ACTIVITY_TYPE_FESTIVAL",
		8: "ACTIVITY_TYPE_PVP",
	}
	ActivityType_value = map[string]int32{
		"ACTIVITY_TYPE_UNKNOWN":  0,
		"ACTIVITY_TYPE_LOGIN":    1,
		"ACTIVITY_TYPE_BATTLE":   2,
		"ACTIVITY_TYPE_COLLECT":  3,
		"ACTIVITY_TYPE_RANKING":  4,
		"ACTIVITY_TYPE_GUILD":    5,
		"ACTIVITY_TYPE_SPENDING": 6,
		"ACTIVITY_TYPE_FESTIVAL": 7,
		"ACTIVITY_TYPE_PVP":      8,
	}
)

func (x ActivityType) Enum() *ActivityType {
	p := new(ActivityType)
	*p = x
	return p
}

func (x ActivityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityType) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[0].Descriptor()
}

func (ActivityType) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[0]
}

func (x ActivityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityType.Descriptor instead.
func (ActivityType) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{0}
}

type ActivityStatus int32

const (
	ActivityStatus_ACTIVITY_STATUS_UNKNOWN   ActivityStatus = 0
	ActivityStatus_ACTIVITY_STATUS_UPCOMING  ActivityStatus = 1 // 即将开始
	ActivityStatus_ACTIVITY_STATUS_ACTIVE    ActivityStatus = 2 // 进行中
	ActivityStatus_ACTIVITY_STATUS_PAUSED    ActivityStatus = 3 // 暂停
	ActivityStatus_ACTIVITY_STATUS_ENDED     ActivityStatus = 4 // 已结束
	ActivityStatus_ACTIVITY_STATUS_CANCELLED ActivityStatus = 5 // 已取消
)

// Enum value maps for ActivityStatus.
var (
	ActivityStatus_name = map[int32]string{
		0: "ACTIVITY_STATUS_UNKNOWN",
		1: "ACTIVITY_STATUS_UPCOMING",
		2: "ACTIVITY_STATUS_ACTIVE",
		3: "ACTIVITY_STATUS_PAUSED",
		4: "ACTIVITY_STATUS_ENDED",
		5: "ACTIVITY_STATUS_CANCELLED",
	}
	ActivityStatus_value = map[string]int32{
		"ACTIVITY_STATUS_UNKNOWN":   0,
		"ACTIVITY_STATUS_UPCOMING":  1,
		"ACTIVITY_STATUS_ACTIVE":    2,
		"ACTIVITY_STATUS_PAUSED":    3,
		"ACTIVITY_STATUS_ENDED":     4,
		"ACTIVITY_STATUS_CANCELLED": 5,
	}
)

func (x ActivityStatus) Enum() *ActivityStatus {
	p := new(ActivityStatus)
	*p = x
	return p
}

func (x ActivityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[1].Descriptor()
}

func (ActivityStatus) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[1]
}

func (x ActivityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityStatus.Descriptor instead.
func (ActivityStatus) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{1}
}

type ActivityStageType int32

const (
	ActivityStageType_ACTIVITY_STAGE_TYPE_UNKNOWN     ActivityStageType = 0
	ActivityStageType_ACTIVITY_STAGE_TYPE_PREPARATION ActivityStageType = 1 // 准备阶段
	ActivityStageType_ACTIVITY_STAGE_TYPE_MAIN        ActivityStageType = 2 // 主要阶段
	ActivityStageType_ACTIVITY_STAGE_TYPE_BONUS       ActivityStageType = 3 // 奖励阶段
	ActivityStageType_ACTIVITY_STAGE_TYPE_CLEANUP     ActivityStageType = 4 // 清理阶段
)

// Enum value maps for ActivityStageType.
var (
	ActivityStageType_name = map[int32]string{
		0: "ACTIVITY_STAGE_TYPE_UNKNOWN",
		1: "ACTIVITY_STAGE_TYPE_PREPARATION",
		2: "ACTIVITY_STAGE_TYPE_MAIN",
		3: "ACTIVITY_STAGE_TYPE_BONUS",
		4: "ACTIVITY_STAGE_TYPE_CLEANUP",
	}
	ActivityStageType_value = map[string]int32{
		"ACTIVITY_STAGE_TYPE_UNKNOWN":     0,
		"ACTIVITY_STAGE_TYPE_PREPARATION": 1,
		"ACTIVITY_STAGE_TYPE_MAIN":        2,
		"ACTIVITY_STAGE_TYPE_BONUS":       3,
		"ACTIVITY_STAGE_TYPE_CLEANUP":     4,
	}
)

func (x ActivityStageType) Enum() *ActivityStageType {
	p := new(ActivityStageType)
	*p = x
	return p
}

func (x ActivityStageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityStageType) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[2].Descriptor()
}

func (ActivityStageType) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[2]
}

func (x ActivityStageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityStageType.Descriptor instead.
func (ActivityStageType) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{2}
}

type ActivityTaskType int32

const (
	ActivityTaskType_ACTIVITY_TASK_TYPE_UNKNOWN        ActivityTaskType = 0
	ActivityTaskType_ACTIVITY_TASK_TYPE_KILL_MONSTER   ActivityTaskType = 1 // 击杀怪物
	ActivityTaskType_ACTIVITY_TASK_TYPE_COLLECT_ITEM   ActivityTaskType = 2 // 收集物品
	ActivityTaskType_ACTIVITY_TASK_TYPE_WIN_BATTLE     ActivityTaskType = 3 // 获胜战斗
	ActivityTaskType_ACTIVITY_TASK_TYPE_SPEND_RESOURCE ActivityTaskType = 4 // 消耗资源
	ActivityTaskType_ACTIVITY_TASK_TYPE_LOGIN_DAYS     ActivityTaskType = 5 // 连续登录
	ActivityTaskType_ACTIVITY_TASK_TYPE_GUILD_DONATE   ActivityTaskType = 6 // 公会捐献
	ActivityTaskType_ACTIVITY_TASK_TYPE_PVP_WIN        ActivityTaskType = 7 // PVP胜利
)

// Enum value maps for ActivityTaskType.
var (
	ActivityTaskType_name = map[int32]string{
		0: "ACTIVITY_TASK_TYPE_UNKNOWN",
		1: "ACTIVITY_TASK_TYPE_KILL_MONSTER",
		2: "ACTIVITY_TASK_TYPE_COLLECT_ITEM",
		3: "ACTIVITY_TASK_TYPE_WIN_BATTLE",
		4: "ACTIVITY_TASK_TYPE_SPEND_RESOURCE",
		5: "ACTIVITY_TASK_TYPE_LOGIN_DAYS",
		6: "ACTIVITY_TASK_TYPE_GUILD_DONATE",
		7: "ACTIVITY_TASK_TYPE_PVP_WIN",
	}
	ActivityTaskType_value = map[string]int32{
		"ACTIVITY_TASK_TYPE_UNKNOWN":        0,
		"ACTIVITY_TASK_TYPE_KILL_MONSTER":   1,
		"ACTIVITY_TASK_TYPE_COLLECT_ITEM":   2,
		"ACTIVITY_TASK_TYPE_WIN_BATTLE":     3,
		"ACTIVITY_TASK_TYPE_SPEND_RESOURCE": 4,
		"ACTIVITY_TASK_TYPE_LOGIN_DAYS":     5,
		"ACTIVITY_TASK_TYPE_GUILD_DONATE":   6,
		"ACTIVITY_TASK_TYPE_PVP_WIN":        7,
	}
)

func (x ActivityTaskType) Enum() *ActivityTaskType {
	p := new(ActivityTaskType)
	*p = x
	return p
}

func (x ActivityTaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[3].Descriptor()
}

func (ActivityTaskType) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[3]
}

func (x ActivityTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityTaskType.Descriptor instead.
func (ActivityTaskType) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{3}
}

type ActivityRewardType int32

const (
	ActivityRewardType_ACTIVITY_REWARD_TYPE_UNKNOWN       ActivityRewardType = 0
	ActivityRewardType_ACTIVITY_REWARD_TYPE_MILESTONE     ActivityRewardType = 1 // 里程碑奖励
	ActivityRewardType_ACTIVITY_REWARD_TYPE_RANKING       ActivityRewardType = 2 // 排行奖励
	ActivityRewardType_ACTIVITY_REWARD_TYPE_PARTICIPATION ActivityRewardType = 3 // 参与奖励
	ActivityRewardType_ACTIVITY_REWARD_TYPE_COMPLETION    ActivityRewardType = 4 // 完成奖励
	ActivityRewardType_ACTIVITY_REWARD_TYPE_DAILY         ActivityRewardType = 5 // 每日奖励
)

// Enum value maps for ActivityRewardType.
var (
	ActivityRewardType_name = map[int32]string{
		0: "ACTIVITY_REWARD_TYPE_UNKNOWN",
		1: "ACTIVITY_REWARD_TYPE_MILESTONE",
		2: "ACTIVITY_REWARD_TYPE_RANKING",
		3: "ACTIVITY_REWARD_TYPE_PARTICIPATION",
		4: "ACTIVITY_REWARD_TYPE_COMPLETION",
		5: "ACTIVITY_REWARD_TYPE_DAILY",
	}
	ActivityRewardType_value = map[string]int32{
		"ACTIVITY_REWARD_TYPE_UNKNOWN":       0,
		"ACTIVITY_REWARD_TYPE_MILESTONE":     1,
		"ACTIVITY_REWARD_TYPE_RANKING":       2,
		"ACTIVITY_REWARD_TYPE_PARTICIPATION": 3,
		"ACTIVITY_REWARD_TYPE_COMPLETION":    4,
		"ACTIVITY_REWARD_TYPE_DAILY":         5,
	}
)

func (x ActivityRewardType) Enum() *ActivityRewardType {
	p := new(ActivityRewardType)
	*p = x
	return p
}

func (x ActivityRewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityRewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[4].Descriptor()
}

func (ActivityRewardType) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[4]
}

func (x ActivityRewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityRewardType.Descriptor instead.
func (ActivityRewardType) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{4}
}

type ActivityRankType int32

const (
	ActivityRankType_ACTIVITY_RANK_TYPE_UNKNOWN    ActivityRankType = 0
	ActivityRankType_ACTIVITY_RANK_TYPE_SCORE      ActivityRankType = 1 // 积分排行
	ActivityRankType_ACTIVITY_RANK_TYPE_PROGRESS   ActivityRankType = 2 // 进度排行
	ActivityRankType_ACTIVITY_RANK_TYPE_TIME       ActivityRankType = 3 // 时间排行
	ActivityRankType_ACTIVITY_RANK_TYPE_EFFICIENCY ActivityRankType = 4 // 效率排行
)

// Enum value maps for ActivityRankType.
var (
	ActivityRankType_name = map[int32]string{
		0: "ACTIVITY_RANK_TYPE_UNKNOWN",
		1: "ACTIVITY_RANK_TYPE_SCORE",
		2: "ACTIVITY_RANK_TYPE_PROGRESS",
		3: "ACTIVITY_RANK_TYPE_TIME",
		4: "ACTIVITY_RANK_TYPE_EFFICIENCY",
	}
	ActivityRankType_value = map[string]int32{
		"ACTIVITY_RANK_TYPE_UNKNOWN":    0,
		"ACTIVITY_RANK_TYPE_SCORE":      1,
		"ACTIVITY_RANK_TYPE_PROGRESS":   2,
		"ACTIVITY_RANK_TYPE_TIME":       3,
		"ACTIVITY_RANK_TYPE_EFFICIENCY": 4,
	}
)

func (x ActivityRankType) Enum() *ActivityRankType {
	p := new(ActivityRankType)
	*p = x
	return p
}

func (x ActivityRankType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityRankType) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[5].Descriptor()
}

func (ActivityRankType) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[5]
}

func (x ActivityRankType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityRankType.Descriptor instead.
func (ActivityRankType) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{5}
}

type ActivityResult int32

const (
	ActivityResult_ACTIVITY_RESULT_UNKNOWN           ActivityResult = 0
	ActivityResult_ACTIVITY_RESULT_SUCCESS           ActivityResult = 1 // 成功
	ActivityResult_ACTIVITY_RESULT_FAILED            ActivityResult = 2 // 失败
	ActivityResult_ACTIVITY_RESULT_NOT_ELIGIBLE      ActivityResult = 3 // 不符合条件
	ActivityResult_ACTIVITY_RESULT_ALREADY_COMPLETED ActivityResult = 4 // 已完成
	ActivityResult_ACTIVITY_RESULT_NOT_STARTED       ActivityResult = 5 // 未开始
	ActivityResult_ACTIVITY_RESULT_ENDED             ActivityResult = 6 // 已结束
)

// Enum value maps for ActivityResult.
var (
	ActivityResult_name = map[int32]string{
		0: "ACTIVITY_RESULT_UNKNOWN",
		1: "ACTIVITY_RESULT_SUCCESS",
		2: "ACTIVITY_RESULT_FAILED",
		3: "ACTIVITY_RESULT_NOT_ELIGIBLE",
		4: "ACTIVITY_RESULT_ALREADY_COMPLETED",
		5: "ACTIVITY_RESULT_NOT_STARTED",
		6: "ACTIVITY_RESULT_ENDED",
	}
	ActivityResult_value = map[string]int32{
		"ACTIVITY_RESULT_UNKNOWN":           0,
		"ACTIVITY_RESULT_SUCCESS":           1,
		"ACTIVITY_RESULT_FAILED":            2,
		"ACTIVITY_RESULT_NOT_ELIGIBLE":      3,
		"ACTIVITY_RESULT_ALREADY_COMPLETED": 4,
		"ACTIVITY_RESULT_NOT_STARTED":       5,
		"ACTIVITY_RESULT_ENDED":             6,
	}
)

func (x ActivityResult) Enum() *ActivityResult {
	p := new(ActivityResult)
	*p = x
	return p
}

func (x ActivityResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityResult) Descriptor() protoreflect.EnumDescriptor {
	return file_slg_proto_v1_1_0_event_activity_proto_enumTypes[6].Descriptor()
}

func (ActivityResult) Type() protoreflect.EnumType {
	return &file_slg_proto_v1_1_0_event_activity_proto_enumTypes[6]
}

func (x ActivityResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityResult.Descriptor instead.
func (ActivityResult) EnumDescriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{6}
}

// 活动信息请求
type ActivityInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`              // 玩家ID
	ActivityIds   []string               `protobuf:"bytes,2,rep,name=activity_ids,json=activityIds,proto3" json:"activity_ids,omitempty"`     // 指定活动ID列表(空表示所有)
	IncludeEnded  bool                   `protobuf:"varint,3,opt,name=include_ended,json=includeEnded,proto3" json:"include_ended,omitempty"` // 是否包含已结束活动
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityInfoRequest) Reset() {
	*x = ActivityInfoRequest{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfoRequest) ProtoMessage() {}

func (x *ActivityInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfoRequest.ProtoReflect.Descriptor instead.
func (*ActivityInfoRequest) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ActivityInfoRequest) GetActivityIds() []string {
	if x != nil {
		return x.ActivityIds
	}
	return nil
}

func (x *ActivityInfoRequest) GetIncludeEnded() bool {
	if x != nil {
		return x.IncludeEnded
	}
	return false
}

// 活动信息响应
type ActivityInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Activities    []*Activity            `protobuf:"bytes,1,rep,name=activities,proto3" json:"activities,omitempty"`                    // 活动列表
	ServerTime    int64                  `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"` // 服务器时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityInfoResponse) Reset() {
	*x = ActivityInfoResponse{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfoResponse) ProtoMessage() {}

func (x *ActivityInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfoResponse.ProtoReflect.Descriptor instead.
func (*ActivityInfoResponse) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityInfoResponse) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

func (x *ActivityInfoResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

// 参与活动请求
type ParticipateActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                                       // 玩家ID
	ActivityId    string                 `protobuf:"bytes,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                                                 // 活动ID
	StageId       string                 `protobuf:"bytes,3,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`                                                          // 阶段ID
	Params        map[string]string      `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 参数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateActivityRequest) Reset() {
	*x = ParticipateActivityRequest{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateActivityRequest) ProtoMessage() {}

func (x *ParticipateActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateActivityRequest.ProtoReflect.Descriptor instead.
func (*ParticipateActivityRequest) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{2}
}

func (x *ParticipateActivityRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ParticipateActivityRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ParticipateActivityRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ParticipateActivityRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

// 参与活动响应
type ParticipateActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        ActivityResult         `protobuf:"varint,1,opt,name=result,proto3,enum=slg.event.v1.ActivityResult" json:"result,omitempty"` // 参与结果
	Reward        *ActivityReward        `protobuf:"bytes,2,opt,name=reward,proto3" json:"reward,omitempty"`                                   // 获得奖励
	Progress      *ActivityProgress      `protobuf:"bytes,3,opt,name=progress,proto3" json:"progress,omitempty"`                               // 活动进度
	NextStageId   string                 `protobuf:"bytes,4,opt,name=next_stage_id,json=nextStageId,proto3" json:"next_stage_id,omitempty"`    // 下一阶段ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParticipateActivityResponse) Reset() {
	*x = ParticipateActivityResponse{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParticipateActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipateActivityResponse) ProtoMessage() {}

func (x *ParticipateActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipateActivityResponse.ProtoReflect.Descriptor instead.
func (*ParticipateActivityResponse) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{3}
}

func (x *ParticipateActivityResponse) GetResult() ActivityResult {
	if x != nil {
		return x.Result
	}
	return ActivityResult_ACTIVITY_RESULT_UNKNOWN
}

func (x *ParticipateActivityResponse) GetReward() *ActivityReward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ParticipateActivityResponse) GetProgress() *ActivityProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *ParticipateActivityResponse) GetNextStageId() string {
	if x != nil {
		return x.NextStageId
	}
	return ""
}

// 活动排行榜请求
type ActivityLeaderboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityId    string                 `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                               // 活动ID
	StageId       string                 `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`                                        // 阶段ID
	RankType      ActivityRankType       `protobuf:"varint,3,opt,name=rank_type,json=rankType,proto3,enum=slg.event.v1.ActivityRankType" json:"rank_type,omitempty"` // 排行类型
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                                                            // 页码
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                                    // 页面大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityLeaderboardRequest) Reset() {
	*x = ActivityLeaderboardRequest{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityLeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLeaderboardRequest) ProtoMessage() {}

func (x *ActivityLeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLeaderboardRequest.ProtoReflect.Descriptor instead.
func (*ActivityLeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityLeaderboardRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ActivityLeaderboardRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ActivityLeaderboardRequest) GetRankType() ActivityRankType {
	if x != nil {
		return x.RankType
	}
	return ActivityRankType_ACTIVITY_RANK_TYPE_UNKNOWN
}

func (x *ActivityLeaderboardRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ActivityLeaderboardRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 活动排行榜响应
type ActivityLeaderboardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*ActivityRankEntry   `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`                          // 排行榜条目
	PlayerRank    *ActivityPlayerRank    `protobuf:"bytes,2,opt,name=player_rank,json=playerRank,proto3" json:"player_rank,omitempty"`  // 玩家排名
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总参与人数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityLeaderboardResponse) Reset() {
	*x = ActivityLeaderboardResponse{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityLeaderboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLeaderboardResponse) ProtoMessage() {}

func (x *ActivityLeaderboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLeaderboardResponse.ProtoReflect.Descriptor instead.
func (*ActivityLeaderboardResponse) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityLeaderboardResponse) GetEntries() []*ActivityRankEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *ActivityLeaderboardResponse) GetPlayerRank() *ActivityPlayerRank {
	if x != nil {
		return x.PlayerRank
	}
	return nil
}

func (x *ActivityLeaderboardResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 活动奖励领取请求
type ClaimActivityRewardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`       // 玩家ID
	ActivityId    string                 `protobuf:"bytes,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"` // 活动ID
	RewardIds     []string               `protobuf:"bytes,3,rep,name=reward_ids,json=rewardIds,proto3" json:"reward_ids,omitempty"`    // 奖励ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimActivityRewardRequest) Reset() {
	*x = ClaimActivityRewardRequest{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimActivityRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimActivityRewardRequest) ProtoMessage() {}

func (x *ClaimActivityRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimActivityRewardRequest.ProtoReflect.Descriptor instead.
func (*ClaimActivityRewardRequest) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{6}
}

func (x *ClaimActivityRewardRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ClaimActivityRewardRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ClaimActivityRewardRequest) GetRewardIds() []string {
	if x != nil {
		return x.RewardIds
	}
	return nil
}

// 活动奖励领取响应
type ClaimActivityRewardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rewards       []*ActivityReward      `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`   // 领取的奖励
	Progress      *ActivityProgress      `protobuf:"bytes,2,opt,name=progress,proto3" json:"progress,omitempty"` // 更新后的进度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimActivityRewardResponse) Reset() {
	*x = ClaimActivityRewardResponse{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimActivityRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimActivityRewardResponse) ProtoMessage() {}

func (x *ClaimActivityRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimActivityRewardResponse.ProtoReflect.Descriptor instead.
func (*ClaimActivityRewardResponse) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{7}
}

func (x *ClaimActivityRewardResponse) GetRewards() []*ActivityReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ClaimActivityRewardResponse) GetProgress() *ActivityProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// 活动定义
type Activity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityId    string                 `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                                                  // 活动ID
	ActivityName  string                 `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`                                            // 活动名称
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                  // 活动描述
	ActivityType  ActivityType           `protobuf:"varint,4,opt,name=activity_type,json=activityType,proto3,enum=slg.event.v1.ActivityType" json:"activity_type,omitempty"`            // 活动类型
	Status        ActivityStatus         `protobuf:"varint,5,opt,name=status,proto3,enum=slg.event.v1.ActivityStatus" json:"status,omitempty"`                                          // 活动状态
	StartTime     int64                  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                    // 开始时间
	EndTime       int64                  `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                          // 结束时间
	Stages        []*ActivityStage       `protobuf:"bytes,8,rep,name=stages,proto3" json:"stages,omitempty"`                                                                            // 活动阶段
	Rewards       []*ActivityReward      `protobuf:"bytes,9,rep,name=rewards,proto3" json:"rewards,omitempty"`                                                                          // 活动奖励
	Condition     *ActivityCondition     `protobuf:"bytes,10,opt,name=condition,proto3" json:"condition,omitempty"`                                                                     // 参与条件
	Config        map[string]string      `protobuf:"bytes,11,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 活动配置
	BannerUrl     string                 `protobuf:"bytes,12,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`                                                    // 横幅图片URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Activity) Reset() {
	*x = Activity{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{8}
}

func (x *Activity) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *Activity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *Activity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Activity) GetActivityType() ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return ActivityType_ACTIVITY_TYPE_UNKNOWN
}

func (x *Activity) GetStatus() ActivityStatus {
	if x != nil {
		return x.Status
	}
	return ActivityStatus_ACTIVITY_STATUS_UNKNOWN
}

func (x *Activity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Activity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Activity) GetStages() []*ActivityStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *Activity) GetRewards() []*ActivityReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *Activity) GetCondition() *ActivityCondition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *Activity) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Activity) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

// 活动阶段
type ActivityStage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StageId       string                 `protobuf:"bytes,1,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`                                                                       // 阶段ID
	StageName     string                 `protobuf:"bytes,2,opt,name=stage_name,json=stageName,proto3" json:"stage_name,omitempty"`                                                                 // 阶段名称
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                              // 阶段描述
	StartTime     int64                  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                                // 开始时间
	EndTime       int64                  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                      // 结束时间
	Tasks         []*ActivityTask        `protobuf:"bytes,6,rep,name=tasks,proto3" json:"tasks,omitempty"`                                                                                          // 阶段任务
	StageType     ActivityStageType      `protobuf:"varint,7,opt,name=stage_type,json=stageType,proto3,enum=slg.event.v1.ActivityStageType" json:"stage_type,omitempty"`                            // 阶段类型
	Requirements  map[string]int32       `protobuf:"bytes,8,rep,name=requirements,proto3" json:"requirements,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 阶段要求
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityStage) Reset() {
	*x = ActivityStage{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityStage) ProtoMessage() {}

func (x *ActivityStage) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityStage.ProtoReflect.Descriptor instead.
func (*ActivityStage) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{9}
}

func (x *ActivityStage) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ActivityStage) GetStageName() string {
	if x != nil {
		return x.StageName
	}
	return ""
}

func (x *ActivityStage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActivityStage) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ActivityStage) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ActivityStage) GetTasks() []*ActivityTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ActivityStage) GetStageType() ActivityStageType {
	if x != nil {
		return x.StageType
	}
	return ActivityStageType_ACTIVITY_STAGE_TYPE_UNKNOWN
}

func (x *ActivityStage) GetRequirements() map[string]int32 {
	if x != nil {
		return x.Requirements
	}
	return nil
}

// 活动任务
type ActivityTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                                                // 任务ID
	TaskName      string                 `protobuf:"bytes,2,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`                                                          // 任务名称
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                    // 任务描述
	TaskType      ActivityTaskType       `protobuf:"varint,4,opt,name=task_type,json=taskType,proto3,enum=slg.event.v1.ActivityTaskType" json:"task_type,omitempty"`                      // 任务类型
	Targets       map[string]int32       `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 任务目标
	Reward        *ActivityReward        `protobuf:"bytes,6,opt,name=reward,proto3" json:"reward,omitempty"`                                                                              // 任务奖励
	IsRepeatable  bool                   `protobuf:"varint,7,opt,name=is_repeatable,json=isRepeatable,proto3" json:"is_repeatable,omitempty"`                                             // 是否可重复
	MaxCount      int32                  `protobuf:"varint,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`                                                         // 最大完成次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityTask) Reset() {
	*x = ActivityTask{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTask) ProtoMessage() {}

func (x *ActivityTask) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTask.ProtoReflect.Descriptor instead.
func (*ActivityTask) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{10}
}

func (x *ActivityTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ActivityTask) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *ActivityTask) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ActivityTask) GetTaskType() ActivityTaskType {
	if x != nil {
		return x.TaskType
	}
	return ActivityTaskType_ACTIVITY_TASK_TYPE_UNKNOWN
}

func (x *ActivityTask) GetTargets() map[string]int32 {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActivityTask) GetReward() *ActivityReward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *ActivityTask) GetIsRepeatable() bool {
	if x != nil {
		return x.IsRepeatable
	}
	return false
}

func (x *ActivityTask) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

// 活动进度
type ActivityProgress struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ActivityId     string                 `protobuf:"bytes,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`                                                                                     // 活动ID
	PlayerId       string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                                                                           // 玩家ID
	CurrentStageId string                 `protobuf:"bytes,3,opt,name=current_stage_id,json=currentStageId,proto3" json:"current_stage_id,omitempty"`                                                                       // 当前阶段ID
	TaskProgress   map[string]int32       `protobuf:"bytes,4,rep,name=task_progress,json=taskProgress,proto3" json:"task_progress,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`    // 任务进度
	StageProgress  map[string]int32       `protobuf:"bytes,5,rep,name=stage_progress,json=stageProgress,proto3" json:"stage_progress,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 阶段进度
	CompletedTasks []string               `protobuf:"bytes,6,rep,name=completed_tasks,json=completedTasks,proto3" json:"completed_tasks,omitempty"`                                                                         // 已完成任务
	ClaimedRewards []string               `protobuf:"bytes,7,rep,name=claimed_rewards,json=claimedRewards,proto3" json:"claimed_rewards,omitempty"`                                                                         // 已领取奖励
	TotalScore     int32                  `protobuf:"varint,8,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`                                                                                    // 总积分
	LastUpdateTime int64                  `protobuf:"varint,9,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`                                                                      // 最后更新时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ActivityProgress) Reset() {
	*x = ActivityProgress{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityProgress) ProtoMessage() {}

func (x *ActivityProgress) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityProgress.ProtoReflect.Descriptor instead.
func (*ActivityProgress) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{11}
}

func (x *ActivityProgress) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *ActivityProgress) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ActivityProgress) GetCurrentStageId() string {
	if x != nil {
		return x.CurrentStageId
	}
	return ""
}

func (x *ActivityProgress) GetTaskProgress() map[string]int32 {
	if x != nil {
		return x.TaskProgress
	}
	return nil
}

func (x *ActivityProgress) GetStageProgress() map[string]int32 {
	if x != nil {
		return x.StageProgress
	}
	return nil
}

func (x *ActivityProgress) GetCompletedTasks() []string {
	if x != nil {
		return x.CompletedTasks
	}
	return nil
}

func (x *ActivityProgress) GetClaimedRewards() []string {
	if x != nil {
		return x.ClaimedRewards
	}
	return nil
}

func (x *ActivityProgress) GetTotalScore() int32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *ActivityProgress) GetLastUpdateTime() int64 {
	if x != nil {
		return x.LastUpdateTime
	}
	return 0
}

// 活动奖励
type ActivityReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RewardId      string                 `protobuf:"bytes,1,opt,name=reward_id,json=rewardId,proto3" json:"reward_id,omitempty"`                                                              // 奖励ID
	RewardName    string                 `protobuf:"bytes,2,opt,name=reward_name,json=rewardName,proto3" json:"reward_name,omitempty"`                                                        // 奖励名称
	RewardType    ActivityRewardType     `protobuf:"varint,3,opt,name=reward_type,json=rewardType,proto3,enum=slg.event.v1.ActivityRewardType" json:"reward_type,omitempty"`                  // 奖励类型
	Items         []*common.Item         `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`                                                                                    // 物品奖励
	Experience    int32                  `protobuf:"varint,5,opt,name=experience,proto3" json:"experience,omitempty"`                                                                         // 经验奖励
	Gold          int32                  `protobuf:"varint,6,opt,name=gold,proto3" json:"gold,omitempty"`                                                                                     // 金币奖励
	TitleId       string                 `protobuf:"bytes,7,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`                                                                 // 称号ID
	Resources     map[string]int32       `protobuf:"bytes,8,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 资源奖励
	IsClaimed     bool                   `protobuf:"varint,9,opt,name=is_claimed,json=isClaimed,proto3" json:"is_claimed,omitempty"`                                                          // 是否已领取
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityReward) Reset() {
	*x = ActivityReward{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityReward) ProtoMessage() {}

func (x *ActivityReward) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityReward.ProtoReflect.Descriptor instead.
func (*ActivityReward) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{12}
}

func (x *ActivityReward) GetRewardId() string {
	if x != nil {
		return x.RewardId
	}
	return ""
}

func (x *ActivityReward) GetRewardName() string {
	if x != nil {
		return x.RewardName
	}
	return ""
}

func (x *ActivityReward) GetRewardType() ActivityRewardType {
	if x != nil {
		return x.RewardType
	}
	return ActivityRewardType_ACTIVITY_REWARD_TYPE_UNKNOWN
}

func (x *ActivityReward) GetItems() []*common.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ActivityReward) GetExperience() int32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *ActivityReward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *ActivityReward) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *ActivityReward) GetResources() map[string]int32 {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ActivityReward) GetIsClaimed() bool {
	if x != nil {
		return x.IsClaimed
	}
	return false
}

// 活动条件
type ActivityCondition struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MinLevel        int32                  `protobuf:"varint,1,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`                     // 最低等级
	RequiredQuests  []string               `protobuf:"bytes,2,rep,name=required_quests,json=requiredQuests,proto3" json:"required_quests,omitempty"`    // 前置任务
	RequiredItems   []string               `protobuf:"bytes,3,rep,name=required_items,json=requiredItems,proto3" json:"required_items,omitempty"`       // 需要物品
	VipOnly         bool                   `protobuf:"varint,4,opt,name=vip_only,json=vipOnly,proto3" json:"vip_only,omitempty"`                        // 仅VIP
	ForbiddenStages []string               `protobuf:"bytes,5,rep,name=forbidden_stages,json=forbiddenStages,proto3" json:"forbidden_stages,omitempty"` // 禁止阶段
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActivityCondition) Reset() {
	*x = ActivityCondition{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCondition) ProtoMessage() {}

func (x *ActivityCondition) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCondition.ProtoReflect.Descriptor instead.
func (*ActivityCondition) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{13}
}

func (x *ActivityCondition) GetMinLevel() int32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *ActivityCondition) GetRequiredQuests() []string {
	if x != nil {
		return x.RequiredQuests
	}
	return nil
}

func (x *ActivityCondition) GetRequiredItems() []string {
	if x != nil {
		return x.RequiredItems
	}
	return nil
}

func (x *ActivityCondition) GetVipOnly() bool {
	if x != nil {
		return x.VipOnly
	}
	return false
}

func (x *ActivityCondition) GetForbiddenStages() []string {
	if x != nil {
		return x.ForbiddenStages
	}
	return nil
}

// 活动排行榜条目
type ActivityRankEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rank          int32                  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`                                                                             // 排名
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                                      // 玩家ID
	PlayerName    string                 `protobuf:"bytes,3,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`                                                // 玩家名称
	Score         int32                  `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`                                                                           // 积分
	Stats         map[string]int32       `protobuf:"bytes,5,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 统计数据
	GuildName     string                 `protobuf:"bytes,6,opt,name=guild_name,json=guildName,proto3" json:"guild_name,omitempty"`                                                   // 公会名称
	AvatarId      string                 `protobuf:"bytes,7,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`                                                      // 头像ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityRankEntry) Reset() {
	*x = ActivityRankEntry{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityRankEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRankEntry) ProtoMessage() {}

func (x *ActivityRankEntry) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRankEntry.ProtoReflect.Descriptor instead.
func (*ActivityRankEntry) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{14}
}

func (x *ActivityRankEntry) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ActivityRankEntry) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ActivityRankEntry) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ActivityRankEntry) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ActivityRankEntry) GetStats() map[string]int32 {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *ActivityRankEntry) GetGuildName() string {
	if x != nil {
		return x.GuildName
	}
	return ""
}

func (x *ActivityRankEntry) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

// 活动玩家排名
type ActivityPlayerRank struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	CurrentRank         int32                  `protobuf:"varint,1,opt,name=current_rank,json=currentRank,proto3" json:"current_rank,omitempty"`                             // 当前排名
	Score               int32                  `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`                                                            // 当前积分
	Percentage          int32                  `protobuf:"varint,3,opt,name=percentage,proto3" json:"percentage,omitempty"`                                                  // 排名百分比
	IsEligibleForReward bool                   `protobuf:"varint,4,opt,name=is_eligible_for_reward,json=isEligibleForReward,proto3" json:"is_eligible_for_reward,omitempty"` // 是否有奖励资格
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ActivityPlayerRank) Reset() {
	*x = ActivityPlayerRank{}
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityPlayerRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPlayerRank) ProtoMessage() {}

func (x *ActivityPlayerRank) ProtoReflect() protoreflect.Message {
	mi := &file_slg_proto_v1_1_0_event_activity_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPlayerRank.ProtoReflect.Descriptor instead.
func (*ActivityPlayerRank) Descriptor() ([]byte, []int) {
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP(), []int{15}
}

func (x *ActivityPlayerRank) GetCurrentRank() int32 {
	if x != nil {
		return x.CurrentRank
	}
	return 0
}

func (x *ActivityPlayerRank) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ActivityPlayerRank) GetPercentage() int32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *ActivityPlayerRank) GetIsEligibleForReward() bool {
	if x != nil {
		return x.IsEligibleForReward
	}
	return false
}

var File_slg_proto_v1_1_0_event_activity_proto protoreflect.FileDescriptor

const file_slg_proto_v1_1_0_event_activity_proto_rawDesc = "" +
	"\n" +
	"%slg-proto/v1.1.0/event/activity.proto\x12\fslg.event.v1\x1a#slg-proto/v1.1.0/common/types.proto\"z\n" +
	"\x13ActivityInfoRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12!\n" +
	"\factivity_ids\x18\x02 \x03(\tR\vactivityIds\x12#\n" +
	"\rinclude_ended\x18\x03 \x01(\bR\fincludeEnded\"o\n" +
	"\x14ActivityInfoResponse\x126\n" +
	"\n" +
	"activities\x18\x01 \x03(\v2\x16.slg.event.v1.ActivityR\n" +
	"activities\x12\x1f\n" +
	"\vserver_time\x18\x02 \x01(\x03R\n" +
	"serverTime\"\xfe\x01\n" +
	"\x1aParticipateActivityRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vactivity_id\x18\x02 \x01(\tR\n" +
	"activityId\x12\x19\n" +
	"\bstage_id\x18\x03 \x01(\tR\astageId\x12L\n" +
	"\x06params\x18\x04 \x03(\v24.slg.event.v1.ParticipateActivityRequest.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe9\x01\n" +
	"\x1bParticipateActivityResponse\x124\n" +
	"\x06result\x18\x01 \x01(\x0e2\x1c.slg.event.v1.ActivityResultR\x06result\x124\n" +
	"\x06reward\x18\x02 \x01(\v2\x1c.slg.event.v1.ActivityRewardR\x06reward\x12:\n" +
	"\bprogress\x18\x03 \x01(\v2\x1e.slg.event.v1.ActivityProgressR\bprogress\x12\"\n" +
	"\rnext_stage_id\x18\x04 \x01(\tR\vnextStageId\"\xc6\x01\n" +
	"\x1aActivityLeaderboardRequest\x12\x1f\n" +
	"\vactivity_id\x18\x01 \x01(\tR\n" +
	"activityId\x12\x19\n" +
	"\bstage_id\x18\x02 \x01(\tR\astageId\x12;\n" +
	"\trank_type\x18\x03 \x01(\x0e2\x1e.slg.event.v1.ActivityRankTypeR\brankType\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\"\xbc\x01\n" +
	"\x1bActivityLeaderboardResponse\x129\n" +
	"\aentries\x18\x01 \x03(\v2\x1f.slg.event.v1.ActivityRankEntryR\aentries\x12A\n" +
	"\vplayer_rank\x18\x02 \x01(\v2 .slg.event.v1.ActivityPlayerRankR\n" +
	"playerRank\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"y\n" +
	"\x1aClaimActivityRewardRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vactivity_id\x18\x02 \x01(\tR\n" +
	"activityId\x12\x1d\n" +
	"\n" +
	"reward_ids\x18\x03 \x03(\tR\trewardIds\"\x91\x01\n" +
	"\x1bClaimActivityRewardResponse\x126\n" +
	"\arewards\x18\x01 \x03(\v2\x1c.slg.event.v1.ActivityRewardR\arewards\x12:\n" +
	"\bprogress\x18\x02 \x01(\v2\x1e.slg.event.v1.ActivityProgressR\bprogress\"\xe5\x04\n" +
	"\bActivity\x12\x1f\n" +
	"\vactivity_id\x18\x01 \x01(\tR\n" +
	"activityId\x12#\n" +
	"\ractivity_name\x18\x02 \x01(\tR\factivityName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12?\n" +
	"\ractivity_type\x18\x04 \x01(\x0e2\x1a.slg.event.v1.ActivityTypeR\factivityType\x124\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1c.slg.event.v1.ActivityStatusR\x06status\x12\x1d\n" +
	"\n" +
	"start_time\x18\x06 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\a \x01(\x03R\aendTime\x123\n" +
	"\x06stages\x18\b \x03(\v2\x1b.slg.event.v1.ActivityStageR\x06stages\x126\n" +
	"\arewards\x18\t \x03(\v2\x1c.slg.event.v1.ActivityRewardR\arewards\x12=\n" +
	"\tcondition\x18\n" +
	" \x01(\v2\x1f.slg.event.v1.ActivityConditionR\tcondition\x12:\n" +
	"\x06config\x18\v \x03(\v2\".slg.event.v1.Activity.ConfigEntryR\x06config\x12\x1d\n" +
	"\n" +
	"banner_url\x18\f \x01(\tR\tbannerUrl\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x03\n" +
	"\rActivityStage\x12\x19\n" +
	"\bstage_id\x18\x01 \x01(\tR\astageId\x12\x1d\n" +
	"\n" +
	"stage_name\x18\x02 \x01(\tR\tstageName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x03R\aendTime\x120\n" +
	"\x05tasks\x18\x06 \x03(\v2\x1a.slg.event.v1.ActivityTaskR\x05tasks\x12>\n" +
	"\n" +
	"stage_type\x18\a \x01(\x0e2\x1f.slg.event.v1.ActivityStageTypeR\tstageType\x12Q\n" +
	"\frequirements\x18\b \x03(\v2-.slg.event.v1.ActivityStage.RequirementsEntryR\frequirements\x1a?\n" +
	"\x11RequirementsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x9a\x03\n" +
	"\fActivityTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_name\x18\x02 \x01(\tR\btaskName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12;\n" +
	"\ttask_type\x18\x04 \x01(\x0e2\x1e.slg.event.v1.ActivityTaskTypeR\btaskType\x12A\n" +
	"\atargets\x18\x05 \x03(\v2'.slg.event.v1.ActivityTask.TargetsEntryR\atargets\x124\n" +
	"\x06reward\x18\x06 \x01(\v2\x1c.slg.event.v1.ActivityRewardR\x06reward\x12#\n" +
	"\ris_repeatable\x18\a \x01(\bR\fisRepeatable\x12\x1b\n" +
	"\tmax_count\x18\b \x01(\x05R\bmaxCount\x1a:\n" +
	"\fTargetsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xcb\x04\n" +
	"\x10ActivityProgress\x12\x1f\n" +
	"\vactivity_id\x18\x01 \x01(\tR\n" +
	"activityId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12(\n" +
	"\x10current_stage_id\x18\x03 \x01(\tR\x0ecurrentStageId\x12U\n" +
	"\rtask_progress\x18\x04 \x03(\v20.slg.event.v1.ActivityProgress.TaskProgressEntryR\ftaskProgress\x12X\n" +
	"\x0estage_progress\x18\x05 \x03(\v21.slg.event.v1.ActivityProgress.StageProgressEntryR\rstageProgress\x12'\n" +
	"\x0fcompleted_tasks\x18\x06 \x03(\tR\x0ecompletedTasks\x12'\n" +
	"\x0fclaimed_rewards\x18\a \x03(\tR\x0eclaimedRewards\x12\x1f\n" +
	"\vtotal_score\x18\b \x01(\x05R\n" +
	"totalScore\x12(\n" +
	"\x10last_update_time\x18\t \x01(\x03R\x0elastUpdateTime\x1a?\n" +
	"\x11TaskProgressEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a@\n" +
	"\x12StageProgressEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xb3\x03\n" +
	"\x0eActivityReward\x12\x1b\n" +
	"\treward_id\x18\x01 \x01(\tR\brewardId\x12\x1f\n" +
	"\vreward_name\x18\x02 \x01(\tR\n" +
	"rewardName\x12A\n" +
	"\vreward_type\x18\x03 \x01(\x0e2 .slg.event.v1.ActivityRewardTypeR\n" +
	"rewardType\x12)\n" +
	"\x05items\x18\x04 \x03(\v2\x13.slg.common.v1.ItemR\x05items\x12\x1e\n" +
	"\n" +
	"experience\x18\x05 \x01(\x05R\n" +
	"experience\x12\x12\n" +
	"\x04gold\x18\x06 \x01(\x05R\x04gold\x12\x19\n" +
	"\btitle_id\x18\a \x01(\tR\atitleId\x12I\n" +
	"\tresources\x18\b \x03(\v2+.slg.event.v1.ActivityReward.ResourcesEntryR\tresources\x12\x1d\n" +
	"\n" +
	"is_claimed\x18\t \x01(\bR\tisClaimed\x1a<\n" +
	"\x0eResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xc6\x01\n" +
	"\x11ActivityCondition\x12\x1b\n" +
	"\tmin_level\x18\x01 \x01(\x05R\bminLevel\x12'\n" +
	"\x0frequired_quests\x18\x02 \x03(\tR\x0erequiredQuests\x12%\n" +
	"\x0erequired_items\x18\x03 \x03(\tR\rrequiredItems\x12\x19\n" +
	"\bvip_only\x18\x04 \x01(\bR\avipOnly\x12)\n" +
	"\x10forbidden_stages\x18\x05 \x03(\tR\x0fforbiddenStages\"\xb3\x02\n" +
	"\x11ActivityRankEntry\x12\x12\n" +
	"\x04rank\x18\x01 \x01(\x05R\x04rank\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x03 \x01(\tR\n" +
	"playerName\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x05R\x05score\x12@\n" +
	"\x05stats\x18\x05 \x03(\v2*.slg.event.v1.ActivityRankEntry.StatsEntryR\x05stats\x12\x1d\n" +
	"\n" +
	"guild_name\x18\x06 \x01(\tR\tguildName\x12\x1b\n" +
	"\tavatar_id\x18\a \x01(\tR\bavatarId\x1a8\n" +
	"\n" +
	"StatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xa2\x01\n" +
	"\x12ActivityPlayerRank\x12!\n" +
	"\fcurrent_rank\x18\x01 \x01(\x05R\vcurrentRank\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x05R\x05score\x12\x1e\n" +
	"\n" +
	"percentage\x18\x03 \x01(\x05R\n" +
	"percentage\x123\n" +
	"\x16is_eligible_for_reward\x18\x04 \x01(\bR\x13isEligibleForReward*\xfa\x01\n" +
	"\fActivityType\x12\x19\n" +
	"\x15ACTIVITY_TYPE_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13ACTIVITY_TYPE_LOGIN\x10\x01\x12\x18\n" +
	"\x14ACTIVITY_TYPE_BATTLE\x10\x02\x12\x19\n" +
	"\x15ACTIVITY_TYPE_COLLECT\x10\x03\x12\x19\n" +
	"\x15ACTIVITY_TYPE_RANKING\x10\x04\x12\x17\n" +
	"\x13ACTIVITY_TYPE_GUILD\x10\x05\x12\x1a\n" +
	"\x16ACTIVITY_TYPE_SPENDING\x10\x06\x12\x1a\n" +
	"\x16ACTIVITY_TYPE_FESTIVAL\x10\a\x12\x15\n" +
	"\x11ACTIVITY_TYPE_PVP\x10\b*\xbd\x01\n" +
	"\x0eActivityStatus\x12\x1b\n" +
	"\x17ACTIVITY_STATUS_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18ACTIVITY_STATUS_UPCOMING\x10\x01\x12\x1a\n" +
	"\x16ACTIVITY_STATUS_ACTIVE\x10\x02\x12\x1a\n" +
	"\x16ACTIVITY_STATUS_PAUSED\x10\x03\x12\x19\n" +
	"\x15ACTIVITY_STATUS_ENDED\x10\x04\x12\x1d\n" +
	"\x19ACTIVITY_STATUS_CANCELLED\x10\x05*\xb7\x01\n" +
	"\x11ActivityStageType\x12\x1f\n" +
	"\x1bACTIVITY_STAGE_TYPE_UNKNOWN\x10\x00\x12#\n" +
	"\x1fACTIVITY_STAGE_TYPE_PREPARATION\x10\x01\x12\x1c\n" +
	"\x18ACTIVITY_STAGE_TYPE_MAIN\x10\x02\x12\x1d\n" +
	"\x19ACTIVITY_STAGE_TYPE_BONUS\x10\x03\x12\x1f\n" +
	"\x1bACTIVITY_STAGE_TYPE_CLEANUP\x10\x04*\xae\x02\n" +
	"\x10ActivityTaskType\x12\x1e\n" +
	"\x1aACTIVITY_TASK_TYPE_UNKNOWN\x10\x00\x12#\n" +
	"\x1fACTIVITY_TASK_TYPE_KILL_MONSTER\x10\x01\x12#\n" +
	"\x1fACTIVITY_TASK_TYPE_COLLECT_ITEM\x10\x02\x12!\n" +
	"\x1dACTIVITY_TASK_TYPE_WIN_BATTLE\x10\x03\x12%\n" +
	"!ACTIVITY_TASK_TYPE_SPEND_RESOURCE\x10\x04\x12!\n" +
	"\x1dACTIVITY_TASK_TYPE_LOGIN_DAYS\x10\x05\x12#\n" +
	"\x1fACTIVITY_TASK_TYPE_GUILD_DONATE\x10\x06\x12\x1e\n" +
	"\x1aACTIVITY_TASK_TYPE_PVP_WIN\x10\a*\xe9\x01\n" +
	"\x12ActivityRewardType\x12 \n" +
	"\x1cACTIVITY_REWARD_TYPE_UNKNOWN\x10\x00\x12\"\n" +
	"\x1eACTIVITY_REWARD_TYPE_MILESTONE\x10\x01\x12 \n" +
	"\x1cACTIVITY_REWARD_TYPE_RANKING\x10\x02\x12&\n" +
	"\"ACTIVITY_REWARD_TYPE_PARTICIPATION\x10\x03\x12#\n" +
	"\x1fACTIVITY_REWARD_TYPE_COMPLETION\x10\x04\x12\x1e\n" +
	"\x1aACTIVITY_REWARD_TYPE_DAILY\x10\x05*\xb1\x01\n" +
	"\x10ActivityRankType\x12\x1e\n" +
	"\x1aACTIVITY_RANK_TYPE_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18ACTIVITY_RANK_TYPE_SCORE\x10\x01\x12\x1f\n" +
	"\x1bACTIVITY_RANK_TYPE_PROGRESS\x10\x02\x12\x1b\n" +
	"\x17ACTIVITY_RANK_TYPE_TIME\x10\x03\x12!\n" +
	"\x1dACTIVITY_RANK_TYPE_EFFICIENCY\x10\x04*\xeb\x01\n" +
	"\x0eActivityResult\x12\x1b\n" +
	"\x17ACTIVITY_RESULT_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17ACTIVITY_RESULT_SUCCESS\x10\x01\x12\x1a\n" +
	"\x16ACTIVITY_RESULT_FAILED\x10\x02\x12 \n" +
	"\x1cACTIVITY_RESULT_NOT_ELIGIBLE\x10\x03\x12%\n" +
	"!ACTIVITY_RESULT_ALREADY_COMPLETED\x10\x04\x12\x1f\n" +
	"\x1bACTIVITY_RESULT_NOT_STARTED\x10\x05\x12\x19\n" +
	"\x15ACTIVITY_RESULT_ENDED\x10\x06B5Z3GoSlgBenchmarkTest/generated/slg/v1_1_0/event;eventb\x06proto3"

var (
	file_slg_proto_v1_1_0_event_activity_proto_rawDescOnce sync.Once
	file_slg_proto_v1_1_0_event_activity_proto_rawDescData []byte
)

func file_slg_proto_v1_1_0_event_activity_proto_rawDescGZIP() []byte {
	file_slg_proto_v1_1_0_event_activity_proto_rawDescOnce.Do(func() {
		file_slg_proto_v1_1_0_event_activity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_slg_proto_v1_1_0_event_activity_proto_rawDesc), len(file_slg_proto_v1_1_0_event_activity_proto_rawDesc)))
	})
	return file_slg_proto_v1_1_0_event_activity_proto_rawDescData
}

var file_slg_proto_v1_1_0_event_activity_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_slg_proto_v1_1_0_event_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_slg_proto_v1_1_0_event_activity_proto_goTypes = []any{
	(ActivityType)(0),                   // 0: slg.event.v1.ActivityType
	(ActivityStatus)(0),                 // 1: slg.event.v1.ActivityStatus
	(ActivityStageType)(0),              // 2: slg.event.v1.ActivityStageType
	(ActivityTaskType)(0),               // 3: slg.event.v1.ActivityTaskType
	(ActivityRewardType)(0),             // 4: slg.event.v1.ActivityRewardType
	(ActivityRankType)(0),               // 5: slg.event.v1.ActivityRankType
	(ActivityResult)(0),                 // 6: slg.event.v1.ActivityResult
	(*ActivityInfoRequest)(nil),         // 7: slg.event.v1.ActivityInfoRequest
	(*ActivityInfoResponse)(nil),        // 8: slg.event.v1.ActivityInfoResponse
	(*ParticipateActivityRequest)(nil),  // 9: slg.event.v1.ParticipateActivityRequest
	(*ParticipateActivityResponse)(nil), // 10: slg.event.v1.ParticipateActivityResponse
	(*ActivityLeaderboardRequest)(nil),  // 11: slg.event.v1.ActivityLeaderboardRequest
	(*ActivityLeaderboardResponse)(nil), // 12: slg.event.v1.ActivityLeaderboardResponse
	(*ClaimActivityRewardRequest)(nil),  // 13: slg.event.v1.ClaimActivityRewardRequest
	(*ClaimActivityRewardResponse)(nil), // 14: slg.event.v1.ClaimActivityRewardResponse
	(*Activity)(nil),                    // 15: slg.event.v1.Activity
	(*ActivityStage)(nil),               // 16: slg.event.v1.ActivityStage
	(*ActivityTask)(nil),                // 17: slg.event.v1.ActivityTask
	(*ActivityProgress)(nil),            // 18: slg.event.v1.ActivityProgress
	(*ActivityReward)(nil),              // 19: slg.event.v1.ActivityReward
	(*ActivityCondition)(nil),           // 20: slg.event.v1.ActivityCondition
	(*ActivityRankEntry)(nil),           // 21: slg.event.v1.ActivityRankEntry
	(*ActivityPlayerRank)(nil),          // 22: slg.event.v1.ActivityPlayerRank
	nil,                                 // 23: slg.event.v1.ParticipateActivityRequest.ParamsEntry
	nil,                                 // 24: slg.event.v1.Activity.ConfigEntry
	nil,                                 // 25: slg.event.v1.ActivityStage.RequirementsEntry
	nil,                                 // 26: slg.event.v1.ActivityTask.TargetsEntry
	nil,                                 // 27: slg.event.v1.ActivityProgress.TaskProgressEntry
	nil,                                 // 28: slg.event.v1.ActivityProgress.StageProgressEntry
	nil,                                 // 29: slg.event.v1.ActivityReward.ResourcesEntry
	nil,                                 // 30: slg.event.v1.ActivityRankEntry.StatsEntry
	(*common.Item)(nil),                 // 31: slg.common.v1.Item
}
var file_slg_proto_v1_1_0_event_activity_proto_depIdxs = []int32{
	15, // 0: slg.event.v1.ActivityInfoResponse.activities:type_name -> slg.event.v1.Activity
	23, // 1: slg.event.v1.ParticipateActivityRequest.params:type_name -> slg.event.v1.ParticipateActivityRequest.ParamsEntry
	6,  // 2: slg.event.v1.ParticipateActivityResponse.result:type_name -> slg.event.v1.ActivityResult
	19, // 3: slg.event.v1.ParticipateActivityResponse.reward:type_name -> slg.event.v1.ActivityReward
	18, // 4: slg.event.v1.ParticipateActivityResponse.progress:type_name -> slg.event.v1.ActivityProgress
	5,  // 5: slg.event.v1.ActivityLeaderboardRequest.rank_type:type_name -> slg.event.v1.ActivityRankType
	21, // 6: slg.event.v1.ActivityLeaderboardResponse.entries:type_name -> slg.event.v1.ActivityRankEntry
	22, // 7: slg.event.v1.ActivityLeaderboardResponse.player_rank:type_name -> slg.event.v1.ActivityPlayerRank
	19, // 8: slg.event.v1.ClaimActivityRewardResponse.rewards:type_name -> slg.event.v1.ActivityReward
	18, // 9: slg.event.v1.ClaimActivityRewardResponse.progress:type_name -> slg.event.v1.ActivityProgress
	0,  // 10: slg.event.v1.Activity.activity_type:type_name -> slg.event.v1.ActivityType
	1,  // 11: slg.event.v1.Activity.status:type_name -> slg.event.v1.ActivityStatus
	16, // 12: slg.event.v1.Activity.stages:type_name -> slg.event.v1.ActivityStage
	19, // 13: slg.event.v1.Activity.rewards:type_name -> slg.event.v1.ActivityReward
	20, // 14: slg.event.v1.Activity.condition:type_name -> slg.event.v1.ActivityCondition
	24, // 15: slg.event.v1.Activity.config:type_name -> slg.event.v1.Activity.ConfigEntry
	17, // 16: slg.event.v1.ActivityStage.tasks:type_name -> slg.event.v1.ActivityTask
	2,  // 17: slg.event.v1.ActivityStage.stage_type:type_name -> slg.event.v1.ActivityStageType
	25, // 18: slg.event.v1.ActivityStage.requirements:type_name -> slg.event.v1.ActivityStage.RequirementsEntry
	3,  // 19: slg.event.v1.ActivityTask.task_type:type_name -> slg.event.v1.ActivityTaskType
	26, // 20: slg.event.v1.ActivityTask.targets:type_name -> slg.event.v1.ActivityTask.TargetsEntry
	19, // 21: slg.event.v1.ActivityTask.reward:type_name -> slg.event.v1.ActivityReward
	27, // 22: slg.event.v1.ActivityProgress.task_progress:type_name -> slg.event.v1.ActivityProgress.TaskProgressEntry
	28, // 23: slg.event.v1.ActivityProgress.stage_progress:type_name -> slg.event.v1.ActivityProgress.StageProgressEntry
	4,  // 24: slg.event.v1.ActivityReward.reward_type:type_name -> slg.event.v1.ActivityRewardType
	31, // 25: slg.event.v1.ActivityReward.items:type_name -> slg.common.v1.Item
	29, // 26: slg.event.v1.ActivityReward.resources:type_name -> slg.event.v1.ActivityReward.ResourcesEntry
	30, // 27: slg.event.v1.ActivityRankEntry.stats:type_name -> slg.event.v1.ActivityRankEntry.StatsEntry
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_slg_proto_v1_1_0_event_activity_proto_init() }
func file_slg_proto_v1_1_0_event_activity_proto_init() {
	if File_slg_proto_v1_1_0_event_activity_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_slg_proto_v1_1_0_event_activity_proto_rawDesc), len(file_slg_proto_v1_1_0_event_activity_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_slg_proto_v1_1_0_event_activity_proto_goTypes,
		DependencyIndexes: file_slg_proto_v1_1_0_event_activity_proto_depIdxs,
		EnumInfos:         file_slg_proto_v1_1_0_event_activity_proto_enumTypes,
		MessageInfos:      file_slg_proto_v1_1_0_event_activity_proto_msgTypes,
	}.Build()
	File_slg_proto_v1_1_0_event_activity_proto = out.File
	file_slg_proto_v1_1_0_event_activity_proto_goTypes = nil
	file_slg_proto_v1_1_0_event_activity_proto_depIdxs = nil
}
