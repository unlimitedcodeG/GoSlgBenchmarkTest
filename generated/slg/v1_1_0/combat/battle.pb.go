// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1.1.0/combat/battle.proto

package combat

import (
	common "GoSlgBenchmarkTest/generated/slg/v1_1_0/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举定义
type BattleType int32

const (
	BattleType_BATTLE_TYPE_UNKNOWN   BattleType = 0
	BattleType_BATTLE_TYPE_PVE       BattleType = 1 // PVE战斗
	BattleType_BATTLE_TYPE_PVP       BattleType = 2 // PVP战斗
	BattleType_BATTLE_TYPE_GUILD_WAR BattleType = 3 // 公会�?
	BattleType_BATTLE_TYPE_ARENA     BattleType = 4 // 竞技�?
	BattleType_BATTLE_TYPE_RAID      BattleType = 5 // 团队副本
	// v1.1.0 新增
	BattleType_BATTLE_TYPE_TOURNAMENT BattleType = 6 // 锦标�?
	BattleType_BATTLE_TYPE_SIEGE      BattleType = 7 // 攻城�?
)

// Enum value maps for BattleType.
var (
	BattleType_name = map[int32]string{
		0: "BATTLE_TYPE_UNKNOWN",
		1: "BATTLE_TYPE_PVE",
		2: "BATTLE_TYPE_PVP",
		3: "BATTLE_TYPE_GUILD_WAR",
		4: "BATTLE_TYPE_ARENA",
		5: "BATTLE_TYPE_RAID",
		6: "BATTLE_TYPE_TOURNAMENT",
		7: "BATTLE_TYPE_SIEGE",
	}
	BattleType_value = map[string]int32{
		"BATTLE_TYPE_UNKNOWN":    0,
		"BATTLE_TYPE_PVE":        1,
		"BATTLE_TYPE_PVP":        2,
		"BATTLE_TYPE_GUILD_WAR":  3,
		"BATTLE_TYPE_ARENA":      4,
		"BATTLE_TYPE_RAID":       5,
		"BATTLE_TYPE_TOURNAMENT": 6,
		"BATTLE_TYPE_SIEGE":      7,
	}
)

func (x BattleType) Enum() *BattleType {
	p := new(BattleType)
	*p = x
	return p
}

func (x BattleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[0].Descriptor()
}

func (BattleType) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[0]
}

func (x BattleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleType.Descriptor instead.
func (BattleType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{0}
}

type BattleResult int32

const (
	BattleResult_BATTLE_RESULT_UNKNOWN BattleResult = 0
	BattleResult_BATTLE_RESULT_VICTORY BattleResult = 1 // 胜利
	BattleResult_BATTLE_RESULT_DEFEAT  BattleResult = 2 // 失败
	BattleResult_BATTLE_RESULT_DRAW    BattleResult = 3 // 平局
	BattleResult_BATTLE_RESULT_TIMEOUT BattleResult = 4 // 超时
	// v1.1.0 新增
	BattleResult_BATTLE_RESULT_SURRENDER BattleResult = 5 // 投降
)

// Enum value maps for BattleResult.
var (
	BattleResult_name = map[int32]string{
		0: "BATTLE_RESULT_UNKNOWN",
		1: "BATTLE_RESULT_VICTORY",
		2: "BATTLE_RESULT_DEFEAT",
		3: "BATTLE_RESULT_DRAW",
		4: "BATTLE_RESULT_TIMEOUT",
		5: "BATTLE_RESULT_SURRENDER",
	}
	BattleResult_value = map[string]int32{
		"BATTLE_RESULT_UNKNOWN":   0,
		"BATTLE_RESULT_VICTORY":   1,
		"BATTLE_RESULT_DEFEAT":    2,
		"BATTLE_RESULT_DRAW":      3,
		"BATTLE_RESULT_TIMEOUT":   4,
		"BATTLE_RESULT_SURRENDER": 5,
	}
)

func (x BattleResult) Enum() *BattleResult {
	p := new(BattleResult)
	*p = x
	return p
}

func (x BattleResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleResult) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[1].Descriptor()
}

func (BattleResult) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[1]
}

func (x BattleResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleResult.Descriptor instead.
func (BattleResult) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{1}
}

type BattlePhase int32

const (
	BattlePhase_BATTLE_PHASE_UNKNOWN   BattlePhase = 0
	BattlePhase_BATTLE_PHASE_PREPARING BattlePhase = 1 // 准备阶段
	BattlePhase_BATTLE_PHASE_FIGHTING  BattlePhase = 2 // 战斗阶段
	BattlePhase_BATTLE_PHASE_ENDING    BattlePhase = 3 // 结束阶段
	// v1.1.0 新增
	BattlePhase_BATTLE_PHASE_COOLDOWN BattlePhase = 4 // 冷却阶段
)

// Enum value maps for BattlePhase.
var (
	BattlePhase_name = map[int32]string{
		0: "BATTLE_PHASE_UNKNOWN",
		1: "BATTLE_PHASE_PREPARING",
		2: "BATTLE_PHASE_FIGHTING",
		3: "BATTLE_PHASE_ENDING",
		4: "BATTLE_PHASE_COOLDOWN",
	}
	BattlePhase_value = map[string]int32{
		"BATTLE_PHASE_UNKNOWN":   0,
		"BATTLE_PHASE_PREPARING": 1,
		"BATTLE_PHASE_FIGHTING":  2,
		"BATTLE_PHASE_ENDING":    3,
		"BATTLE_PHASE_COOLDOWN":  4,
	}
)

func (x BattlePhase) Enum() *BattlePhase {
	p := new(BattlePhase)
	*p = x
	return p
}

func (x BattlePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattlePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[2].Descriptor()
}

func (BattlePhase) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[2]
}

func (x BattlePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattlePhase.Descriptor instead.
func (BattlePhase) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{2}
}

type UnitStatus int32

const (
	UnitStatus_UNIT_STATUS_UNKNOWN   UnitStatus = 0
	UnitStatus_UNIT_STATUS_IDLE      UnitStatus = 1 // 待机
	UnitStatus_UNIT_STATUS_MOVING    UnitStatus = 2 // 移动�?
	UnitStatus_UNIT_STATUS_ATTACKING UnitStatus = 3 // 攻击�?
	UnitStatus_UNIT_STATUS_CASTING   UnitStatus = 4 // 施法�?
	UnitStatus_UNIT_STATUS_STUNNED   UnitStatus = 5 // 晕眩
	UnitStatus_UNIT_STATUS_DEAD      UnitStatus = 6 // 死亡
	// v1.1.0 新增
	UnitStatus_UNIT_STATUS_CHANNELING UnitStatus = 7 // 引导�?
	UnitStatus_UNIT_STATUS_INVISIBLE  UnitStatus = 8 // 隐身
)

// Enum value maps for UnitStatus.
var (
	UnitStatus_name = map[int32]string{
		0: "UNIT_STATUS_UNKNOWN",
		1: "UNIT_STATUS_IDLE",
		2: "UNIT_STATUS_MOVING",
		3: "UNIT_STATUS_ATTACKING",
		4: "UNIT_STATUS_CASTING",
		5: "UNIT_STATUS_STUNNED",
		6: "UNIT_STATUS_DEAD",
		7: "UNIT_STATUS_CHANNELING",
		8: "UNIT_STATUS_INVISIBLE",
	}
	UnitStatus_value = map[string]int32{
		"UNIT_STATUS_UNKNOWN":    0,
		"UNIT_STATUS_IDLE":       1,
		"UNIT_STATUS_MOVING":     2,
		"UNIT_STATUS_ATTACKING":  3,
		"UNIT_STATUS_CASTING":    4,
		"UNIT_STATUS_STUNNED":    5,
		"UNIT_STATUS_DEAD":       6,
		"UNIT_STATUS_CHANNELING": 7,
		"UNIT_STATUS_INVISIBLE":  8,
	}
)

func (x UnitStatus) Enum() *UnitStatus {
	p := new(UnitStatus)
	*p = x
	return p
}

func (x UnitStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[3].Descriptor()
}

func (UnitStatus) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[3]
}

func (x UnitStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitStatus.Descriptor instead.
func (UnitStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{3}
}

type ActionType int32

const (
	ActionType_ACTION_TYPE_UNKNOWN ActionType = 0
	ActionType_ACTION_TYPE_MOVE    ActionType = 1 // 移动
	ActionType_ACTION_TYPE_ATTACK  ActionType = 2 // 普通攻�?
	ActionType_ACTION_TYPE_SKILL   ActionType = 3 // 技能攻�?
	ActionType_ACTION_TYPE_HEAL    ActionType = 4 // 治疗
	ActionType_ACTION_TYPE_BUFF    ActionType = 5 // 增益
	ActionType_ACTION_TYPE_DEBUFF  ActionType = 6 // 减益
	// v1.1.0 新增
	ActionType_ACTION_TYPE_COMBO    ActionType = 7 // 连击
	ActionType_ACTION_TYPE_ULTIMATE ActionType = 8 // 终极技�?
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_UNKNOWN",
		1: "ACTION_TYPE_MOVE",
		2: "ACTION_TYPE_ATTACK",
		3: "ACTION_TYPE_SKILL",
		4: "ACTION_TYPE_HEAL",
		5: "ACTION_TYPE_BUFF",
		6: "ACTION_TYPE_DEBUFF",
		7: "ACTION_TYPE_COMBO",
		8: "ACTION_TYPE_ULTIMATE",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNKNOWN":  0,
		"ACTION_TYPE_MOVE":     1,
		"ACTION_TYPE_ATTACK":   2,
		"ACTION_TYPE_SKILL":    3,
		"ACTION_TYPE_HEAL":     4,
		"ACTION_TYPE_BUFF":     5,
		"ACTION_TYPE_DEBUFF":   6,
		"ACTION_TYPE_COMBO":    7,
		"ACTION_TYPE_ULTIMATE": 8,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[4].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[4]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{4}
}

type BuffType int32

const (
	BuffType_BUFF_TYPE_UNKNOWN      BuffType = 0
	BuffType_BUFF_TYPE_ATTACK_UP    BuffType = 1 // 攻击力提�?
	BuffType_BUFF_TYPE_DEFENSE_UP   BuffType = 2 // 防御力提�?
	BuffType_BUFF_TYPE_SPEED_UP     BuffType = 3 // 速度提升
	BuffType_BUFF_TYPE_ATTACK_DOWN  BuffType = 4 // 攻击力降�?
	BuffType_BUFF_TYPE_DEFENSE_DOWN BuffType = 5 // 防御力降�?
	BuffType_BUFF_TYPE_SPEED_DOWN   BuffType = 6 // 速度降低
	BuffType_BUFF_TYPE_POISON       BuffType = 7 // 中毒
	BuffType_BUFF_TYPE_REGENERATION BuffType = 8 // 回复
	// v1.1.0 新增
	BuffType_BUFF_TYPE_SHIELD  BuffType = 9  // 护盾
	BuffType_BUFF_TYPE_REFLECT BuffType = 10 // 反射
	BuffType_BUFF_TYPE_IMMUNE  BuffType = 11 // 免疫
)

// Enum value maps for BuffType.
var (
	BuffType_name = map[int32]string{
		0:  "BUFF_TYPE_UNKNOWN",
		1:  "BUFF_TYPE_ATTACK_UP",
		2:  "BUFF_TYPE_DEFENSE_UP",
		3:  "BUFF_TYPE_SPEED_UP",
		4:  "BUFF_TYPE_ATTACK_DOWN",
		5:  "BUFF_TYPE_DEFENSE_DOWN",
		6:  "BUFF_TYPE_SPEED_DOWN",
		7:  "BUFF_TYPE_POISON",
		8:  "BUFF_TYPE_REGENERATION",
		9:  "BUFF_TYPE_SHIELD",
		10: "BUFF_TYPE_REFLECT",
		11: "BUFF_TYPE_IMMUNE",
	}
	BuffType_value = map[string]int32{
		"BUFF_TYPE_UNKNOWN":      0,
		"BUFF_TYPE_ATTACK_UP":    1,
		"BUFF_TYPE_DEFENSE_UP":   2,
		"BUFF_TYPE_SPEED_UP":     3,
		"BUFF_TYPE_ATTACK_DOWN":  4,
		"BUFF_TYPE_DEFENSE_DOWN": 5,
		"BUFF_TYPE_SPEED_DOWN":   6,
		"BUFF_TYPE_POISON":       7,
		"BUFF_TYPE_REGENERATION": 8,
		"BUFF_TYPE_SHIELD":       9,
		"BUFF_TYPE_REFLECT":      10,
		"BUFF_TYPE_IMMUNE":       11,
	}
)

func (x BuffType) Enum() *BuffType {
	p := new(BuffType)
	*p = x
	return p
}

func (x BuffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuffType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[5].Descriptor()
}

func (BuffType) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[5]
}

func (x BuffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuffType.Descriptor instead.
func (BuffType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{5}
}

// v1.1.0 新增枚举
type EnvironmentType int32

const (
	EnvironmentType_ENVIRONMENT_TYPE_UNKNOWN        EnvironmentType = 0
	EnvironmentType_ENVIRONMENT_TYPE_FIRE_RAIN      EnvironmentType = 1 // 火雨
	EnvironmentType_ENVIRONMENT_TYPE_ICE_STORM      EnvironmentType = 2 // 冰暴
	EnvironmentType_ENVIRONMENT_TYPE_HEALING_SPRING EnvironmentType = 3 // 治疗之泉
	EnvironmentType_ENVIRONMENT_TYPE_MAGIC_FIELD    EnvironmentType = 4 // 魔法�?
)

// Enum value maps for EnvironmentType.
var (
	EnvironmentType_name = map[int32]string{
		0: "ENVIRONMENT_TYPE_UNKNOWN",
		1: "ENVIRONMENT_TYPE_FIRE_RAIN",
		2: "ENVIRONMENT_TYPE_ICE_STORM",
		3: "ENVIRONMENT_TYPE_HEALING_SPRING",
		4: "ENVIRONMENT_TYPE_MAGIC_FIELD",
	}
	EnvironmentType_value = map[string]int32{
		"ENVIRONMENT_TYPE_UNKNOWN":        0,
		"ENVIRONMENT_TYPE_FIRE_RAIN":      1,
		"ENVIRONMENT_TYPE_ICE_STORM":      2,
		"ENVIRONMENT_TYPE_HEALING_SPRING": 3,
		"ENVIRONMENT_TYPE_MAGIC_FIELD":    4,
	}
)

func (x EnvironmentType) Enum() *EnvironmentType {
	p := new(EnvironmentType)
	*p = x
	return p
}

func (x EnvironmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnvironmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_combat_battle_proto_enumTypes[6].Descriptor()
}

func (EnvironmentType) Type() protoreflect.EnumType {
	return &file_v1_1_0_combat_battle_proto_enumTypes[6]
}

func (x EnvironmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnvironmentType.Descriptor instead.
func (EnvironmentType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{6}
}

// 战斗请求
type BattleRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	BattleId   string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`                                          // 战斗ID
	PlayerId   string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                          // 玩家ID
	BattleType BattleType             `protobuf:"varint,3,opt,name=battle_type,json=battleType,proto3,enum=slg.combat.v1_1_0.BattleType" json:"battle_type,omitempty"` // 战斗类型
	UnitIds    []string               `protobuf:"bytes,4,rep,name=unit_ids,json=unitIds,proto3" json:"unit_ids,omitempty"`                                             // 参战单位ID列表
	TargetPos  *common.Position       `protobuf:"bytes,5,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`                                       // 目标位置
	Timestamp  int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                       // 请求时间�?
	// v1.1.0 新增字段
	FormationId    string           `protobuf:"bytes,7,opt,name=formation_id,json=formationId,proto3" json:"formation_id,omitempty"`                                                                                     // 阵型ID
	BattleSettings map[string]int32 `protobuf:"bytes,8,rep,name=battle_settings,json=battleSettings,proto3" json:"battle_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 战斗设置
	PresetSkills   []string         `protobuf:"bytes,9,rep,name=preset_skills,json=presetSkills,proto3" json:"preset_skills,omitempty"`                                                                                  // 预设技能列�?
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BattleRequest) Reset() {
	*x = BattleRequest{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRequest) ProtoMessage() {}

func (x *BattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRequest.ProtoReflect.Descriptor instead.
func (*BattleRequest) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{0}
}

func (x *BattleRequest) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BattleRequest) GetBattleType() BattleType {
	if x != nil {
		return x.BattleType
	}
	return BattleType_BATTLE_TYPE_UNKNOWN
}

func (x *BattleRequest) GetUnitIds() []string {
	if x != nil {
		return x.UnitIds
	}
	return nil
}

func (x *BattleRequest) GetTargetPos() *common.Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *BattleRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BattleRequest) GetFormationId() string {
	if x != nil {
		return x.FormationId
	}
	return ""
}

func (x *BattleRequest) GetBattleSettings() map[string]int32 {
	if x != nil {
		return x.BattleSettings
	}
	return nil
}

func (x *BattleRequest) GetPresetSkills() []string {
	if x != nil {
		return x.PresetSkills
	}
	return nil
}

// 战斗响应
type BattleResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	BattleId    string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`                  // 战斗ID
	Result      BattleResult           `protobuf:"varint,2,opt,name=result,proto3,enum=slg.combat.v1_1_0.BattleResult" json:"result,omitempty"` // 战斗结果
	BattleUnits []*BattleUnit          `protobuf:"bytes,3,rep,name=battle_units,json=battleUnits,proto3" json:"battle_units,omitempty"`         // 战斗单位状�?
	Reward      *BattleReward          `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`                                      // 战斗奖励
	DurationMs  int32                  `protobuf:"varint,5,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`           // 战斗持续时间(毫秒)
	// v1.1.0 新增字段
	Statistics    *BattleStatistics `protobuf:"bytes,6,opt,name=statistics,proto3" json:"statistics,omitempty"`                   // 战斗统计
	MvpUnits      []string          `protobuf:"bytes,7,rep,name=mvp_units,json=mvpUnits,proto3" json:"mvp_units,omitempty"`       // MVP单位列表
	ReplayData    string            `protobuf:"bytes,8,opt,name=replay_data,json=replayData,proto3" json:"replay_data,omitempty"` // 回放数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleResponse) Reset() {
	*x = BattleResponse{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleResponse) ProtoMessage() {}

func (x *BattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleResponse.ProtoReflect.Descriptor instead.
func (*BattleResponse) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{1}
}

func (x *BattleResponse) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleResponse) GetResult() BattleResult {
	if x != nil {
		return x.Result
	}
	return BattleResult_BATTLE_RESULT_UNKNOWN
}

func (x *BattleResponse) GetBattleUnits() []*BattleUnit {
	if x != nil {
		return x.BattleUnits
	}
	return nil
}

func (x *BattleResponse) GetReward() *BattleReward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *BattleResponse) GetDurationMs() int32 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *BattleResponse) GetStatistics() *BattleStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *BattleResponse) GetMvpUnits() []string {
	if x != nil {
		return x.MvpUnits
	}
	return nil
}

func (x *BattleResponse) GetReplayData() string {
	if x != nil {
		return x.ReplayData
	}
	return ""
}

// 战斗状态推�?
type BattleStatePush struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	BattleId  string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`               // 战斗ID
	FrameSeq  uint64                 `protobuf:"varint,2,opt,name=frame_seq,json=frameSeq,proto3" json:"frame_seq,omitempty"`              // 帧序列号
	Actions   []*BattleAction        `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`                                 // 本帧动作列表
	Phase     BattlePhase            `protobuf:"varint,4,opt,name=phase,proto3,enum=slg.combat.v1_1_0.BattlePhase" json:"phase,omitempty"` // 战斗阶段
	Timestamp int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // 服务器时间戳
	// v1.1.0 新增字段
	Environment   *EnvironmentEffect `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`                       // 环境效果
	ActiveSkills  []string           `protobuf:"bytes,7,rep,name=active_skills,json=activeSkills,proto3" json:"active_skills,omitempty"` // 激活技能列�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleStatePush) Reset() {
	*x = BattleStatePush{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleStatePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleStatePush) ProtoMessage() {}

func (x *BattleStatePush) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleStatePush.ProtoReflect.Descriptor instead.
func (*BattleStatePush) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{2}
}

func (x *BattleStatePush) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleStatePush) GetFrameSeq() uint64 {
	if x != nil {
		return x.FrameSeq
	}
	return 0
}

func (x *BattleStatePush) GetActions() []*BattleAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *BattleStatePush) GetPhase() BattlePhase {
	if x != nil {
		return x.Phase
	}
	return BattlePhase_BATTLE_PHASE_UNKNOWN
}

func (x *BattleStatePush) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BattleStatePush) GetEnvironment() *EnvironmentEffect {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *BattleStatePush) GetActiveSkills() []string {
	if x != nil {
		return x.ActiveSkills
	}
	return nil
}

// 战斗单位
type BattleUnit struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	UnitId     string                 `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`                      // 单位ID
	TemplateId string                 `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`          // 模板ID
	Hp         int32                  `protobuf:"varint,3,opt,name=hp,proto3" json:"hp,omitempty"`                                           // 当前血�?
	MaxHp      int32                  `protobuf:"varint,4,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`                        // 最大血�?
	Mp         int32                  `protobuf:"varint,5,opt,name=mp,proto3" json:"mp,omitempty"`                                           // 当前魔法�?
	MaxMp      int32                  `protobuf:"varint,6,opt,name=max_mp,json=maxMp,proto3" json:"max_mp,omitempty"`                        // 最大魔法�?
	Position   *common.Position       `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`                                // 位置
	Status     UnitStatus             `protobuf:"varint,8,opt,name=status,proto3,enum=slg.combat.v1_1_0.UnitStatus" json:"status,omitempty"` // 状�?
	Buffs      []*UnitBuff            `protobuf:"bytes,9,rep,name=buffs,proto3" json:"buffs,omitempty"`                                      // 增益/减益效果
	Stats      *UnitStats             `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`                                     // 单位属�?
	// v1.1.0 新增字段
	AvailableSkills []string       `protobuf:"bytes,11,rep,name=available_skills,json=availableSkills,proto3" json:"available_skills,omitempty"` // 可用技能列�?
	Energy          int32          `protobuf:"varint,12,opt,name=energy,proto3" json:"energy,omitempty"`                                         // 能量�?
	MaxEnergy       int32          `protobuf:"varint,13,opt,name=max_energy,json=maxEnergy,proto3" json:"max_energy,omitempty"`                  // 最大能量�?
	Equipment       *UnitEquipment `protobuf:"bytes,14,opt,name=equipment,proto3" json:"equipment,omitempty"`                                    // 装备信息
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BattleUnit) Reset() {
	*x = BattleUnit{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleUnit) ProtoMessage() {}

func (x *BattleUnit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleUnit.ProtoReflect.Descriptor instead.
func (*BattleUnit) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{3}
}

func (x *BattleUnit) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *BattleUnit) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *BattleUnit) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *BattleUnit) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *BattleUnit) GetMp() int32 {
	if x != nil {
		return x.Mp
	}
	return 0
}

func (x *BattleUnit) GetMaxMp() int32 {
	if x != nil {
		return x.MaxMp
	}
	return 0
}

func (x *BattleUnit) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BattleUnit) GetStatus() UnitStatus {
	if x != nil {
		return x.Status
	}
	return UnitStatus_UNIT_STATUS_UNKNOWN
}

func (x *BattleUnit) GetBuffs() []*UnitBuff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *BattleUnit) GetStats() *UnitStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *BattleUnit) GetAvailableSkills() []string {
	if x != nil {
		return x.AvailableSkills
	}
	return nil
}

func (x *BattleUnit) GetEnergy() int32 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *BattleUnit) GetMaxEnergy() int32 {
	if x != nil {
		return x.MaxEnergy
	}
	return 0
}

func (x *BattleUnit) GetEquipment() *UnitEquipment {
	if x != nil {
		return x.Equipment
	}
	return nil
}

// 战斗动作
type BattleAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionId      string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`                                          // 动作ID
	ActionType    ActionType             `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=slg.combat.v1_1_0.ActionType" json:"action_type,omitempty"` // 动作类型
	SourceUnitId  string                 `protobuf:"bytes,3,opt,name=source_unit_id,json=sourceUnitId,proto3" json:"source_unit_id,omitempty"`                            // 发起单位ID
	TargetUnitIds []string               `protobuf:"bytes,4,rep,name=target_unit_ids,json=targetUnitIds,proto3" json:"target_unit_ids,omitempty"`                         // 目标单位ID列表
	Damage        int32                  `protobuf:"varint,5,opt,name=damage,proto3" json:"damage,omitempty"`                                                             // 伤害�?
	Healing       int32                  `protobuf:"varint,6,opt,name=healing,proto3" json:"healing,omitempty"`                                                           // 治疗�?
	EffectIds     []string               `protobuf:"bytes,7,rep,name=effect_ids,json=effectIds,proto3" json:"effect_ids,omitempty"`                                       // 触发的效果ID列表
	TargetPos     *common.Position       `protobuf:"bytes,8,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`                                       // 目标位置
	// v1.1.0 新增字段
	SkillId          string   `protobuf:"bytes,9,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`                               // 技能ID
	IsCritical       bool     `protobuf:"varint,10,opt,name=is_critical,json=isCritical,proto3" json:"is_critical,omitempty"`                    // 是否暴击
	DamageMultiplier float32  `protobuf:"fixed32,11,opt,name=damage_multiplier,json=damageMultiplier,proto3" json:"damage_multiplier,omitempty"` // 伤害倍率
	ComboSkills      []string `protobuf:"bytes,12,rep,name=combo_skills,json=comboSkills,proto3" json:"combo_skills,omitempty"`                  // 连击技�?
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BattleAction) Reset() {
	*x = BattleAction{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleAction) ProtoMessage() {}

func (x *BattleAction) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleAction.ProtoReflect.Descriptor instead.
func (*BattleAction) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{4}
}

func (x *BattleAction) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *BattleAction) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_ACTION_TYPE_UNKNOWN
}

func (x *BattleAction) GetSourceUnitId() string {
	if x != nil {
		return x.SourceUnitId
	}
	return ""
}

func (x *BattleAction) GetTargetUnitIds() []string {
	if x != nil {
		return x.TargetUnitIds
	}
	return nil
}

func (x *BattleAction) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *BattleAction) GetHealing() int32 {
	if x != nil {
		return x.Healing
	}
	return 0
}

func (x *BattleAction) GetEffectIds() []string {
	if x != nil {
		return x.EffectIds
	}
	return nil
}

func (x *BattleAction) GetTargetPos() *common.Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *BattleAction) GetSkillId() string {
	if x != nil {
		return x.SkillId
	}
	return ""
}

func (x *BattleAction) GetIsCritical() bool {
	if x != nil {
		return x.IsCritical
	}
	return false
}

func (x *BattleAction) GetDamageMultiplier() float32 {
	if x != nil {
		return x.DamageMultiplier
	}
	return 0
}

func (x *BattleAction) GetComboSkills() []string {
	if x != nil {
		return x.ComboSkills
	}
	return nil
}

// 战斗奖励
type BattleReward struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Exp   int32                  `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`     // 经验�?
	Gold  int32                  `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`   // 金币
	Items []*common.Item         `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`  // 物品奖励
	Honor int32                  `protobuf:"varint,4,opt,name=honor,proto3" json:"honor,omitempty"` // 荣誉�?
	// v1.1.0 新增字段
	PvpRating         int32    `protobuf:"varint,5,opt,name=pvp_rating,json=pvpRating,proto3" json:"pvp_rating,omitempty"`                         // PVP评分变化
	Achievements      []string `protobuf:"bytes,6,rep,name=achievements,proto3" json:"achievements,omitempty"`                                     // 成就奖励
	GuildContribution int32    `protobuf:"varint,7,opt,name=guild_contribution,json=guildContribution,proto3" json:"guild_contribution,omitempty"` // 公会贡献
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BattleReward) Reset() {
	*x = BattleReward{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleReward) ProtoMessage() {}

func (x *BattleReward) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleReward.ProtoReflect.Descriptor instead.
func (*BattleReward) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{5}
}

func (x *BattleReward) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *BattleReward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *BattleReward) GetItems() []*common.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BattleReward) GetHonor() int32 {
	if x != nil {
		return x.Honor
	}
	return 0
}

func (x *BattleReward) GetPvpRating() int32 {
	if x != nil {
		return x.PvpRating
	}
	return 0
}

func (x *BattleReward) GetAchievements() []string {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *BattleReward) GetGuildContribution() int32 {
	if x != nil {
		return x.GuildContribution
	}
	return 0
}

// 单位增益/减益效果
type UnitBuff struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	BuffId       string                 `protobuf:"bytes,1,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`                                                                                              // 效果ID
	BuffType     BuffType               `protobuf:"varint,2,opt,name=buff_type,json=buffType,proto3,enum=slg.combat.v1_1_0.BuffType" json:"buff_type,omitempty"`                                                       // 效果类型
	Duration     int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // 持续时间(�?
	StackCount   int32                  `protobuf:"varint,4,opt,name=stack_count,json=stackCount,proto3" json:"stack_count,omitempty"`                                                                                 // 叠加层数
	EffectValues map[string]int32       `protobuf:"bytes,5,rep,name=effect_values,json=effectValues,proto3" json:"effect_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 效果数�?
	// v1.1.0 新增字段
	SourceSkillId string `protobuf:"bytes,6,opt,name=source_skill_id,json=sourceSkillId,proto3" json:"source_skill_id,omitempty"` // 来源技能ID
	IsDispellable bool   `protobuf:"varint,7,opt,name=is_dispellable,json=isDispellable,proto3" json:"is_dispellable,omitempty"`  // 是否可驱�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnitBuff) Reset() {
	*x = UnitBuff{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitBuff) ProtoMessage() {}

func (x *UnitBuff) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitBuff.ProtoReflect.Descriptor instead.
func (*UnitBuff) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{6}
}

func (x *UnitBuff) GetBuffId() string {
	if x != nil {
		return x.BuffId
	}
	return ""
}

func (x *UnitBuff) GetBuffType() BuffType {
	if x != nil {
		return x.BuffType
	}
	return BuffType_BUFF_TYPE_UNKNOWN
}

func (x *UnitBuff) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UnitBuff) GetStackCount() int32 {
	if x != nil {
		return x.StackCount
	}
	return 0
}

func (x *UnitBuff) GetEffectValues() map[string]int32 {
	if x != nil {
		return x.EffectValues
	}
	return nil
}

func (x *UnitBuff) GetSourceSkillId() string {
	if x != nil {
		return x.SourceSkillId
	}
	return ""
}

func (x *UnitBuff) GetIsDispellable() bool {
	if x != nil {
		return x.IsDispellable
	}
	return false
}

// 单位属�?
type UnitStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Attack         int32                  `protobuf:"varint,1,opt,name=attack,proto3" json:"attack,omitempty"`                                       // 攻击�?
	Defense        int32                  `protobuf:"varint,2,opt,name=defense,proto3" json:"defense,omitempty"`                                     // 防御�?
	Speed          int32                  `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`                                         // 速度
	CriticalRate   int32                  `protobuf:"varint,4,opt,name=critical_rate,json=criticalRate,proto3" json:"critical_rate,omitempty"`       // 暴击�?千分�?
	CriticalDamage int32                  `protobuf:"varint,5,opt,name=critical_damage,json=criticalDamage,proto3" json:"critical_damage,omitempty"` // 暴击伤害(千分�?
	Accuracy       int32                  `protobuf:"varint,6,opt,name=accuracy,proto3" json:"accuracy,omitempty"`                                   // 命中�?千分�?
	Dodge          int32                  `protobuf:"varint,7,opt,name=dodge,proto3" json:"dodge,omitempty"`                                         // 闪避�?千分�?
	// v1.1.0 新增字段
	MagicAttack   int32 `protobuf:"varint,8,opt,name=magic_attack,json=magicAttack,proto3" json:"magic_attack,omitempty"`    // 魔法攻击�?
	MagicDefense  int32 `protobuf:"varint,9,opt,name=magic_defense,json=magicDefense,proto3" json:"magic_defense,omitempty"` // 魔法防御�?
	Penetration   int32 `protobuf:"varint,10,opt,name=penetration,proto3" json:"penetration,omitempty"`                      // 穿透力
	Block         int32 `protobuf:"varint,11,opt,name=block,proto3" json:"block,omitempty"`                                  // 格挡�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnitStats) Reset() {
	*x = UnitStats{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitStats) ProtoMessage() {}

func (x *UnitStats) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitStats.ProtoReflect.Descriptor instead.
func (*UnitStats) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{7}
}

func (x *UnitStats) GetAttack() int32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *UnitStats) GetDefense() int32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *UnitStats) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *UnitStats) GetCriticalRate() int32 {
	if x != nil {
		return x.CriticalRate
	}
	return 0
}

func (x *UnitStats) GetCriticalDamage() int32 {
	if x != nil {
		return x.CriticalDamage
	}
	return 0
}

func (x *UnitStats) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *UnitStats) GetDodge() int32 {
	if x != nil {
		return x.Dodge
	}
	return 0
}

func (x *UnitStats) GetMagicAttack() int32 {
	if x != nil {
		return x.MagicAttack
	}
	return 0
}

func (x *UnitStats) GetMagicDefense() int32 {
	if x != nil {
		return x.MagicDefense
	}
	return 0
}

func (x *UnitStats) GetPenetration() int32 {
	if x != nil {
		return x.Penetration
	}
	return 0
}

func (x *UnitStats) GetBlock() int32 {
	if x != nil {
		return x.Block
	}
	return 0
}

// 战斗统计
type BattleStatistics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TotalDamageDealt int32                  `protobuf:"varint,1,opt,name=total_damage_dealt,json=totalDamageDealt,proto3" json:"total_damage_dealt,omitempty"`                                                       // 总伤害输�?
	TotalHealingDone int32                  `protobuf:"varint,2,opt,name=total_healing_done,json=totalHealingDone,proto3" json:"total_healing_done,omitempty"`                                                       // 总治疗量
	KillsCount       int32                  `protobuf:"varint,3,opt,name=kills_count,json=killsCount,proto3" json:"kills_count,omitempty"`                                                                           // 击杀�?
	DeathsCount      int32                  `protobuf:"varint,4,opt,name=deaths_count,json=deathsCount,proto3" json:"deaths_count,omitempty"`                                                                        // 死亡�?
	AssistsCount     int32                  `protobuf:"varint,5,opt,name=assists_count,json=assistsCount,proto3" json:"assists_count,omitempty"`                                                                     // 助攻�?
	SkillUsage       map[string]int32       `protobuf:"bytes,6,rep,name=skill_usage,json=skillUsage,proto3" json:"skill_usage,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 技能使用统�?
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BattleStatistics) Reset() {
	*x = BattleStatistics{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleStatistics) ProtoMessage() {}

func (x *BattleStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleStatistics.ProtoReflect.Descriptor instead.
func (*BattleStatistics) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{8}
}

func (x *BattleStatistics) GetTotalDamageDealt() int32 {
	if x != nil {
		return x.TotalDamageDealt
	}
	return 0
}

func (x *BattleStatistics) GetTotalHealingDone() int32 {
	if x != nil {
		return x.TotalHealingDone
	}
	return 0
}

func (x *BattleStatistics) GetKillsCount() int32 {
	if x != nil {
		return x.KillsCount
	}
	return 0
}

func (x *BattleStatistics) GetDeathsCount() int32 {
	if x != nil {
		return x.DeathsCount
	}
	return 0
}

func (x *BattleStatistics) GetAssistsCount() int32 {
	if x != nil {
		return x.AssistsCount
	}
	return 0
}

func (x *BattleStatistics) GetSkillUsage() map[string]int32 {
	if x != nil {
		return x.SkillUsage
	}
	return nil
}

// 环境效果
type EnvironmentEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectId      string                 `protobuf:"bytes,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`                                                                                         // 效果ID
	EffectType    EnvironmentType        `protobuf:"varint,2,opt,name=effect_type,json=effectType,proto3,enum=slg.combat.v1_1_0.EnvironmentType" json:"effect_type,omitempty"`                                           // 环境类型
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                        // 持续时间
	AffectedUnits []string               `protobuf:"bytes,4,rep,name=affected_units,json=affectedUnits,proto3" json:"affected_units,omitempty"`                                                                          // 受影响单�?
	EffectParams  map[string]float32     `protobuf:"bytes,5,rep,name=effect_params,json=effectParams,proto3" json:"effect_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 效果参数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentEffect) Reset() {
	*x = EnvironmentEffect{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentEffect) ProtoMessage() {}

func (x *EnvironmentEffect) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentEffect.ProtoReflect.Descriptor instead.
func (*EnvironmentEffect) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{9}
}

func (x *EnvironmentEffect) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *EnvironmentEffect) GetEffectType() EnvironmentType {
	if x != nil {
		return x.EffectType
	}
	return EnvironmentType_ENVIRONMENT_TYPE_UNKNOWN
}

func (x *EnvironmentEffect) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EnvironmentEffect) GetAffectedUnits() []string {
	if x != nil {
		return x.AffectedUnits
	}
	return nil
}

func (x *EnvironmentEffect) GetEffectParams() map[string]float32 {
	if x != nil {
		return x.EffectParams
	}
	return nil
}

// 单位装备
type UnitEquipment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WeaponId      string                 `protobuf:"bytes,1,opt,name=weapon_id,json=weaponId,proto3" json:"weapon_id,omitempty"`          // 武器ID
	ArmorId       string                 `protobuf:"bytes,2,opt,name=armor_id,json=armorId,proto3" json:"armor_id,omitempty"`             // 护甲ID
	AccessoryId   string                 `protobuf:"bytes,3,opt,name=accessory_id,json=accessoryId,proto3" json:"accessory_id,omitempty"` // 饰品ID
	Enchantments  []string               `protobuf:"bytes,4,rep,name=enchantments,proto3" json:"enchantments,omitempty"`                  // 附魔效果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnitEquipment) Reset() {
	*x = UnitEquipment{}
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitEquipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitEquipment) ProtoMessage() {}

func (x *UnitEquipment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_combat_battle_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitEquipment.ProtoReflect.Descriptor instead.
func (*UnitEquipment) Descriptor() ([]byte, []int) {
	return file_v1_1_0_combat_battle_proto_rawDescGZIP(), []int{10}
}

func (x *UnitEquipment) GetWeaponId() string {
	if x != nil {
		return x.WeaponId
	}
	return ""
}

func (x *UnitEquipment) GetArmorId() string {
	if x != nil {
		return x.ArmorId
	}
	return ""
}

func (x *UnitEquipment) GetAccessoryId() string {
	if x != nil {
		return x.AccessoryId
	}
	return ""
}

func (x *UnitEquipment) GetEnchantments() []string {
	if x != nil {
		return x.Enchantments
	}
	return nil
}

var File_v1_1_0_combat_battle_proto protoreflect.FileDescriptor

const file_v1_1_0_combat_battle_proto_rawDesc = "" +
	"\n" +
	"\x1av1.1.0/combat/battle.proto\x12\x11slg.combat.v1_1_0\x1a\x19v1.1.0/common/types.proto\"\xe8\x03\n" +
	"\rBattleRequest\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12>\n" +
	"\vbattle_type\x18\x03 \x01(\x0e2\x1d.slg.combat.v1_1_0.BattleTypeR\n" +
	"battleType\x12\x19\n" +
	"\bunit_ids\x18\x04 \x03(\tR\aunitIds\x12:\n" +
	"\n" +
	"target_pos\x18\x05 \x01(\v2\x1b.slg.common.v1_1_0.PositionR\ttargetPos\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12!\n" +
	"\fformation_id\x18\a \x01(\tR\vformationId\x12]\n" +
	"\x0fbattle_settings\x18\b \x03(\v24.slg.combat.v1_1_0.BattleRequest.BattleSettingsEntryR\x0ebattleSettings\x12#\n" +
	"\rpreset_skills\x18\t \x03(\tR\fpresetSkills\x1aA\n" +
	"\x13BattleSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x85\x03\n" +
	"\x0eBattleResponse\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x127\n" +
	"\x06result\x18\x02 \x01(\x0e2\x1f.slg.combat.v1_1_0.BattleResultR\x06result\x12@\n" +
	"\fbattle_units\x18\x03 \x03(\v2\x1d.slg.combat.v1_1_0.BattleUnitR\vbattleUnits\x127\n" +
	"\x06reward\x18\x04 \x01(\v2\x1f.slg.combat.v1_1_0.BattleRewardR\x06reward\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\x05R\n" +
	"durationMs\x12C\n" +
	"\n" +
	"statistics\x18\x06 \x01(\v2#.slg.combat.v1_1_0.BattleStatisticsR\n" +
	"statistics\x12\x1b\n" +
	"\tmvp_units\x18\a \x03(\tR\bmvpUnits\x12\x1f\n" +
	"\vreplay_data\x18\b \x01(\tR\n" +
	"replayData\"\xc7\x02\n" +
	"\x0fBattleStatePush\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x12\x1b\n" +
	"\tframe_seq\x18\x02 \x01(\x04R\bframeSeq\x129\n" +
	"\aactions\x18\x03 \x03(\v2\x1f.slg.combat.v1_1_0.BattleActionR\aactions\x124\n" +
	"\x05phase\x18\x04 \x01(\x0e2\x1e.slg.combat.v1_1_0.BattlePhaseR\x05phase\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12F\n" +
	"\venvironment\x18\x06 \x01(\v2$.slg.combat.v1_1_0.EnvironmentEffectR\venvironment\x12#\n" +
	"\ractive_skills\x18\a \x03(\tR\factiveSkills\"\x8d\x04\n" +
	"\n" +
	"BattleUnit\x12\x17\n" +
	"\aunit_id\x18\x01 \x01(\tR\x06unitId\x12\x1f\n" +
	"\vtemplate_id\x18\x02 \x01(\tR\n" +
	"templateId\x12\x0e\n" +
	"\x02hp\x18\x03 \x01(\x05R\x02hp\x12\x15\n" +
	"\x06max_hp\x18\x04 \x01(\x05R\x05maxHp\x12\x0e\n" +
	"\x02mp\x18\x05 \x01(\x05R\x02mp\x12\x15\n" +
	"\x06max_mp\x18\x06 \x01(\x05R\x05maxMp\x127\n" +
	"\bposition\x18\a \x01(\v2\x1b.slg.common.v1_1_0.PositionR\bposition\x125\n" +
	"\x06status\x18\b \x01(\x0e2\x1d.slg.combat.v1_1_0.UnitStatusR\x06status\x121\n" +
	"\x05buffs\x18\t \x03(\v2\x1b.slg.combat.v1_1_0.UnitBuffR\x05buffs\x122\n" +
	"\x05stats\x18\n" +
	" \x01(\v2\x1c.slg.combat.v1_1_0.UnitStatsR\x05stats\x12)\n" +
	"\x10available_skills\x18\v \x03(\tR\x0favailableSkills\x12\x16\n" +
	"\x06energy\x18\f \x01(\x05R\x06energy\x12\x1d\n" +
	"\n" +
	"max_energy\x18\r \x01(\x05R\tmaxEnergy\x12>\n" +
	"\tequipment\x18\x0e \x01(\v2 .slg.combat.v1_1_0.UnitEquipmentR\tequipment\"\xd2\x03\n" +
	"\fBattleAction\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12>\n" +
	"\vaction_type\x18\x02 \x01(\x0e2\x1d.slg.combat.v1_1_0.ActionTypeR\n" +
	"actionType\x12$\n" +
	"\x0esource_unit_id\x18\x03 \x01(\tR\fsourceUnitId\x12&\n" +
	"\x0ftarget_unit_ids\x18\x04 \x03(\tR\rtargetUnitIds\x12\x16\n" +
	"\x06damage\x18\x05 \x01(\x05R\x06damage\x12\x18\n" +
	"\ahealing\x18\x06 \x01(\x05R\ahealing\x12\x1d\n" +
	"\n" +
	"effect_ids\x18\a \x03(\tR\teffectIds\x12:\n" +
	"\n" +
	"target_pos\x18\b \x01(\v2\x1b.slg.common.v1_1_0.PositionR\ttargetPos\x12\x19\n" +
	"\bskill_id\x18\t \x01(\tR\askillId\x12\x1f\n" +
	"\vis_critical\x18\n" +
	" \x01(\bR\n" +
	"isCritical\x12+\n" +
	"\x11damage_multiplier\x18\v \x01(\x02R\x10damageMultiplier\x12!\n" +
	"\fcombo_skills\x18\f \x03(\tR\vcomboSkills\"\xeb\x01\n" +
	"\fBattleReward\x12\x10\n" +
	"\x03exp\x18\x01 \x01(\x05R\x03exp\x12\x12\n" +
	"\x04gold\x18\x02 \x01(\x05R\x04gold\x12-\n" +
	"\x05items\x18\x03 \x03(\v2\x17.slg.common.v1_1_0.ItemR\x05items\x12\x14\n" +
	"\x05honor\x18\x04 \x01(\x05R\x05honor\x12\x1d\n" +
	"\n" +
	"pvp_rating\x18\x05 \x01(\x05R\tpvpRating\x12\"\n" +
	"\fachievements\x18\x06 \x03(\tR\fachievements\x12-\n" +
	"\x12guild_contribution\x18\a \x01(\x05R\x11guildContribution\"\xfe\x02\n" +
	"\bUnitBuff\x12\x17\n" +
	"\abuff_id\x18\x01 \x01(\tR\x06buffId\x128\n" +
	"\tbuff_type\x18\x02 \x01(\x0e2\x1b.slg.combat.v1_1_0.BuffTypeR\bbuffType\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1f\n" +
	"\vstack_count\x18\x04 \x01(\x05R\n" +
	"stackCount\x12R\n" +
	"\reffect_values\x18\x05 \x03(\v2-.slg.combat.v1_1_0.UnitBuff.EffectValuesEntryR\feffectValues\x12&\n" +
	"\x0fsource_skill_id\x18\x06 \x01(\tR\rsourceSkillId\x12%\n" +
	"\x0eis_dispellable\x18\a \x01(\bR\risDispellable\x1a?\n" +
	"\x11EffectValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd3\x02\n" +
	"\tUnitStats\x12\x16\n" +
	"\x06attack\x18\x01 \x01(\x05R\x06attack\x12\x18\n" +
	"\adefense\x18\x02 \x01(\x05R\adefense\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x05R\x05speed\x12#\n" +
	"\rcritical_rate\x18\x04 \x01(\x05R\fcriticalRate\x12'\n" +
	"\x0fcritical_damage\x18\x05 \x01(\x05R\x0ecriticalDamage\x12\x1a\n" +
	"\baccuracy\x18\x06 \x01(\x05R\baccuracy\x12\x14\n" +
	"\x05dodge\x18\a \x01(\x05R\x05dodge\x12!\n" +
	"\fmagic_attack\x18\b \x01(\x05R\vmagicAttack\x12#\n" +
	"\rmagic_defense\x18\t \x01(\x05R\fmagicDefense\x12 \n" +
	"\vpenetration\x18\n" +
	" \x01(\x05R\vpenetration\x12\x14\n" +
	"\x05block\x18\v \x01(\x05R\x05block\"\xec\x02\n" +
	"\x10BattleStatistics\x12,\n" +
	"\x12total_damage_dealt\x18\x01 \x01(\x05R\x10totalDamageDealt\x12,\n" +
	"\x12total_healing_done\x18\x02 \x01(\x05R\x10totalHealingDone\x12\x1f\n" +
	"\vkills_count\x18\x03 \x01(\x05R\n" +
	"killsCount\x12!\n" +
	"\fdeaths_count\x18\x04 \x01(\x05R\vdeathsCount\x12#\n" +
	"\rassists_count\x18\x05 \x01(\x05R\fassistsCount\x12T\n" +
	"\vskill_usage\x18\x06 \x03(\v23.slg.combat.v1_1_0.BattleStatistics.SkillUsageEntryR\n" +
	"skillUsage\x1a=\n" +
	"\x0fSkillUsageEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd6\x02\n" +
	"\x11EnvironmentEffect\x12\x1b\n" +
	"\teffect_id\x18\x01 \x01(\tR\beffectId\x12C\n" +
	"\veffect_type\x18\x02 \x01(\x0e2\".slg.combat.v1_1_0.EnvironmentTypeR\n" +
	"effectType\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12%\n" +
	"\x0eaffected_units\x18\x04 \x03(\tR\raffectedUnits\x12[\n" +
	"\reffect_params\x18\x05 \x03(\v26.slg.combat.v1_1_0.EnvironmentEffect.EffectParamsEntryR\feffectParams\x1a?\n" +
	"\x11EffectParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\x8e\x01\n" +
	"\rUnitEquipment\x12\x1b\n" +
	"\tweapon_id\x18\x01 \x01(\tR\bweaponId\x12\x19\n" +
	"\barmor_id\x18\x02 \x01(\tR\aarmorId\x12!\n" +
	"\faccessory_id\x18\x03 \x01(\tR\vaccessoryId\x12\"\n" +
	"\fenchantments\x18\x04 \x03(\tR\fenchantments*\xca\x01\n" +
	"\n" +
	"BattleType\x12\x17\n" +
	"\x13BATTLE_TYPE_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fBATTLE_TYPE_PVE\x10\x01\x12\x13\n" +
	"\x0fBATTLE_TYPE_PVP\x10\x02\x12\x19\n" +
	"\x15BATTLE_TYPE_GUILD_WAR\x10\x03\x12\x15\n" +
	"\x11BATTLE_TYPE_ARENA\x10\x04\x12\x14\n" +
	"\x10BATTLE_TYPE_RAID\x10\x05\x12\x1a\n" +
	"\x16BATTLE_TYPE_TOURNAMENT\x10\x06\x12\x15\n" +
	"\x11BATTLE_TYPE_SIEGE\x10\a*\xae\x01\n" +
	"\fBattleResult\x12\x19\n" +
	"\x15BATTLE_RESULT_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15BATTLE_RESULT_VICTORY\x10\x01\x12\x18\n" +
	"\x14BATTLE_RESULT_DEFEAT\x10\x02\x12\x16\n" +
	"\x12BATTLE_RESULT_DRAW\x10\x03\x12\x19\n" +
	"\x15BATTLE_RESULT_TIMEOUT\x10\x04\x12\x1b\n" +
	"\x17BATTLE_RESULT_SURRENDER\x10\x05*\x92\x01\n" +
	"\vBattlePhase\x12\x18\n" +
	"\x14BATTLE_PHASE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16BATTLE_PHASE_PREPARING\x10\x01\x12\x19\n" +
	"\x15BATTLE_PHASE_FIGHTING\x10\x02\x12\x17\n" +
	"\x13BATTLE_PHASE_ENDING\x10\x03\x12\x19\n" +
	"\x15BATTLE_PHASE_COOLDOWN\x10\x04*\xed\x01\n" +
	"\n" +
	"UnitStatus\x12\x17\n" +
	"\x13UNIT_STATUS_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10UNIT_STATUS_IDLE\x10\x01\x12\x16\n" +
	"\x12UNIT_STATUS_MOVING\x10\x02\x12\x19\n" +
	"\x15UNIT_STATUS_ATTACKING\x10\x03\x12\x17\n" +
	"\x13UNIT_STATUS_CASTING\x10\x04\x12\x17\n" +
	"\x13UNIT_STATUS_STUNNED\x10\x05\x12\x14\n" +
	"\x10UNIT_STATUS_DEAD\x10\x06\x12\x1a\n" +
	"\x16UNIT_STATUS_CHANNELING\x10\a\x12\x19\n" +
	"\x15UNIT_STATUS_INVISIBLE\x10\b*\xdf\x01\n" +
	"\n" +
	"ActionType\x12\x17\n" +
	"\x13ACTION_TYPE_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10ACTION_TYPE_MOVE\x10\x01\x12\x16\n" +
	"\x12ACTION_TYPE_ATTACK\x10\x02\x12\x15\n" +
	"\x11ACTION_TYPE_SKILL\x10\x03\x12\x14\n" +
	"\x10ACTION_TYPE_HEAL\x10\x04\x12\x14\n" +
	"\x10ACTION_TYPE_BUFF\x10\x05\x12\x16\n" +
	"\x12ACTION_TYPE_DEBUFF\x10\x06\x12\x15\n" +
	"\x11ACTION_TYPE_COMBO\x10\a\x12\x18\n" +
	"\x14ACTION_TYPE_ULTIMATE\x10\b*\xb2\x02\n" +
	"\bBuffType\x12\x15\n" +
	"\x11BUFF_TYPE_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13BUFF_TYPE_ATTACK_UP\x10\x01\x12\x18\n" +
	"\x14BUFF_TYPE_DEFENSE_UP\x10\x02\x12\x16\n" +
	"\x12BUFF_TYPE_SPEED_UP\x10\x03\x12\x19\n" +
	"\x15BUFF_TYPE_ATTACK_DOWN\x10\x04\x12\x1a\n" +
	"\x16BUFF_TYPE_DEFENSE_DOWN\x10\x05\x12\x18\n" +
	"\x14BUFF_TYPE_SPEED_DOWN\x10\x06\x12\x14\n" +
	"\x10BUFF_TYPE_POISON\x10\a\x12\x1a\n" +
	"\x16BUFF_TYPE_REGENERATION\x10\b\x12\x14\n" +
	"\x10BUFF_TYPE_SHIELD\x10\t\x12\x15\n" +
	"\x11BUFF_TYPE_REFLECT\x10\n" +
	"\x12\x14\n" +
	"\x10BUFF_TYPE_IMMUNE\x10\v*\xb6\x01\n" +
	"\x0fEnvironmentType\x12\x1c\n" +
	"\x18ENVIRONMENT_TYPE_UNKNOWN\x10\x00\x12\x1e\n" +
	"\x1aENVIRONMENT_TYPE_FIRE_RAIN\x10\x01\x12\x1e\n" +
	"\x1aENVIRONMENT_TYPE_ICE_STORM\x10\x02\x12#\n" +
	"\x1fENVIRONMENT_TYPE_HEALING_SPRING\x10\x03\x12 \n" +
	"\x1cENVIRONMENT_TYPE_MAGIC_FIELD\x10\x04B\xb9\x01\n" +
	"\x15com.slg.combat.v1_1_0B\vBattleProtoP\x01Z5GoSlgBenchmarkTest/generated/slg/v1_1_0/combat;combat\xa2\x02\x03SCV\xaa\x02\x0fSlg.Combat.V110\xca\x02\x0fSlg\\Combat\\V110\xe2\x02\x1bSlg\\Combat\\V110\\GPBMetadata\xea\x02\x11Slg::Combat::V110b\x06proto3"

var (
	file_v1_1_0_combat_battle_proto_rawDescOnce sync.Once
	file_v1_1_0_combat_battle_proto_rawDescData []byte
)

func file_v1_1_0_combat_battle_proto_rawDescGZIP() []byte {
	file_v1_1_0_combat_battle_proto_rawDescOnce.Do(func() {
		file_v1_1_0_combat_battle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_1_0_combat_battle_proto_rawDesc), len(file_v1_1_0_combat_battle_proto_rawDesc)))
	})
	return file_v1_1_0_combat_battle_proto_rawDescData
}

var file_v1_1_0_combat_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_v1_1_0_combat_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_v1_1_0_combat_battle_proto_goTypes = []any{
	(BattleType)(0),           // 0: slg.combat.v1_1_0.BattleType
	(BattleResult)(0),         // 1: slg.combat.v1_1_0.BattleResult
	(BattlePhase)(0),          // 2: slg.combat.v1_1_0.BattlePhase
	(UnitStatus)(0),           // 3: slg.combat.v1_1_0.UnitStatus
	(ActionType)(0),           // 4: slg.combat.v1_1_0.ActionType
	(BuffType)(0),             // 5: slg.combat.v1_1_0.BuffType
	(EnvironmentType)(0),      // 6: slg.combat.v1_1_0.EnvironmentType
	(*BattleRequest)(nil),     // 7: slg.combat.v1_1_0.BattleRequest
	(*BattleResponse)(nil),    // 8: slg.combat.v1_1_0.BattleResponse
	(*BattleStatePush)(nil),   // 9: slg.combat.v1_1_0.BattleStatePush
	(*BattleUnit)(nil),        // 10: slg.combat.v1_1_0.BattleUnit
	(*BattleAction)(nil),      // 11: slg.combat.v1_1_0.BattleAction
	(*BattleReward)(nil),      // 12: slg.combat.v1_1_0.BattleReward
	(*UnitBuff)(nil),          // 13: slg.combat.v1_1_0.UnitBuff
	(*UnitStats)(nil),         // 14: slg.combat.v1_1_0.UnitStats
	(*BattleStatistics)(nil),  // 15: slg.combat.v1_1_0.BattleStatistics
	(*EnvironmentEffect)(nil), // 16: slg.combat.v1_1_0.EnvironmentEffect
	(*UnitEquipment)(nil),     // 17: slg.combat.v1_1_0.UnitEquipment
	nil,                       // 18: slg.combat.v1_1_0.BattleRequest.BattleSettingsEntry
	nil,                       // 19: slg.combat.v1_1_0.UnitBuff.EffectValuesEntry
	nil,                       // 20: slg.combat.v1_1_0.BattleStatistics.SkillUsageEntry
	nil,                       // 21: slg.combat.v1_1_0.EnvironmentEffect.EffectParamsEntry
	(*common.Position)(nil),   // 22: slg.common.v1_1_0.Position
	(*common.Item)(nil),       // 23: slg.common.v1_1_0.Item
}
var file_v1_1_0_combat_battle_proto_depIdxs = []int32{
	0,  // 0: slg.combat.v1_1_0.BattleRequest.battle_type:type_name -> slg.combat.v1_1_0.BattleType
	22, // 1: slg.combat.v1_1_0.BattleRequest.target_pos:type_name -> slg.common.v1_1_0.Position
	18, // 2: slg.combat.v1_1_0.BattleRequest.battle_settings:type_name -> slg.combat.v1_1_0.BattleRequest.BattleSettingsEntry
	1,  // 3: slg.combat.v1_1_0.BattleResponse.result:type_name -> slg.combat.v1_1_0.BattleResult
	10, // 4: slg.combat.v1_1_0.BattleResponse.battle_units:type_name -> slg.combat.v1_1_0.BattleUnit
	12, // 5: slg.combat.v1_1_0.BattleResponse.reward:type_name -> slg.combat.v1_1_0.BattleReward
	15, // 6: slg.combat.v1_1_0.BattleResponse.statistics:type_name -> slg.combat.v1_1_0.BattleStatistics
	11, // 7: slg.combat.v1_1_0.BattleStatePush.actions:type_name -> slg.combat.v1_1_0.BattleAction
	2,  // 8: slg.combat.v1_1_0.BattleStatePush.phase:type_name -> slg.combat.v1_1_0.BattlePhase
	16, // 9: slg.combat.v1_1_0.BattleStatePush.environment:type_name -> slg.combat.v1_1_0.EnvironmentEffect
	22, // 10: slg.combat.v1_1_0.BattleUnit.position:type_name -> slg.common.v1_1_0.Position
	3,  // 11: slg.combat.v1_1_0.BattleUnit.status:type_name -> slg.combat.v1_1_0.UnitStatus
	13, // 12: slg.combat.v1_1_0.BattleUnit.buffs:type_name -> slg.combat.v1_1_0.UnitBuff
	14, // 13: slg.combat.v1_1_0.BattleUnit.stats:type_name -> slg.combat.v1_1_0.UnitStats
	17, // 14: slg.combat.v1_1_0.BattleUnit.equipment:type_name -> slg.combat.v1_1_0.UnitEquipment
	4,  // 15: slg.combat.v1_1_0.BattleAction.action_type:type_name -> slg.combat.v1_1_0.ActionType
	22, // 16: slg.combat.v1_1_0.BattleAction.target_pos:type_name -> slg.common.v1_1_0.Position
	23, // 17: slg.combat.v1_1_0.BattleReward.items:type_name -> slg.common.v1_1_0.Item
	5,  // 18: slg.combat.v1_1_0.UnitBuff.buff_type:type_name -> slg.combat.v1_1_0.BuffType
	19, // 19: slg.combat.v1_1_0.UnitBuff.effect_values:type_name -> slg.combat.v1_1_0.UnitBuff.EffectValuesEntry
	20, // 20: slg.combat.v1_1_0.BattleStatistics.skill_usage:type_name -> slg.combat.v1_1_0.BattleStatistics.SkillUsageEntry
	6,  // 21: slg.combat.v1_1_0.EnvironmentEffect.effect_type:type_name -> slg.combat.v1_1_0.EnvironmentType
	21, // 22: slg.combat.v1_1_0.EnvironmentEffect.effect_params:type_name -> slg.combat.v1_1_0.EnvironmentEffect.EffectParamsEntry
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_v1_1_0_combat_battle_proto_init() }
func file_v1_1_0_combat_battle_proto_init() {
	if File_v1_1_0_combat_battle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_1_0_combat_battle_proto_rawDesc), len(file_v1_1_0_combat_battle_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_1_0_combat_battle_proto_goTypes,
		DependencyIndexes: file_v1_1_0_combat_battle_proto_depIdxs,
		EnumInfos:         file_v1_1_0_combat_battle_proto_enumTypes,
		MessageInfos:      file_v1_1_0_combat_battle_proto_msgTypes,
	}.Build()
	File_v1_1_0_combat_battle_proto = out.File
	file_v1_1_0_combat_battle_proto_goTypes = nil
	file_v1_1_0_combat_battle_proto_depIdxs = nil
}
