// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/v1/http_api.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 测试接口请求/响应
type TestCreateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestName      string                 `protobuf:"bytes,1,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	TestType      string                 `protobuf:"bytes,2,opt,name=test_type,json=testType,proto3" json:"test_type,omitempty"` // "websocket", "grpc", "http"
	Config        *TestConfig            `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCreateReq) Reset() {
	*x = TestCreateReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCreateReq) ProtoMessage() {}

func (x *TestCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCreateReq.ProtoReflect.Descriptor instead.
func (*TestCreateReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{0}
}

func (x *TestCreateReq) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *TestCreateReq) GetTestType() string {
	if x != nil {
		return x.TestType
	}
	return ""
}

func (x *TestCreateReq) GetConfig() *TestConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TestCreateReq) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type TestCreateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TestId        int64                  `protobuf:"varint,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	TestStatus    string                 `protobuf:"bytes,4,opt,name=test_status,json=testStatus,proto3" json:"test_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCreateResp) Reset() {
	*x = TestCreateResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCreateResp) ProtoMessage() {}

func (x *TestCreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCreateResp.ProtoReflect.Descriptor instead.
func (*TestCreateResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{1}
}

func (x *TestCreateResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestCreateResp) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestCreateResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TestCreateResp) GetTestStatus() string {
	if x != nil {
		return x.TestStatus
	}
	return ""
}

type TestConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ConcurrentClients int32                  `protobuf:"varint,1,opt,name=concurrent_clients,json=concurrentClients,proto3" json:"concurrent_clients,omitempty"`
	DurationSeconds   int32                  `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	TargetRps         int32                  `protobuf:"varint,3,opt,name=target_rps,json=targetRps,proto3" json:"target_rps,omitempty"` // requests per second
	EndpointUrl       string                 `protobuf:"bytes,4,opt,name=endpoint_url,json=endpointUrl,proto3" json:"endpoint_url,omitempty"`
	HttpConfig        *HTTPConfig            `protobuf:"bytes,5,opt,name=http_config,json=httpConfig,proto3" json:"http_config,omitempty"`
	GrpcConfig        *GRPCConfig            `protobuf:"bytes,6,opt,name=grpc_config,json=grpcConfig,proto3" json:"grpc_config,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TestConfig) Reset() {
	*x = TestConfig{}
	mi := &file_api_v1_http_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestConfig) ProtoMessage() {}

func (x *TestConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestConfig.ProtoReflect.Descriptor instead.
func (*TestConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{2}
}

func (x *TestConfig) GetConcurrentClients() int32 {
	if x != nil {
		return x.ConcurrentClients
	}
	return 0
}

func (x *TestConfig) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *TestConfig) GetTargetRps() int32 {
	if x != nil {
		return x.TargetRps
	}
	return 0
}

func (x *TestConfig) GetEndpointUrl() string {
	if x != nil {
		return x.EndpointUrl
	}
	return ""
}

func (x *TestConfig) GetHttpConfig() *HTTPConfig {
	if x != nil {
		return x.HttpConfig
	}
	return nil
}

func (x *TestConfig) GetGrpcConfig() *GRPCConfig {
	if x != nil {
		return x.GrpcConfig
	}
	return nil
}

type HTTPConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"` // GET, POST, PUT, DELETE
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RequestBody   string                 `protobuf:"bytes,3,opt,name=request_body,json=requestBody,proto3" json:"request_body,omitempty"`
	TimeoutMs     int32                  `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	KeepAlive     bool                   `protobuf:"varint,5,opt,name=keep_alive,json=keepAlive,proto3" json:"keep_alive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPConfig) Reset() {
	*x = HTTPConfig{}
	mi := &file_api_v1_http_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPConfig) ProtoMessage() {}

func (x *HTTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPConfig.ProtoReflect.Descriptor instead.
func (*HTTPConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{3}
}

func (x *HTTPConfig) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HTTPConfig) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HTTPConfig) GetRequestBody() string {
	if x != nil {
		return x.RequestBody
	}
	return ""
}

func (x *HTTPConfig) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *HTTPConfig) GetKeepAlive() bool {
	if x != nil {
		return x.KeepAlive
	}
	return false
}

type GRPCConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	MethodName    string                 `protobuf:"bytes,2,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	RequestData   string                 `protobuf:"bytes,3,opt,name=request_data,json=requestData,proto3" json:"request_data,omitempty"` // JSON格式的请求数据
	TimeoutMs     int32                  `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	UseTls        bool                   `protobuf:"varint,5,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GRPCConfig) Reset() {
	*x = GRPCConfig{}
	mi := &file_api_v1_http_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GRPCConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCConfig) ProtoMessage() {}

func (x *GRPCConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCConfig.ProtoReflect.Descriptor instead.
func (*GRPCConfig) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{4}
}

func (x *GRPCConfig) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *GRPCConfig) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *GRPCConfig) GetRequestData() string {
	if x != nil {
		return x.RequestData
	}
	return ""
}

func (x *GRPCConfig) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *GRPCConfig) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

type TestStartReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStartReq) Reset() {
	*x = TestStartReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStartReq) ProtoMessage() {}

func (x *TestStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStartReq.ProtoReflect.Descriptor instead.
func (*TestStartReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{5}
}

func (x *TestStartReq) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type TestStartResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StartedAt     int64                  `protobuf:"varint,3,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStartResp) Reset() {
	*x = TestStartResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStartResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStartResp) ProtoMessage() {}

func (x *TestStartResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStartResp.ProtoReflect.Descriptor instead.
func (*TestStartResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{6}
}

func (x *TestStartResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestStartResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TestStartResp) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

type TestStopReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStopReq) Reset() {
	*x = TestStopReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStopReq) ProtoMessage() {}

func (x *TestStopReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStopReq.ProtoReflect.Descriptor instead.
func (*TestStopReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{7}
}

func (x *TestStopReq) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestStopReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type TestStopResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StoppedAt     int64                  `protobuf:"varint,3,opt,name=stopped_at,json=stoppedAt,proto3" json:"stopped_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStopResp) Reset() {
	*x = TestStopResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStopResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStopResp) ProtoMessage() {}

func (x *TestStopResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStopResp.ProtoReflect.Descriptor instead.
func (*TestStopResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{8}
}

func (x *TestStopResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestStopResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TestStopResp) GetStoppedAt() int64 {
	if x != nil {
		return x.StoppedAt
	}
	return 0
}

type TestStatusReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStatusReq) Reset() {
	*x = TestStatusReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStatusReq) ProtoMessage() {}

func (x *TestStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStatusReq.ProtoReflect.Descriptor instead.
func (*TestStatusReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{9}
}

func (x *TestStatusReq) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type TestStatusResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // created, running, completed, failed, stopped
	Metrics       *TestMetrics           `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt     int64                  `protobuf:"varint,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt   int64                  `protobuf:"varint,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestStatusResp) Reset() {
	*x = TestStatusResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestStatusResp) ProtoMessage() {}

func (x *TestStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestStatusResp.ProtoReflect.Descriptor instead.
func (*TestStatusResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{10}
}

func (x *TestStatusResp) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestStatusResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TestStatusResp) GetMetrics() *TestMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *TestStatusResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TestStatusResp) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *TestStatusResp) GetCompletedAt() int64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *TestStatusResp) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type TestMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 基础指标
	TotalRequests      int64   `protobuf:"varint,1,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	SuccessfulRequests int64   `protobuf:"varint,2,opt,name=successful_requests,json=successfulRequests,proto3" json:"successful_requests,omitempty"`
	FailedRequests     int64   `protobuf:"varint,3,opt,name=failed_requests,json=failedRequests,proto3" json:"failed_requests,omitempty"`
	SuccessRate        float64 `protobuf:"fixed64,4,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	// 延迟指标 (毫秒)
	AvgResponseTime float64 `protobuf:"fixed64,5,opt,name=avg_response_time,json=avgResponseTime,proto3" json:"avg_response_time,omitempty"`
	MinResponseTime float64 `protobuf:"fixed64,6,opt,name=min_response_time,json=minResponseTime,proto3" json:"min_response_time,omitempty"`
	MaxResponseTime float64 `protobuf:"fixed64,7,opt,name=max_response_time,json=maxResponseTime,proto3" json:"max_response_time,omitempty"`
	P50ResponseTime float64 `protobuf:"fixed64,8,opt,name=p50_response_time,json=p50ResponseTime,proto3" json:"p50_response_time,omitempty"`
	P95ResponseTime float64 `protobuf:"fixed64,9,opt,name=p95_response_time,json=p95ResponseTime,proto3" json:"p95_response_time,omitempty"`
	P99ResponseTime float64 `protobuf:"fixed64,10,opt,name=p99_response_time,json=p99ResponseTime,proto3" json:"p99_response_time,omitempty"`
	// 吞吐量指标
	RequestsPerSecond float64 `protobuf:"fixed64,11,opt,name=requests_per_second,json=requestsPerSecond,proto3" json:"requests_per_second,omitempty"`
	BytesPerSecond    float64 `protobuf:"fixed64,12,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
	// 连接指标
	ActiveConnections int32 `protobuf:"varint,13,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	TotalConnections  int32 `protobuf:"varint,14,opt,name=total_connections,json=totalConnections,proto3" json:"total_connections,omitempty"`
	ConnectionErrors  int32 `protobuf:"varint,15,opt,name=connection_errors,json=connectionErrors,proto3" json:"connection_errors,omitempty"`
	// 错误统计
	ErrorTypes  map[string]int32 `protobuf:"bytes,16,rep,name=error_types,json=errorTypes,proto3" json:"error_types,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	StatusCodes map[int32]int32  `protobuf:"bytes,17,rep,name=status_codes,json=statusCodes,proto3" json:"status_codes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // HTTP状态码统计
	// 时间序列数据 (用于图表)
	ResponseTimeSeries []*TimeSeriesPoint `protobuf:"bytes,18,rep,name=response_time_series,json=responseTimeSeries,proto3" json:"response_time_series,omitempty"`
	ThroughputSeries   []*TimeSeriesPoint `protobuf:"bytes,19,rep,name=throughput_series,json=throughputSeries,proto3" json:"throughput_series,omitempty"`
	ErrorRateSeries    []*TimeSeriesPoint `protobuf:"bytes,20,rep,name=error_rate_series,json=errorRateSeries,proto3" json:"error_rate_series,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TestMetrics) Reset() {
	*x = TestMetrics{}
	mi := &file_api_v1_http_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestMetrics) ProtoMessage() {}

func (x *TestMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestMetrics.ProtoReflect.Descriptor instead.
func (*TestMetrics) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{11}
}

func (x *TestMetrics) GetTotalRequests() int64 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *TestMetrics) GetSuccessfulRequests() int64 {
	if x != nil {
		return x.SuccessfulRequests
	}
	return 0
}

func (x *TestMetrics) GetFailedRequests() int64 {
	if x != nil {
		return x.FailedRequests
	}
	return 0
}

func (x *TestMetrics) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *TestMetrics) GetAvgResponseTime() float64 {
	if x != nil {
		return x.AvgResponseTime
	}
	return 0
}

func (x *TestMetrics) GetMinResponseTime() float64 {
	if x != nil {
		return x.MinResponseTime
	}
	return 0
}

func (x *TestMetrics) GetMaxResponseTime() float64 {
	if x != nil {
		return x.MaxResponseTime
	}
	return 0
}

func (x *TestMetrics) GetP50ResponseTime() float64 {
	if x != nil {
		return x.P50ResponseTime
	}
	return 0
}

func (x *TestMetrics) GetP95ResponseTime() float64 {
	if x != nil {
		return x.P95ResponseTime
	}
	return 0
}

func (x *TestMetrics) GetP99ResponseTime() float64 {
	if x != nil {
		return x.P99ResponseTime
	}
	return 0
}

func (x *TestMetrics) GetRequestsPerSecond() float64 {
	if x != nil {
		return x.RequestsPerSecond
	}
	return 0
}

func (x *TestMetrics) GetBytesPerSecond() float64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

func (x *TestMetrics) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *TestMetrics) GetTotalConnections() int32 {
	if x != nil {
		return x.TotalConnections
	}
	return 0
}

func (x *TestMetrics) GetConnectionErrors() int32 {
	if x != nil {
		return x.ConnectionErrors
	}
	return 0
}

func (x *TestMetrics) GetErrorTypes() map[string]int32 {
	if x != nil {
		return x.ErrorTypes
	}
	return nil
}

func (x *TestMetrics) GetStatusCodes() map[int32]int32 {
	if x != nil {
		return x.StatusCodes
	}
	return nil
}

func (x *TestMetrics) GetResponseTimeSeries() []*TimeSeriesPoint {
	if x != nil {
		return x.ResponseTimeSeries
	}
	return nil
}

func (x *TestMetrics) GetThroughputSeries() []*TimeSeriesPoint {
	if x != nil {
		return x.ThroughputSeries
	}
	return nil
}

func (x *TestMetrics) GetErrorRateSeries() []*TimeSeriesPoint {
	if x != nil {
		return x.ErrorRateSeries
	}
	return nil
}

type TimeSeriesPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSeriesPoint) Reset() {
	*x = TimeSeriesPoint{}
	mi := &file_api_v1_http_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSeriesPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSeriesPoint) ProtoMessage() {}

func (x *TimeSeriesPoint) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSeriesPoint.ProtoReflect.Descriptor instead.
func (*TimeSeriesPoint) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{12}
}

func (x *TimeSeriesPoint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TimeSeriesPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TimeSeriesPoint) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type TestListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	FilterType    string                 `protobuf:"bytes,3,opt,name=filter_type,json=filterType,proto3" json:"filter_type,omitempty"`       // 按测试类型过滤
	FilterStatus  string                 `protobuf:"bytes,4,opt,name=filter_status,json=filterStatus,proto3" json:"filter_status,omitempty"` // 按状态过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestListReq) Reset() {
	*x = TestListReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestListReq) ProtoMessage() {}

func (x *TestListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestListReq.ProtoReflect.Descriptor instead.
func (*TestListReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{13}
}

func (x *TestListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TestListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TestListReq) GetFilterType() string {
	if x != nil {
		return x.FilterType
	}
	return ""
}

func (x *TestListReq) GetFilterStatus() string {
	if x != nil {
		return x.FilterStatus
	}
	return ""
}

type TestListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tests         []*TestSummary         `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestListResp) Reset() {
	*x = TestListResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestListResp) ProtoMessage() {}

func (x *TestListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestListResp.ProtoReflect.Descriptor instead.
func (*TestListResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{14}
}

func (x *TestListResp) GetTests() []*TestSummary {
	if x != nil {
		return x.Tests
	}
	return nil
}

func (x *TestListResp) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *TestListResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TestListResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type TestSummary struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TestId          int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	TestName        string                 `protobuf:"bytes,2,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	TestType        string                 `protobuf:"bytes,3,opt,name=test_type,json=testType,proto3" json:"test_type,omitempty"`
	Status          string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt       int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,6,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	SuccessRate     float64                `protobuf:"fixed64,7,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	AvgResponseTime float64                `protobuf:"fixed64,8,opt,name=avg_response_time,json=avgResponseTime,proto3" json:"avg_response_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestSummary) Reset() {
	*x = TestSummary{}
	mi := &file_api_v1_http_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSummary) ProtoMessage() {}

func (x *TestSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSummary.ProtoReflect.Descriptor instead.
func (*TestSummary) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{15}
}

func (x *TestSummary) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestSummary) GetTestName() string {
	if x != nil {
		return x.TestName
	}
	return ""
}

func (x *TestSummary) GetTestType() string {
	if x != nil {
		return x.TestType
	}
	return ""
}

func (x *TestSummary) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TestSummary) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TestSummary) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *TestSummary) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *TestSummary) GetAvgResponseTime() float64 {
	if x != nil {
		return x.AvgResponseTime
	}
	return 0
}

type TestReportReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestId        int64                  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Format        string                 `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"` // "json", "html", "pdf"
	IncludeCharts bool                   `protobuf:"varint,3,opt,name=include_charts,json=includeCharts,proto3" json:"include_charts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestReportReq) Reset() {
	*x = TestReportReq{}
	mi := &file_api_v1_http_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReportReq) ProtoMessage() {}

func (x *TestReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReportReq.ProtoReflect.Descriptor instead.
func (*TestReportReq) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{16}
}

func (x *TestReportReq) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *TestReportReq) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TestReportReq) GetIncludeCharts() bool {
	if x != nil {
		return x.IncludeCharts
	}
	return false
}

type TestReportResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	DownloadUrl     string                 `protobuf:"bytes,2,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"`
	Format          string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	GeneratedAt     int64                  `protobuf:"varint,4,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	DetailedMetrics *TestDetailedMetrics   `protobuf:"bytes,5,opt,name=detailed_metrics,json=detailedMetrics,proto3" json:"detailed_metrics,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestReportResp) Reset() {
	*x = TestReportResp{}
	mi := &file_api_v1_http_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestReportResp) ProtoMessage() {}

func (x *TestReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestReportResp.ProtoReflect.Descriptor instead.
func (*TestReportResp) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{17}
}

func (x *TestReportResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TestReportResp) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *TestReportResp) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TestReportResp) GetGeneratedAt() int64 {
	if x != nil {
		return x.GeneratedAt
	}
	return 0
}

func (x *TestReportResp) GetDetailedMetrics() *TestDetailedMetrics {
	if x != nil {
		return x.DetailedMetrics
	}
	return nil
}

type TestDetailedMetrics struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Summary *TestMetrics           `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`
	// 详细统计
	LatencyDistribution *LatencyDistribution `protobuf:"bytes,2,opt,name=latency_distribution,json=latencyDistribution,proto3" json:"latency_distribution,omitempty"`
	ThroughputAnalysis  *ThroughputAnalysis  `protobuf:"bytes,3,opt,name=throughput_analysis,json=throughputAnalysis,proto3" json:"throughput_analysis,omitempty"`
	ErrorAnalysis       *ErrorAnalysis       `protobuf:"bytes,4,opt,name=error_analysis,json=errorAnalysis,proto3" json:"error_analysis,omitempty"`
	ResourceUsage       *ResourceUsage       `protobuf:"bytes,5,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TestDetailedMetrics) Reset() {
	*x = TestDetailedMetrics{}
	mi := &file_api_v1_http_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDetailedMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDetailedMetrics) ProtoMessage() {}

func (x *TestDetailedMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDetailedMetrics.ProtoReflect.Descriptor instead.
func (*TestDetailedMetrics) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{18}
}

func (x *TestDetailedMetrics) GetSummary() *TestMetrics {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *TestDetailedMetrics) GetLatencyDistribution() *LatencyDistribution {
	if x != nil {
		return x.LatencyDistribution
	}
	return nil
}

func (x *TestDetailedMetrics) GetThroughputAnalysis() *ThroughputAnalysis {
	if x != nil {
		return x.ThroughputAnalysis
	}
	return nil
}

func (x *TestDetailedMetrics) GetErrorAnalysis() *ErrorAnalysis {
	if x != nil {
		return x.ErrorAnalysis
	}
	return nil
}

func (x *TestDetailedMetrics) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

type LatencyDistribution struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Buckets           []*LatencyBucket       `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	StandardDeviation float64                `protobuf:"fixed64,2,opt,name=standard_deviation,json=standardDeviation,proto3" json:"standard_deviation,omitempty"`
	Median            float64                `protobuf:"fixed64,3,opt,name=median,proto3" json:"median,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LatencyDistribution) Reset() {
	*x = LatencyDistribution{}
	mi := &file_api_v1_http_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatencyDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyDistribution) ProtoMessage() {}

func (x *LatencyDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyDistribution.ProtoReflect.Descriptor instead.
func (*LatencyDistribution) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{19}
}

func (x *LatencyDistribution) GetBuckets() []*LatencyBucket {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *LatencyDistribution) GetStandardDeviation() float64 {
	if x != nil {
		return x.StandardDeviation
	}
	return 0
}

func (x *LatencyDistribution) GetMedian() float64 {
	if x != nil {
		return x.Median
	}
	return 0
}

type LatencyBucket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LowerBound    float64                `protobuf:"fixed64,1,opt,name=lower_bound,json=lowerBound,proto3" json:"lower_bound,omitempty"`
	UpperBound    float64                `protobuf:"fixed64,2,opt,name=upper_bound,json=upperBound,proto3" json:"upper_bound,omitempty"`
	Count         int64                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Percentage    float64                `protobuf:"fixed64,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LatencyBucket) Reset() {
	*x = LatencyBucket{}
	mi := &file_api_v1_http_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LatencyBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LatencyBucket) ProtoMessage() {}

func (x *LatencyBucket) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LatencyBucket.ProtoReflect.Descriptor instead.
func (*LatencyBucket) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{20}
}

func (x *LatencyBucket) GetLowerBound() float64 {
	if x != nil {
		return x.LowerBound
	}
	return 0
}

func (x *LatencyBucket) GetUpperBound() float64 {
	if x != nil {
		return x.UpperBound
	}
	return 0
}

func (x *LatencyBucket) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *LatencyBucket) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type ThroughputAnalysis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeakRps       float64                `protobuf:"fixed64,1,opt,name=peak_rps,json=peakRps,proto3" json:"peak_rps,omitempty"`
	SustainedRps  float64                `protobuf:"fixed64,2,opt,name=sustained_rps,json=sustainedRps,proto3" json:"sustained_rps,omitempty"`
	Periods       []*ThroughputPeriod    `protobuf:"bytes,3,rep,name=periods,proto3" json:"periods,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThroughputAnalysis) Reset() {
	*x = ThroughputAnalysis{}
	mi := &file_api_v1_http_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThroughputAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThroughputAnalysis) ProtoMessage() {}

func (x *ThroughputAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThroughputAnalysis.ProtoReflect.Descriptor instead.
func (*ThroughputAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{21}
}

func (x *ThroughputAnalysis) GetPeakRps() float64 {
	if x != nil {
		return x.PeakRps
	}
	return 0
}

func (x *ThroughputAnalysis) GetSustainedRps() float64 {
	if x != nil {
		return x.SustainedRps
	}
	return 0
}

func (x *ThroughputAnalysis) GetPeriods() []*ThroughputPeriod {
	if x != nil {
		return x.Periods
	}
	return nil
}

type ThroughputPeriod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AverageRps    float64                `protobuf:"fixed64,3,opt,name=average_rps,json=averageRps,proto3" json:"average_rps,omitempty"`
	RequestCount  int64                  `protobuf:"varint,4,opt,name=request_count,json=requestCount,proto3" json:"request_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ThroughputPeriod) Reset() {
	*x = ThroughputPeriod{}
	mi := &file_api_v1_http_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThroughputPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThroughputPeriod) ProtoMessage() {}

func (x *ThroughputPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThroughputPeriod.ProtoReflect.Descriptor instead.
func (*ThroughputPeriod) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{22}
}

func (x *ThroughputPeriod) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ThroughputPeriod) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ThroughputPeriod) GetAverageRps() float64 {
	if x != nil {
		return x.AverageRps
	}
	return 0
}

func (x *ThroughputPeriod) GetRequestCount() int64 {
	if x != nil {
		return x.RequestCount
	}
	return 0
}

type ErrorAnalysis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []*ErrorCategory       `protobuf:"bytes,1,rep,name=categories,proto3" json:"categories,omitempty"`
	Trends        []*ErrorTrend          `protobuf:"bytes,2,rep,name=trends,proto3" json:"trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorAnalysis) Reset() {
	*x = ErrorAnalysis{}
	mi := &file_api_v1_http_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorAnalysis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorAnalysis) ProtoMessage() {}

func (x *ErrorAnalysis) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorAnalysis.ProtoReflect.Descriptor instead.
func (*ErrorAnalysis) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{23}
}

func (x *ErrorAnalysis) GetCategories() []*ErrorCategory {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *ErrorAnalysis) GetTrends() []*ErrorTrend {
	if x != nil {
		return x.Trends
	}
	return nil
}

type ErrorCategory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorType     string                 `protobuf:"bytes,1,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Percentage    float64                `protobuf:"fixed64,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorCategory) Reset() {
	*x = ErrorCategory{}
	mi := &file_api_v1_http_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorCategory) ProtoMessage() {}

func (x *ErrorCategory) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorCategory.ProtoReflect.Descriptor instead.
func (*ErrorCategory) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{24}
}

func (x *ErrorCategory) GetErrorType() string {
	if x != nil {
		return x.ErrorType
	}
	return ""
}

func (x *ErrorCategory) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ErrorCategory) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *ErrorCategory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ErrorTrend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ErrorCount    int32                  `protobuf:"varint,2,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	ErrorRate     float64                `protobuf:"fixed64,3,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorTrend) Reset() {
	*x = ErrorTrend{}
	mi := &file_api_v1_http_api_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorTrend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTrend) ProtoMessage() {}

func (x *ErrorTrend) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTrend.ProtoReflect.Descriptor instead.
func (*ErrorTrend) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{25}
}

func (x *ErrorTrend) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ErrorTrend) GetErrorCount() int32 {
	if x != nil {
		return x.ErrorCount
	}
	return 0
}

func (x *ErrorTrend) GetErrorRate() float64 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

type ResourceUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           *CPUUsage              `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *MemoryUsage           `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Network       *NetworkUsage          `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_api_v1_http_api_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{26}
}

func (x *ResourceUsage) GetCpu() *CPUUsage {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *ResourceUsage) GetMemory() *MemoryUsage {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *ResourceUsage) GetNetwork() *NetworkUsage {
	if x != nil {
		return x.Network
	}
	return nil
}

type CPUUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvgCpuPercent float64                `protobuf:"fixed64,1,opt,name=avg_cpu_percent,json=avgCpuPercent,proto3" json:"avg_cpu_percent,omitempty"`
	MaxCpuPercent float64                `protobuf:"fixed64,2,opt,name=max_cpu_percent,json=maxCpuPercent,proto3" json:"max_cpu_percent,omitempty"`
	CpuSeries     []*TimeSeriesPoint     `protobuf:"bytes,3,rep,name=cpu_series,json=cpuSeries,proto3" json:"cpu_series,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUUsage) Reset() {
	*x = CPUUsage{}
	mi := &file_api_v1_http_api_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUUsage) ProtoMessage() {}

func (x *CPUUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUUsage.ProtoReflect.Descriptor instead.
func (*CPUUsage) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{27}
}

func (x *CPUUsage) GetAvgCpuPercent() float64 {
	if x != nil {
		return x.AvgCpuPercent
	}
	return 0
}

func (x *CPUUsage) GetMaxCpuPercent() float64 {
	if x != nil {
		return x.MaxCpuPercent
	}
	return 0
}

func (x *CPUUsage) GetCpuSeries() []*TimeSeriesPoint {
	if x != nil {
		return x.CpuSeries
	}
	return nil
}

type MemoryUsage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AvgMemoryBytes int64                  `protobuf:"varint,1,opt,name=avg_memory_bytes,json=avgMemoryBytes,proto3" json:"avg_memory_bytes,omitempty"`
	MaxMemoryBytes int64                  `protobuf:"varint,2,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MemorySeries   []*TimeSeriesPoint     `protobuf:"bytes,3,rep,name=memory_series,json=memorySeries,proto3" json:"memory_series,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MemoryUsage) Reset() {
	*x = MemoryUsage{}
	mi := &file_api_v1_http_api_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryUsage) ProtoMessage() {}

func (x *MemoryUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryUsage.ProtoReflect.Descriptor instead.
func (*MemoryUsage) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{28}
}

func (x *MemoryUsage) GetAvgMemoryBytes() int64 {
	if x != nil {
		return x.AvgMemoryBytes
	}
	return 0
}

func (x *MemoryUsage) GetMaxMemoryBytes() int64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *MemoryUsage) GetMemorySeries() []*TimeSeriesPoint {
	if x != nil {
		return x.MemorySeries
	}
	return nil
}

type NetworkUsage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalBytesSent     int64                  `protobuf:"varint,1,opt,name=total_bytes_sent,json=totalBytesSent,proto3" json:"total_bytes_sent,omitempty"`
	TotalBytesReceived int64                  `protobuf:"varint,2,opt,name=total_bytes_received,json=totalBytesReceived,proto3" json:"total_bytes_received,omitempty"`
	AvgBandwidthMbps   float64                `protobuf:"fixed64,3,opt,name=avg_bandwidth_mbps,json=avgBandwidthMbps,proto3" json:"avg_bandwidth_mbps,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NetworkUsage) Reset() {
	*x = NetworkUsage{}
	mi := &file_api_v1_http_api_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkUsage) ProtoMessage() {}

func (x *NetworkUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_http_api_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkUsage.ProtoReflect.Descriptor instead.
func (*NetworkUsage) Descriptor() ([]byte, []int) {
	return file_api_v1_http_api_proto_rawDescGZIP(), []int{29}
}

func (x *NetworkUsage) GetTotalBytesSent() int64 {
	if x != nil {
		return x.TotalBytesSent
	}
	return 0
}

func (x *NetworkUsage) GetTotalBytesReceived() int64 {
	if x != nil {
		return x.TotalBytesReceived
	}
	return 0
}

func (x *NetworkUsage) GetAvgBandwidthMbps() float64 {
	if x != nil {
		return x.AvgBandwidthMbps
	}
	return 0
}

var File_api_v1_http_api_proto protoreflect.FileDescriptor

const file_api_v1_http_api_proto_rawDesc = "" +
	"\n" +
	"\x15api/v1/http_api.proto\x12\x06api.v1\"\xfb\x01\n" +
	"\rTestCreateReq\x12\x1b\n" +
	"\ttest_name\x18\x01 \x01(\tR\btestName\x12\x1b\n" +
	"\ttest_type\x18\x02 \x01(\tR\btestType\x12*\n" +
	"\x06config\x18\x03 \x01(\v2\x12.api.v1.TestConfigR\x06config\x12E\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2%.api.v1.TestCreateReq.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"~\n" +
	"\x0eTestCreateResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\atest_id\x18\x02 \x01(\x03R\x06testId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1f\n" +
	"\vtest_status\x18\x04 \x01(\tR\n" +
	"testStatus\"\x92\x02\n" +
	"\n" +
	"TestConfig\x12-\n" +
	"\x12concurrent_clients\x18\x01 \x01(\x05R\x11concurrentClients\x12)\n" +
	"\x10duration_seconds\x18\x02 \x01(\x05R\x0fdurationSeconds\x12\x1d\n" +
	"\n" +
	"target_rps\x18\x03 \x01(\x05R\ttargetRps\x12!\n" +
	"\fendpoint_url\x18\x04 \x01(\tR\vendpointUrl\x123\n" +
	"\vhttp_config\x18\x05 \x01(\v2\x12.api.v1.HTTPConfigR\n" +
	"httpConfig\x123\n" +
	"\vgrpc_config\x18\x06 \x01(\v2\x12.api.v1.GRPCConfigR\n" +
	"grpcConfig\"\xfc\x01\n" +
	"\n" +
	"HTTPConfig\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x129\n" +
	"\aheaders\x18\x02 \x03(\v2\x1f.api.v1.HTTPConfig.HeadersEntryR\aheaders\x12!\n" +
	"\frequest_body\x18\x03 \x01(\tR\vrequestBody\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05R\ttimeoutMs\x12\x1d\n" +
	"\n" +
	"keep_alive\x18\x05 \x01(\bR\tkeepAlive\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x01\n" +
	"\n" +
	"GRPCConfig\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vmethod_name\x18\x02 \x01(\tR\n" +
	"methodName\x12!\n" +
	"\frequest_data\x18\x03 \x01(\tR\vrequestData\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05R\ttimeoutMs\x12\x17\n" +
	"\ause_tls\x18\x05 \x01(\bR\x06useTls\"'\n" +
	"\fTestStartReq\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\"b\n" +
	"\rTestStartResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"started_at\x18\x03 \x01(\x03R\tstartedAt\">\n" +
	"\vTestStopReq\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"a\n" +
	"\fTestStopResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"stopped_at\x18\x03 \x01(\x03R\tstoppedAt\"(\n" +
	"\rTestStatusReq\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\"\xf6\x01\n" +
	"\x0eTestStatusResp\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12-\n" +
	"\ametrics\x18\x03 \x01(\v2\x13.api.v1.TestMetricsR\ametrics\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x05 \x01(\x03R\tstartedAt\x12!\n" +
	"\fcompleted_at\x18\x06 \x01(\x03R\vcompletedAt\x12#\n" +
	"\rerror_message\x18\a \x01(\tR\ferrorMessage\"\x80\t\n" +
	"\vTestMetrics\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x03R\rtotalRequests\x12/\n" +
	"\x13successful_requests\x18\x02 \x01(\x03R\x12successfulRequests\x12'\n" +
	"\x0ffailed_requests\x18\x03 \x01(\x03R\x0efailedRequests\x12!\n" +
	"\fsuccess_rate\x18\x04 \x01(\x01R\vsuccessRate\x12*\n" +
	"\x11avg_response_time\x18\x05 \x01(\x01R\x0favgResponseTime\x12*\n" +
	"\x11min_response_time\x18\x06 \x01(\x01R\x0fminResponseTime\x12*\n" +
	"\x11max_response_time\x18\a \x01(\x01R\x0fmaxResponseTime\x12*\n" +
	"\x11p50_response_time\x18\b \x01(\x01R\x0fp50ResponseTime\x12*\n" +
	"\x11p95_response_time\x18\t \x01(\x01R\x0fp95ResponseTime\x12*\n" +
	"\x11p99_response_time\x18\n" +
	" \x01(\x01R\x0fp99ResponseTime\x12.\n" +
	"\x13requests_per_second\x18\v \x01(\x01R\x11requestsPerSecond\x12(\n" +
	"\x10bytes_per_second\x18\f \x01(\x01R\x0ebytesPerSecond\x12-\n" +
	"\x12active_connections\x18\r \x01(\x05R\x11activeConnections\x12+\n" +
	"\x11total_connections\x18\x0e \x01(\x05R\x10totalConnections\x12+\n" +
	"\x11connection_errors\x18\x0f \x01(\x05R\x10connectionErrors\x12D\n" +
	"\verror_types\x18\x10 \x03(\v2#.api.v1.TestMetrics.ErrorTypesEntryR\n" +
	"errorTypes\x12G\n" +
	"\fstatus_codes\x18\x11 \x03(\v2$.api.v1.TestMetrics.StatusCodesEntryR\vstatusCodes\x12I\n" +
	"\x14response_time_series\x18\x12 \x03(\v2\x17.api.v1.TimeSeriesPointR\x12responseTimeSeries\x12D\n" +
	"\x11throughput_series\x18\x13 \x03(\v2\x17.api.v1.TimeSeriesPointR\x10throughputSeries\x12C\n" +
	"\x11error_rate_series\x18\x14 \x03(\v2\x17.api.v1.TimeSeriesPointR\x0ferrorRateSeries\x1a=\n" +
	"\x0fErrorTypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a>\n" +
	"\x10StatusCodesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"[\n" +
	"\x0fTimeSeriesPoint\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\"\x84\x01\n" +
	"\vTestListReq\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vfilter_type\x18\x03 \x01(\tR\n" +
	"filterType\x12#\n" +
	"\rfilter_status\x18\x04 \x01(\tR\ffilterStatus\"\x8b\x01\n" +
	"\fTestListResp\x12)\n" +
	"\x05tests\x18\x01 \x03(\v2\x13.api.v1.TestSummaryR\x05tests\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\x91\x02\n" +
	"\vTestSummary\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x1b\n" +
	"\ttest_name\x18\x02 \x01(\tR\btestName\x12\x1b\n" +
	"\ttest_type\x18\x03 \x01(\tR\btestType\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12)\n" +
	"\x10duration_seconds\x18\x06 \x01(\x05R\x0fdurationSeconds\x12!\n" +
	"\fsuccess_rate\x18\a \x01(\x01R\vsuccessRate\x12*\n" +
	"\x11avg_response_time\x18\b \x01(\x01R\x0favgResponseTime\"g\n" +
	"\rTestReportReq\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\x03R\x06testId\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12%\n" +
	"\x0einclude_charts\x18\x03 \x01(\bR\rincludeCharts\"\xd0\x01\n" +
	"\x0eTestReportResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\fdownload_url\x18\x02 \x01(\tR\vdownloadUrl\x12\x16\n" +
	"\x06format\x18\x03 \x01(\tR\x06format\x12!\n" +
	"\fgenerated_at\x18\x04 \x01(\x03R\vgeneratedAt\x12F\n" +
	"\x10detailed_metrics\x18\x05 \x01(\v2\x1b.api.v1.TestDetailedMetricsR\x0fdetailedMetrics\"\xdd\x02\n" +
	"\x13TestDetailedMetrics\x12-\n" +
	"\asummary\x18\x01 \x01(\v2\x13.api.v1.TestMetricsR\asummary\x12N\n" +
	"\x14latency_distribution\x18\x02 \x01(\v2\x1b.api.v1.LatencyDistributionR\x13latencyDistribution\x12K\n" +
	"\x13throughput_analysis\x18\x03 \x01(\v2\x1a.api.v1.ThroughputAnalysisR\x12throughputAnalysis\x12<\n" +
	"\x0eerror_analysis\x18\x04 \x01(\v2\x15.api.v1.ErrorAnalysisR\rerrorAnalysis\x12<\n" +
	"\x0eresource_usage\x18\x05 \x01(\v2\x15.api.v1.ResourceUsageR\rresourceUsage\"\x8d\x01\n" +
	"\x13LatencyDistribution\x12/\n" +
	"\abuckets\x18\x01 \x03(\v2\x15.api.v1.LatencyBucketR\abuckets\x12-\n" +
	"\x12standard_deviation\x18\x02 \x01(\x01R\x11standardDeviation\x12\x16\n" +
	"\x06median\x18\x03 \x01(\x01R\x06median\"\x87\x01\n" +
	"\rLatencyBucket\x12\x1f\n" +
	"\vlower_bound\x18\x01 \x01(\x01R\n" +
	"lowerBound\x12\x1f\n" +
	"\vupper_bound\x18\x02 \x01(\x01R\n" +
	"upperBound\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x03R\x05count\x12\x1e\n" +
	"\n" +
	"percentage\x18\x04 \x01(\x01R\n" +
	"percentage\"\x88\x01\n" +
	"\x12ThroughputAnalysis\x12\x19\n" +
	"\bpeak_rps\x18\x01 \x01(\x01R\apeakRps\x12#\n" +
	"\rsustained_rps\x18\x02 \x01(\x01R\fsustainedRps\x122\n" +
	"\aperiods\x18\x03 \x03(\v2\x18.api.v1.ThroughputPeriodR\aperiods\"\x92\x01\n" +
	"\x10ThroughputPeriod\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x1f\n" +
	"\vaverage_rps\x18\x03 \x01(\x01R\n" +
	"averageRps\x12#\n" +
	"\rrequest_count\x18\x04 \x01(\x03R\frequestCount\"r\n" +
	"\rErrorAnalysis\x125\n" +
	"\n" +
	"categories\x18\x01 \x03(\v2\x15.api.v1.ErrorCategoryR\n" +
	"categories\x12*\n" +
	"\x06trends\x18\x02 \x03(\v2\x12.api.v1.ErrorTrendR\x06trends\"\x86\x01\n" +
	"\rErrorCategory\x12\x1d\n" +
	"\n" +
	"error_type\x18\x01 \x01(\tR\terrorType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\x12\x1e\n" +
	"\n" +
	"percentage\x18\x03 \x01(\x01R\n" +
	"percentage\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"j\n" +
	"\n" +
	"ErrorTrend\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\verror_count\x18\x02 \x01(\x05R\n" +
	"errorCount\x12\x1d\n" +
	"\n" +
	"error_rate\x18\x03 \x01(\x01R\terrorRate\"\x90\x01\n" +
	"\rResourceUsage\x12\"\n" +
	"\x03cpu\x18\x01 \x01(\v2\x10.api.v1.CPUUsageR\x03cpu\x12+\n" +
	"\x06memory\x18\x02 \x01(\v2\x13.api.v1.MemoryUsageR\x06memory\x12.\n" +
	"\anetwork\x18\x03 \x01(\v2\x14.api.v1.NetworkUsageR\anetwork\"\x92\x01\n" +
	"\bCPUUsage\x12&\n" +
	"\x0favg_cpu_percent\x18\x01 \x01(\x01R\ravgCpuPercent\x12&\n" +
	"\x0fmax_cpu_percent\x18\x02 \x01(\x01R\rmaxCpuPercent\x126\n" +
	"\n" +
	"cpu_series\x18\x03 \x03(\v2\x17.api.v1.TimeSeriesPointR\tcpuSeries\"\x9f\x01\n" +
	"\vMemoryUsage\x12(\n" +
	"\x10avg_memory_bytes\x18\x01 \x01(\x03R\x0eavgMemoryBytes\x12(\n" +
	"\x10max_memory_bytes\x18\x02 \x01(\x03R\x0emaxMemoryBytes\x12<\n" +
	"\rmemory_series\x18\x03 \x03(\v2\x17.api.v1.TimeSeriesPointR\fmemorySeries\"\x98\x01\n" +
	"\fNetworkUsage\x12(\n" +
	"\x10total_bytes_sent\x18\x01 \x01(\x03R\x0etotalBytesSent\x120\n" +
	"\x14total_bytes_received\x18\x02 \x01(\x03R\x12totalBytesReceived\x12,\n" +
	"\x12avg_bandwidth_mbps\x18\x03 \x01(\x01R\x10avgBandwidthMbpsBz\n" +
	"\n" +
	"com.api.v1B\fHttpApiProtoP\x01Z%GoSlgBenchmarkTest/proto/api/v1;apiv1\xa2\x02\x03AXX\xaa\x02\x06Api.V1\xca\x02\x06Api\\V1\xe2\x02\x12Api\\V1\\GPBMetadata\xea\x02\aApi::V1b\x06proto3"

var (
	file_api_v1_http_api_proto_rawDescOnce sync.Once
	file_api_v1_http_api_proto_rawDescData []byte
)

func file_api_v1_http_api_proto_rawDescGZIP() []byte {
	file_api_v1_http_api_proto_rawDescOnce.Do(func() {
		file_api_v1_http_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_http_api_proto_rawDesc), len(file_api_v1_http_api_proto_rawDesc)))
	})
	return file_api_v1_http_api_proto_rawDescData
}

var file_api_v1_http_api_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_api_v1_http_api_proto_goTypes = []any{
	(*TestCreateReq)(nil),       // 0: api.v1.TestCreateReq
	(*TestCreateResp)(nil),      // 1: api.v1.TestCreateResp
	(*TestConfig)(nil),          // 2: api.v1.TestConfig
	(*HTTPConfig)(nil),          // 3: api.v1.HTTPConfig
	(*GRPCConfig)(nil),          // 4: api.v1.GRPCConfig
	(*TestStartReq)(nil),        // 5: api.v1.TestStartReq
	(*TestStartResp)(nil),       // 6: api.v1.TestStartResp
	(*TestStopReq)(nil),         // 7: api.v1.TestStopReq
	(*TestStopResp)(nil),        // 8: api.v1.TestStopResp
	(*TestStatusReq)(nil),       // 9: api.v1.TestStatusReq
	(*TestStatusResp)(nil),      // 10: api.v1.TestStatusResp
	(*TestMetrics)(nil),         // 11: api.v1.TestMetrics
	(*TimeSeriesPoint)(nil),     // 12: api.v1.TimeSeriesPoint
	(*TestListReq)(nil),         // 13: api.v1.TestListReq
	(*TestListResp)(nil),        // 14: api.v1.TestListResp
	(*TestSummary)(nil),         // 15: api.v1.TestSummary
	(*TestReportReq)(nil),       // 16: api.v1.TestReportReq
	(*TestReportResp)(nil),      // 17: api.v1.TestReportResp
	(*TestDetailedMetrics)(nil), // 18: api.v1.TestDetailedMetrics
	(*LatencyDistribution)(nil), // 19: api.v1.LatencyDistribution
	(*LatencyBucket)(nil),       // 20: api.v1.LatencyBucket
	(*ThroughputAnalysis)(nil),  // 21: api.v1.ThroughputAnalysis
	(*ThroughputPeriod)(nil),    // 22: api.v1.ThroughputPeriod
	(*ErrorAnalysis)(nil),       // 23: api.v1.ErrorAnalysis
	(*ErrorCategory)(nil),       // 24: api.v1.ErrorCategory
	(*ErrorTrend)(nil),          // 25: api.v1.ErrorTrend
	(*ResourceUsage)(nil),       // 26: api.v1.ResourceUsage
	(*CPUUsage)(nil),            // 27: api.v1.CPUUsage
	(*MemoryUsage)(nil),         // 28: api.v1.MemoryUsage
	(*NetworkUsage)(nil),        // 29: api.v1.NetworkUsage
	nil,                         // 30: api.v1.TestCreateReq.ParametersEntry
	nil,                         // 31: api.v1.HTTPConfig.HeadersEntry
	nil,                         // 32: api.v1.TestMetrics.ErrorTypesEntry
	nil,                         // 33: api.v1.TestMetrics.StatusCodesEntry
}
var file_api_v1_http_api_proto_depIdxs = []int32{
	2,  // 0: api.v1.TestCreateReq.config:type_name -> api.v1.TestConfig
	30, // 1: api.v1.TestCreateReq.parameters:type_name -> api.v1.TestCreateReq.ParametersEntry
	3,  // 2: api.v1.TestConfig.http_config:type_name -> api.v1.HTTPConfig
	4,  // 3: api.v1.TestConfig.grpc_config:type_name -> api.v1.GRPCConfig
	31, // 4: api.v1.HTTPConfig.headers:type_name -> api.v1.HTTPConfig.HeadersEntry
	11, // 5: api.v1.TestStatusResp.metrics:type_name -> api.v1.TestMetrics
	32, // 6: api.v1.TestMetrics.error_types:type_name -> api.v1.TestMetrics.ErrorTypesEntry
	33, // 7: api.v1.TestMetrics.status_codes:type_name -> api.v1.TestMetrics.StatusCodesEntry
	12, // 8: api.v1.TestMetrics.response_time_series:type_name -> api.v1.TimeSeriesPoint
	12, // 9: api.v1.TestMetrics.throughput_series:type_name -> api.v1.TimeSeriesPoint
	12, // 10: api.v1.TestMetrics.error_rate_series:type_name -> api.v1.TimeSeriesPoint
	15, // 11: api.v1.TestListResp.tests:type_name -> api.v1.TestSummary
	18, // 12: api.v1.TestReportResp.detailed_metrics:type_name -> api.v1.TestDetailedMetrics
	11, // 13: api.v1.TestDetailedMetrics.summary:type_name -> api.v1.TestMetrics
	19, // 14: api.v1.TestDetailedMetrics.latency_distribution:type_name -> api.v1.LatencyDistribution
	21, // 15: api.v1.TestDetailedMetrics.throughput_analysis:type_name -> api.v1.ThroughputAnalysis
	23, // 16: api.v1.TestDetailedMetrics.error_analysis:type_name -> api.v1.ErrorAnalysis
	26, // 17: api.v1.TestDetailedMetrics.resource_usage:type_name -> api.v1.ResourceUsage
	20, // 18: api.v1.LatencyDistribution.buckets:type_name -> api.v1.LatencyBucket
	22, // 19: api.v1.ThroughputAnalysis.periods:type_name -> api.v1.ThroughputPeriod
	24, // 20: api.v1.ErrorAnalysis.categories:type_name -> api.v1.ErrorCategory
	25, // 21: api.v1.ErrorAnalysis.trends:type_name -> api.v1.ErrorTrend
	27, // 22: api.v1.ResourceUsage.cpu:type_name -> api.v1.CPUUsage
	28, // 23: api.v1.ResourceUsage.memory:type_name -> api.v1.MemoryUsage
	29, // 24: api.v1.ResourceUsage.network:type_name -> api.v1.NetworkUsage
	12, // 25: api.v1.CPUUsage.cpu_series:type_name -> api.v1.TimeSeriesPoint
	12, // 26: api.v1.MemoryUsage.memory_series:type_name -> api.v1.TimeSeriesPoint
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_v1_http_api_proto_init() }
func file_api_v1_http_api_proto_init() {
	if File_api_v1_http_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_http_api_proto_rawDesc), len(file_api_v1_http_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1_http_api_proto_goTypes,
		DependencyIndexes: file_api_v1_http_api_proto_depIdxs,
		MessageInfos:      file_api_v1_http_api_proto_msgTypes,
	}.Build()
	File_api_v1_http_api_proto = out.File
	file_api_v1_http_api_proto_goTypes = nil
	file_api_v1_http_api_proto_depIdxs = nil
}
