// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1.1.0/common/types.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 资源类型枚举
type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNKNOWN       ResourceType = 0
	ResourceType_RESOURCE_TYPE_GOLD          ResourceType = 1 // 金币
	ResourceType_RESOURCE_TYPE_WOOD          ResourceType = 2 // 木材
	ResourceType_RESOURCE_TYPE_STONE         ResourceType = 3 // 石料
	ResourceType_RESOURCE_TYPE_IRON          ResourceType = 4 // 铁矿
	ResourceType_RESOURCE_TYPE_FOOD          ResourceType = 5 // 粮食
	ResourceType_RESOURCE_TYPE_GEM           ResourceType = 6 // 宝石
	ResourceType_RESOURCE_TYPE_ENERGY        ResourceType = 7 // 能量
	ResourceType_RESOURCE_TYPE_HONOR         ResourceType = 8 // 荣誉�?
	ResourceType_RESOURCE_TYPE_ALLIANCE_COIN ResourceType = 9 // 联盟�?
	// v1.1.0 新增
	ResourceType_RESOURCE_TYPE_CRYSTAL        ResourceType = 10 // 水晶
	ResourceType_RESOURCE_TYPE_MANA           ResourceType = 11 // 魔法�?
	ResourceType_RESOURCE_TYPE_PVP_COIN       ResourceType = 12 // PVP�?
	ResourceType_RESOURCE_TYPE_ACTIVITY_POINT ResourceType = 13 // 活动点数
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0:  "RESOURCE_TYPE_UNKNOWN",
		1:  "RESOURCE_TYPE_GOLD",
		2:  "RESOURCE_TYPE_WOOD",
		3:  "RESOURCE_TYPE_STONE",
		4:  "RESOURCE_TYPE_IRON",
		5:  "RESOURCE_TYPE_FOOD",
		6:  "RESOURCE_TYPE_GEM",
		7:  "RESOURCE_TYPE_ENERGY",
		8:  "RESOURCE_TYPE_HONOR",
		9:  "RESOURCE_TYPE_ALLIANCE_COIN",
		10: "RESOURCE_TYPE_CRYSTAL",
		11: "RESOURCE_TYPE_MANA",
		12: "RESOURCE_TYPE_PVP_COIN",
		13: "RESOURCE_TYPE_ACTIVITY_POINT",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNKNOWN":        0,
		"RESOURCE_TYPE_GOLD":           1,
		"RESOURCE_TYPE_WOOD":           2,
		"RESOURCE_TYPE_STONE":          3,
		"RESOURCE_TYPE_IRON":           4,
		"RESOURCE_TYPE_FOOD":           5,
		"RESOURCE_TYPE_GEM":            6,
		"RESOURCE_TYPE_ENERGY":         7,
		"RESOURCE_TYPE_HONOR":          8,
		"RESOURCE_TYPE_ALLIANCE_COIN":  9,
		"RESOURCE_TYPE_CRYSTAL":        10,
		"RESOURCE_TYPE_MANA":           11,
		"RESOURCE_TYPE_PVP_COIN":       12,
		"RESOURCE_TYPE_ACTIVITY_POINT": 13,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{0}
}

// 通用错误�?
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_SUCCESS               ErrorCode = 0  // 成功
	ErrorCode_ERROR_CODE_UNKNOWN               ErrorCode = 1  // 未知错误
	ErrorCode_ERROR_CODE_INVALID_PARAM         ErrorCode = 2  // 参数错误
	ErrorCode_ERROR_CODE_NOT_FOUND             ErrorCode = 3  // 资源不存�?
	ErrorCode_ERROR_CODE_PERMISSION_DENIED     ErrorCode = 4  // 权限不足
	ErrorCode_ERROR_CODE_INSUFFICIENT_RESOURCE ErrorCode = 5  // 资源不足
	ErrorCode_ERROR_CODE_COOLDOWN_ACTIVE       ErrorCode = 6  // 冷却�?
	ErrorCode_ERROR_CODE_SYSTEM_MAINTENANCE    ErrorCode = 7  // 系统维护
	ErrorCode_ERROR_CODE_VERSION_MISMATCH      ErrorCode = 8  // 版本不匹�?
	ErrorCode_ERROR_CODE_RATE_LIMITED          ErrorCode = 9  // 请求过于频繁
	ErrorCode_ERROR_CODE_ACCOUNT_BANNED        ErrorCode = 10 // 账号被封
	// v1.1.0 新增
	ErrorCode_ERROR_CODE_FEATURE_DISABLED ErrorCode = 11 // 功能已禁�?
	ErrorCode_ERROR_CODE_TIMEOUT          ErrorCode = 12 // 超时
	ErrorCode_ERROR_CODE_CONFLICT         ErrorCode = 13 // 冲突
	ErrorCode_ERROR_CODE_QUOTA_EXCEEDED   ErrorCode = 14 // 配额超出
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "ERROR_CODE_SUCCESS",
		1:  "ERROR_CODE_UNKNOWN",
		2:  "ERROR_CODE_INVALID_PARAM",
		3:  "ERROR_CODE_NOT_FOUND",
		4:  "ERROR_CODE_PERMISSION_DENIED",
		5:  "ERROR_CODE_INSUFFICIENT_RESOURCE",
		6:  "ERROR_CODE_COOLDOWN_ACTIVE",
		7:  "ERROR_CODE_SYSTEM_MAINTENANCE",
		8:  "ERROR_CODE_VERSION_MISMATCH",
		9:  "ERROR_CODE_RATE_LIMITED",
		10: "ERROR_CODE_ACCOUNT_BANNED",
		11: "ERROR_CODE_FEATURE_DISABLED",
		12: "ERROR_CODE_TIMEOUT",
		13: "ERROR_CODE_CONFLICT",
		14: "ERROR_CODE_QUOTA_EXCEEDED",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_SUCCESS":               0,
		"ERROR_CODE_UNKNOWN":               1,
		"ERROR_CODE_INVALID_PARAM":         2,
		"ERROR_CODE_NOT_FOUND":             3,
		"ERROR_CODE_PERMISSION_DENIED":     4,
		"ERROR_CODE_INSUFFICIENT_RESOURCE": 5,
		"ERROR_CODE_COOLDOWN_ACTIVE":       6,
		"ERROR_CODE_SYSTEM_MAINTENANCE":    7,
		"ERROR_CODE_VERSION_MISMATCH":      8,
		"ERROR_CODE_RATE_LIMITED":          9,
		"ERROR_CODE_ACCOUNT_BANNED":        10,
		"ERROR_CODE_FEATURE_DISABLED":      11,
		"ERROR_CODE_TIMEOUT":               12,
		"ERROR_CODE_CONFLICT":              13,
		"ERROR_CODE_QUOTA_EXCEEDED":        14,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{1}
}

// 玩家状态枚�?
type PlayerStatus int32

const (
	PlayerStatus_PLAYER_STATUS_OFFLINE   PlayerStatus = 0 // 离线
	PlayerStatus_PLAYER_STATUS_ONLINE    PlayerStatus = 1 // 在线
	PlayerStatus_PLAYER_STATUS_AWAY      PlayerStatus = 2 // 离开
	PlayerStatus_PLAYER_STATUS_BUSY      PlayerStatus = 3 // 忙碌
	PlayerStatus_PLAYER_STATUS_IN_BATTLE PlayerStatus = 4 // 战斗�?
	// v1.1.0 新增
	PlayerStatus_PLAYER_STATUS_IN_ACTIVITY PlayerStatus = 5 // 活动�?
	PlayerStatus_PLAYER_STATUS_SPECTATING  PlayerStatus = 6 // 观战�?
)

// Enum value maps for PlayerStatus.
var (
	PlayerStatus_name = map[int32]string{
		0: "PLAYER_STATUS_OFFLINE",
		1: "PLAYER_STATUS_ONLINE",
		2: "PLAYER_STATUS_AWAY",
		3: "PLAYER_STATUS_BUSY",
		4: "PLAYER_STATUS_IN_BATTLE",
		5: "PLAYER_STATUS_IN_ACTIVITY",
		6: "PLAYER_STATUS_SPECTATING",
	}
	PlayerStatus_value = map[string]int32{
		"PLAYER_STATUS_OFFLINE":     0,
		"PLAYER_STATUS_ONLINE":      1,
		"PLAYER_STATUS_AWAY":        2,
		"PLAYER_STATUS_BUSY":        3,
		"PLAYER_STATUS_IN_BATTLE":   4,
		"PLAYER_STATUS_IN_ACTIVITY": 5,
		"PLAYER_STATUS_SPECTATING":  6,
	}
)

func (x PlayerStatus) Enum() *PlayerStatus {
	p := new(PlayerStatus)
	*p = x
	return p
}

func (x PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[2].Descriptor()
}

func (PlayerStatus) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[2]
}

func (x PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStatus.Descriptor instead.
func (PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{2}
}

// 物品稀有度
type ItemRarity int32

const (
	ItemRarity_ITEM_RARITY_UNKNOWN   ItemRarity = 0
	ItemRarity_ITEM_RARITY_COMMON    ItemRarity = 1 // 普�?
	ItemRarity_ITEM_RARITY_UNCOMMON  ItemRarity = 2 // 不常�?
	ItemRarity_ITEM_RARITY_RARE      ItemRarity = 3 // 稀�?
	ItemRarity_ITEM_RARITY_EPIC      ItemRarity = 4 // 史诗
	ItemRarity_ITEM_RARITY_LEGENDARY ItemRarity = 5 // 传说
	ItemRarity_ITEM_RARITY_MYTHIC    ItemRarity = 6 // 神话
)

// Enum value maps for ItemRarity.
var (
	ItemRarity_name = map[int32]string{
		0: "ITEM_RARITY_UNKNOWN",
		1: "ITEM_RARITY_COMMON",
		2: "ITEM_RARITY_UNCOMMON",
		3: "ITEM_RARITY_RARE",
		4: "ITEM_RARITY_EPIC",
		5: "ITEM_RARITY_LEGENDARY",
		6: "ITEM_RARITY_MYTHIC",
	}
	ItemRarity_value = map[string]int32{
		"ITEM_RARITY_UNKNOWN":   0,
		"ITEM_RARITY_COMMON":    1,
		"ITEM_RARITY_UNCOMMON":  2,
		"ITEM_RARITY_RARE":      3,
		"ITEM_RARITY_EPIC":      4,
		"ITEM_RARITY_LEGENDARY": 5,
		"ITEM_RARITY_MYTHIC":    6,
	}
)

func (x ItemRarity) Enum() *ItemRarity {
	p := new(ItemRarity)
	*p = x
	return p
}

func (x ItemRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[3].Descriptor()
}

func (ItemRarity) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[3]
}

func (x ItemRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemRarity.Descriptor instead.
func (ItemRarity) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{3}
}

// 玩家区域
type PlayerRegion int32

const (
	PlayerRegion_PLAYER_REGION_UNKNOWN PlayerRegion = 0
	PlayerRegion_PLAYER_REGION_ASIA    PlayerRegion = 1 // 亚洲
	PlayerRegion_PLAYER_REGION_EUROPE  PlayerRegion = 2 // 欧洲
	PlayerRegion_PLAYER_REGION_AMERICA PlayerRegion = 3 // 美洲
	PlayerRegion_PLAYER_REGION_OCEANIA PlayerRegion = 4 // 大洋�?
	PlayerRegion_PLAYER_REGION_AFRICA  PlayerRegion = 5 // 非洲
)

// Enum value maps for PlayerRegion.
var (
	PlayerRegion_name = map[int32]string{
		0: "PLAYER_REGION_UNKNOWN",
		1: "PLAYER_REGION_ASIA",
		2: "PLAYER_REGION_EUROPE",
		3: "PLAYER_REGION_AMERICA",
		4: "PLAYER_REGION_OCEANIA",
		5: "PLAYER_REGION_AFRICA",
	}
	PlayerRegion_value = map[string]int32{
		"PLAYER_REGION_UNKNOWN": 0,
		"PLAYER_REGION_ASIA":    1,
		"PLAYER_REGION_EUROPE":  2,
		"PLAYER_REGION_AMERICA": 3,
		"PLAYER_REGION_OCEANIA": 4,
		"PLAYER_REGION_AFRICA":  5,
	}
)

func (x PlayerRegion) Enum() *PlayerRegion {
	p := new(PlayerRegion)
	*p = x
	return p
}

func (x PlayerRegion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerRegion) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[4].Descriptor()
}

func (PlayerRegion) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[4]
}

func (x PlayerRegion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerRegion.Descriptor instead.
func (PlayerRegion) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{4}
}

// 配置类型
type ConfigType int32

const (
	ConfigType_CONFIG_TYPE_UNKNOWN        ConfigType = 0
	ConfigType_CONFIG_TYPE_GAME_SETTING   ConfigType = 1 // 游戏设置
	ConfigType_CONFIG_TYPE_BALANCE        ConfigType = 2 // 数值平�?
	ConfigType_CONFIG_TYPE_FEATURE_TOGGLE ConfigType = 3 // 功能开�?
	ConfigType_CONFIG_TYPE_LOCALIZATION   ConfigType = 4 // 本地�?
	ConfigType_CONFIG_TYPE_MONETIZATION   ConfigType = 5 // 商业�?
)

// Enum value maps for ConfigType.
var (
	ConfigType_name = map[int32]string{
		0: "CONFIG_TYPE_UNKNOWN",
		1: "CONFIG_TYPE_GAME_SETTING",
		2: "CONFIG_TYPE_BALANCE",
		3: "CONFIG_TYPE_FEATURE_TOGGLE",
		4: "CONFIG_TYPE_LOCALIZATION",
		5: "CONFIG_TYPE_MONETIZATION",
	}
	ConfigType_value = map[string]int32{
		"CONFIG_TYPE_UNKNOWN":        0,
		"CONFIG_TYPE_GAME_SETTING":   1,
		"CONFIG_TYPE_BALANCE":        2,
		"CONFIG_TYPE_FEATURE_TOGGLE": 3,
		"CONFIG_TYPE_LOCALIZATION":   4,
		"CONFIG_TYPE_MONETIZATION":   5,
	}
)

func (x ConfigType) Enum() *ConfigType {
	p := new(ConfigType)
	*p = x
	return p
}

func (x ConfigType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[5].Descriptor()
}

func (ConfigType) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[5]
}

func (x ConfigType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigType.Descriptor instead.
func (ConfigType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{5}
}

// 通知类型
type NotificationType int32

const (
	NotificationType_NOTIFICATION_TYPE_UNKNOWN     NotificationType = 0
	NotificationType_NOTIFICATION_TYPE_SYSTEM      NotificationType = 1 // 系统通知
	NotificationType_NOTIFICATION_TYPE_BATTLE      NotificationType = 2 // 战斗通知
	NotificationType_NOTIFICATION_TYPE_GUILD       NotificationType = 3 // 公会通知
	NotificationType_NOTIFICATION_TYPE_FRIEND      NotificationType = 4 // 好友通知
	NotificationType_NOTIFICATION_TYPE_ACTIVITY    NotificationType = 5 // 活动通知
	NotificationType_NOTIFICATION_TYPE_MAINTENANCE NotificationType = 6 // 维护通知
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_UNKNOWN",
		1: "NOTIFICATION_TYPE_SYSTEM",
		2: "NOTIFICATION_TYPE_BATTLE",
		3: "NOTIFICATION_TYPE_GUILD",
		4: "NOTIFICATION_TYPE_FRIEND",
		5: "NOTIFICATION_TYPE_ACTIVITY",
		6: "NOTIFICATION_TYPE_MAINTENANCE",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_UNKNOWN":     0,
		"NOTIFICATION_TYPE_SYSTEM":      1,
		"NOTIFICATION_TYPE_BATTLE":      2,
		"NOTIFICATION_TYPE_GUILD":       3,
		"NOTIFICATION_TYPE_FRIEND":      4,
		"NOTIFICATION_TYPE_ACTIVITY":    5,
		"NOTIFICATION_TYPE_MAINTENANCE": 6,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_1_0_common_types_proto_enumTypes[6].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_v1_1_0_common_types_proto_enumTypes[6]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{6}
}

// 通用位置信息
type Position struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	X     float32                `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"` // X坐标
	Y     float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"` // Y坐标
	Z     float32                `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"` // Z坐标 (可选，用于3D游戏)
	// v1.1.0 新增
	Rotation      float32 `protobuf:"fixed32,4,opt,name=rotation,proto3" json:"rotation,omitempty"`         // 旋转角度
	ZoneId        string  `protobuf:"bytes,5,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"` // 区域ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Position) Reset() {
	*x = Position{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Position) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Position) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

func (x *Position) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

// 通用物品信息
type Item struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ItemId     string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                                                                     // 物品ID
	TemplateId string                 `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`                                                         // 物品模板ID
	Quantity   int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`                                                                              // 数量
	Quality    int32                  `protobuf:"varint,4,opt,name=quality,proto3" json:"quality,omitempty"`                                                                                // 品质等级
	Properties map[string]string      `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 物品属�?
	ExpireTime int64                  `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                                                        // 过期时间�?
	// v1.1.0 新增
	Rarity        ItemRarity `protobuf:"varint,7,opt,name=rarity,proto3,enum=slg.common.v1_1_0.ItemRarity" json:"rarity,omitempty"` // 稀有度
	Enchantments  []string   `protobuf:"bytes,8,rep,name=enchantments,proto3" json:"enchantments,omitempty"`                        // 附魔效果
	IsTradeable   bool       `protobuf:"varint,9,opt,name=is_tradeable,json=isTradeable,proto3" json:"is_tradeable,omitempty"`      // 是否可交�?
	CreatorId     string     `protobuf:"bytes,10,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`            // 创建者ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{1}
}

func (x *Item) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *Item) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Item) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

func (x *Item) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Item) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Item) GetRarity() ItemRarity {
	if x != nil {
		return x.Rarity
	}
	return ItemRarity_ITEM_RARITY_UNKNOWN
}

func (x *Item) GetEnchantments() []string {
	if x != nil {
		return x.Enchantments
	}
	return nil
}

func (x *Item) GetIsTradeable() bool {
	if x != nil {
		return x.IsTradeable
	}
	return false
}

func (x *Item) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

// 通用资源信息
type Resource struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Type       ResourceType           `protobuf:"varint,1,opt,name=type,proto3,enum=slg.common.v1_1_0.ResourceType" json:"type,omitempty"` // 资源类型
	Amount     int64                  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`                                 // 数量
	MaxAmount  int64                  `protobuf:"varint,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`          // 最大数�?
	LastUpdate int64                  `protobuf:"varint,4,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`       // 最后更新时�?
	// v1.1.0 新增
	ProductionRate   int64 `protobuf:"varint,5,opt,name=production_rate,json=productionRate,proto3" json:"production_rate,omitempty"`       // 生产速率(每秒)
	ProtectionAmount int64 `protobuf:"varint,6,opt,name=protection_amount,json=protectionAmount,proto3" json:"protection_amount,omitempty"` // 保护资源数量
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{2}
}

func (x *Resource) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_RESOURCE_TYPE_UNKNOWN
}

func (x *Resource) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Resource) GetMaxAmount() int64 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

func (x *Resource) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *Resource) GetProductionRate() int64 {
	if x != nil {
		return x.ProductionRate
	}
	return 0
}

func (x *Resource) GetProtectionAmount() int64 {
	if x != nil {
		return x.ProtectionAmount
	}
	return 0
}

// 通用错误信息
type ErrorInfo struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Code    ErrorCode              `protobuf:"varint,1,opt,name=code,proto3,enum=slg.common.v1_1_0.ErrorCode" json:"code,omitempty"`                                               // 错误�?
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                                                           // 错误消息
	Details string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`                                                                           // 详细信息
	Context map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 错误上下�?
	// v1.1.0 新增
	TraceId       string `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"` // 追踪ID
	Timestamp     int64  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`           // 错误时间�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorInfo) Reset() {
	*x = ErrorInfo{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorInfo) ProtoMessage() {}

func (x *ErrorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorInfo.ProtoReflect.Descriptor instead.
func (*ErrorInfo) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorInfo) GetCode() ErrorCode {
	if x != nil {
		return x.Code
	}
	return ErrorCode_ERROR_CODE_SUCCESS
}

func (x *ErrorInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorInfo) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *ErrorInfo) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ErrorInfo) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ErrorInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 通用玩家信息
type PlayerInfo struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	PlayerId   string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                  // 玩家ID
	Nickname   string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                  // 昵称
	Level      int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                       // 等级
	Exp        int64                  `protobuf:"varint,4,opt,name=exp,proto3" json:"exp,omitempty"`                                           // 经验�?
	AvatarUrl  string                 `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`               // 头像URL
	Status     PlayerStatus           `protobuf:"varint,6,opt,name=status,proto3,enum=slg.common.v1_1_0.PlayerStatus" json:"status,omitempty"` // 在线状�?
	LastLogin  int64                  `protobuf:"varint,7,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`              // 最后登录时�?
	AllianceId string                 `protobuf:"bytes,8,opt,name=alliance_id,json=allianceId,proto3" json:"alliance_id,omitempty"`            // 联盟ID
	// v1.1.0 新增
	VipLevel      int32        `protobuf:"varint,9,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`                  // VIP等级
	TitleId       string       `protobuf:"bytes,10,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`                     // 当前称号ID
	Region        PlayerRegion `protobuf:"varint,11,opt,name=region,proto3,enum=slg.common.v1_1_0.PlayerRegion" json:"region,omitempty"` // 所属区�?
	Power         int32        `protobuf:"varint,12,opt,name=power,proto3" json:"power,omitempty"`                                       // 战力
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerInfo) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *PlayerInfo) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_PLAYER_STATUS_OFFLINE
}

func (x *PlayerInfo) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *PlayerInfo) GetAllianceId() string {
	if x != nil {
		return x.AllianceId
	}
	return ""
}

func (x *PlayerInfo) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *PlayerInfo) GetTitleId() string {
	if x != nil {
		return x.TitleId
	}
	return ""
}

func (x *PlayerInfo) GetRegion() PlayerRegion {
	if x != nil {
		return x.Region
	}
	return PlayerRegion_PLAYER_REGION_UNKNOWN
}

func (x *PlayerInfo) GetPower() int32 {
	if x != nil {
		return x.Power
	}
	return 0
}

// 通用时间范围
type TimeRange struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	StartTime int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // 开始时间戳
	EndTime   int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // 结束时间�?
	// v1.1.0 新增
	Timezone      string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`                           // 时区
	IsRepeating   bool   `protobuf:"varint,4,opt,name=is_repeating,json=isRepeating,proto3" json:"is_repeating,omitempty"` // 是否重复
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{5}
}

func (x *TimeRange) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TimeRange) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *TimeRange) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *TimeRange) GetIsRepeating() bool {
	if x != nil {
		return x.IsRepeating
	}
	return false
}

// 通用分页信息
type Pagination struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Page       int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                               // 页码(�?开�?
	PageSize   int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 每页大小
	TotalCount int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 总数�?
	TotalPages int32                  `protobuf:"varint,4,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"` // 总页�?
	// v1.1.0 新增
	HasNext       bool `protobuf:"varint,5,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"` // 是否有下一�?
	HasPrev       bool `protobuf:"varint,6,opt,name=has_prev,json=hasPrev,proto3" json:"has_prev,omitempty"` // 是否有上一�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{6}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Pagination) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *Pagination) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

func (x *Pagination) GetHasPrev() bool {
	if x != nil {
		return x.HasPrev
	}
	return false
}

// 通用配置信息
type ConfigInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfigId      string                 `protobuf:"bytes,1,opt,name=config_id,json=configId,proto3" json:"config_id,omitempty"`                                                       // 配置ID
	ConfigName    string                 `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`                                                 // 配置名称
	ConfigType    ConfigType             `protobuf:"varint,3,opt,name=config_type,json=configType,proto3,enum=slg.common.v1_1_0.ConfigType" json:"config_type,omitempty"`              // 配置类型
	Values        map[string]string      `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 配置�?
	Version       int64                  `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`                                                                        // 配置版本
	IsActive      bool                   `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`                                                      // 是否激�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigInfo) Reset() {
	*x = ConfigInfo{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigInfo) ProtoMessage() {}

func (x *ConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigInfo.ProtoReflect.Descriptor instead.
func (*ConfigInfo) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigInfo) GetConfigId() string {
	if x != nil {
		return x.ConfigId
	}
	return ""
}

func (x *ConfigInfo) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ConfigInfo) GetConfigType() ConfigType {
	if x != nil {
		return x.ConfigType
	}
	return ConfigType_CONFIG_TYPE_UNKNOWN
}

func (x *ConfigInfo) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *ConfigInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// 通用通知信息
type NotificationInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`                                 // 通知ID
	Type           NotificationType       `protobuf:"varint,2,opt,name=type,proto3,enum=slg.common.v1_1_0.NotificationType" json:"type,omitempty"`                                  // 通知类型
	Title          string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                                                         // 标题
	Content        string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                                     // 内容
	CreateTime     int64                  `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                                            // 创建时间
	ExpireTime     int64                  `protobuf:"varint,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`                                            // 过期时间
	IsRead         bool                   `protobuf:"varint,7,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`                                                        // 是否已读
	Data           map[string]string      `protobuf:"bytes,8,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 附加数据
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotificationInfo) Reset() {
	*x = NotificationInfo{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationInfo) ProtoMessage() {}

func (x *NotificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationInfo.ProtoReflect.Descriptor instead.
func (*NotificationInfo) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{8}
}

func (x *NotificationInfo) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationInfo) GetType() NotificationType {
	if x != nil {
		return x.Type
	}
	return NotificationType_NOTIFICATION_TYPE_UNKNOWN
}

func (x *NotificationInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *NotificationInfo) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *NotificationInfo) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 通用统计信息
type StatisticsInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatId        string                 `protobuf:"bytes,1,opt,name=stat_id,json=statId,proto3" json:"stat_id,omitempty"`                                                                  // 统计ID
	Counters      map[string]int64       `protobuf:"bytes,2,rep,name=counters,proto3" json:"counters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 计数�?
	Gauges        map[string]float32     `protobuf:"bytes,3,rep,name=gauges,proto3" json:"gauges,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`    // 仪表
	PeriodStart   int64                  `protobuf:"varint,4,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`                                                  // 统计周期开�?
	PeriodEnd     int64                  `protobuf:"varint,5,opt,name=period_end,json=periodEnd,proto3" json:"period_end,omitempty"`                                                        // 统计周期结束
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatisticsInfo) Reset() {
	*x = StatisticsInfo{}
	mi := &file_v1_1_0_common_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatisticsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticsInfo) ProtoMessage() {}

func (x *StatisticsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_v1_1_0_common_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticsInfo.ProtoReflect.Descriptor instead.
func (*StatisticsInfo) Descriptor() ([]byte, []int) {
	return file_v1_1_0_common_types_proto_rawDescGZIP(), []int{9}
}

func (x *StatisticsInfo) GetStatId() string {
	if x != nil {
		return x.StatId
	}
	return ""
}

func (x *StatisticsInfo) GetCounters() map[string]int64 {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *StatisticsInfo) GetGauges() map[string]float32 {
	if x != nil {
		return x.Gauges
	}
	return nil
}

func (x *StatisticsInfo) GetPeriodStart() int64 {
	if x != nil {
		return x.PeriodStart
	}
	return 0
}

func (x *StatisticsInfo) GetPeriodEnd() int64 {
	if x != nil {
		return x.PeriodEnd
	}
	return 0
}

var File_v1_1_0_common_types_proto protoreflect.FileDescriptor

const file_v1_1_0_common_types_proto_rawDesc = "" +
	"\n" +
	"\x19v1.1.0/common/types.proto\x12\x11slg.common.v1_1_0\"i\n" +
	"\bPosition\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\x12\x1a\n" +
	"\brotation\x18\x04 \x01(\x02R\brotation\x12\x17\n" +
	"\azone_id\x18\x05 \x01(\tR\x06zoneId\"\xbc\x03\n" +
	"\x04Item\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1f\n" +
	"\vtemplate_id\x18\x02 \x01(\tR\n" +
	"templateId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12\x18\n" +
	"\aquality\x18\x04 \x01(\x05R\aquality\x12G\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2'.slg.common.v1_1_0.Item.PropertiesEntryR\n" +
	"properties\x12\x1f\n" +
	"\vexpire_time\x18\x06 \x01(\x03R\n" +
	"expireTime\x125\n" +
	"\x06rarity\x18\a \x01(\x0e2\x1d.slg.common.v1_1_0.ItemRarityR\x06rarity\x12\"\n" +
	"\fenchantments\x18\b \x03(\tR\fenchantments\x12!\n" +
	"\fis_tradeable\x18\t \x01(\bR\visTradeable\x12\x1d\n" +
	"\n" +
	"creator_id\x18\n" +
	" \x01(\tR\tcreatorId\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xed\x01\n" +
	"\bResource\x123\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1f.slg.common.v1_1_0.ResourceTypeR\x04type\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x03R\x06amount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x03 \x01(\x03R\tmaxAmount\x12\x1f\n" +
	"\vlast_update\x18\x04 \x01(\x03R\n" +
	"lastUpdate\x12'\n" +
	"\x0fproduction_rate\x18\x05 \x01(\x03R\x0eproductionRate\x12+\n" +
	"\x11protection_amount\x18\x06 \x01(\x03R\x10protectionAmount\"\xab\x02\n" +
	"\tErrorInfo\x120\n" +
	"\x04code\x18\x01 \x01(\x0e2\x1c.slg.common.v1_1_0.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails\x12C\n" +
	"\acontext\x18\x04 \x03(\v2).slg.common.v1_1_0.ErrorInfo.ContextEntryR\acontext\x12\x19\n" +
	"\btrace_id\x18\x05 \x01(\tR\atraceId\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8c\x03\n" +
	"\n" +
	"PlayerInfo\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12\x10\n" +
	"\x03exp\x18\x04 \x01(\x03R\x03exp\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\tR\tavatarUrl\x127\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1f.slg.common.v1_1_0.PlayerStatusR\x06status\x12\x1d\n" +
	"\n" +
	"last_login\x18\a \x01(\x03R\tlastLogin\x12\x1f\n" +
	"\valliance_id\x18\b \x01(\tR\n" +
	"allianceId\x12\x1b\n" +
	"\tvip_level\x18\t \x01(\x05R\bvipLevel\x12\x19\n" +
	"\btitle_id\x18\n" +
	" \x01(\tR\atitleId\x127\n" +
	"\x06region\x18\v \x01(\x0e2\x1f.slg.common.v1_1_0.PlayerRegionR\x06region\x12\x14\n" +
	"\x05power\x18\f \x01(\x05R\x05power\"\x84\x01\n" +
	"\tTimeRange\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x1a\n" +
	"\btimezone\x18\x03 \x01(\tR\btimezone\x12!\n" +
	"\fis_repeating\x18\x04 \x01(\bR\visRepeating\"\xb5\x01\n" +
	"\n" +
	"Pagination\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vtotal_pages\x18\x04 \x01(\x05R\n" +
	"totalPages\x12\x19\n" +
	"\bhas_next\x18\x05 \x01(\bR\ahasNext\x12\x19\n" +
	"\bhas_prev\x18\x06 \x01(\bR\ahasPrev\"\xbf\x02\n" +
	"\n" +
	"ConfigInfo\x12\x1b\n" +
	"\tconfig_id\x18\x01 \x01(\tR\bconfigId\x12\x1f\n" +
	"\vconfig_name\x18\x02 \x01(\tR\n" +
	"configName\x12>\n" +
	"\vconfig_type\x18\x03 \x01(\x0e2\x1d.slg.common.v1_1_0.ConfigTypeR\n" +
	"configType\x12A\n" +
	"\x06values\x18\x04 \x03(\v2).slg.common.v1_1_0.ConfigInfo.ValuesEntryR\x06values\x12\x18\n" +
	"\aversion\x18\x05 \x01(\x03R\aversion\x12\x1b\n" +
	"\tis_active\x18\x06 \x01(\bR\bisActive\x1a9\n" +
	"\vValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfb\x02\n" +
	"\x10NotificationInfo\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x127\n" +
	"\x04type\x18\x02 \x01(\x0e2#.slg.common.v1_1_0.NotificationTypeR\x04type\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x1f\n" +
	"\vcreate_time\x18\x05 \x01(\x03R\n" +
	"createTime\x12\x1f\n" +
	"\vexpire_time\x18\x06 \x01(\x03R\n" +
	"expireTime\x12\x17\n" +
	"\ais_read\x18\a \x01(\bR\x06isRead\x12A\n" +
	"\x04data\x18\b \x03(\v2-.slg.common.v1_1_0.NotificationInfo.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x02\n" +
	"\x0eStatisticsInfo\x12\x17\n" +
	"\astat_id\x18\x01 \x01(\tR\x06statId\x12K\n" +
	"\bcounters\x18\x02 \x03(\v2/.slg.common.v1_1_0.StatisticsInfo.CountersEntryR\bcounters\x12E\n" +
	"\x06gauges\x18\x03 \x03(\v2-.slg.common.v1_1_0.StatisticsInfo.GaugesEntryR\x06gauges\x12!\n" +
	"\fperiod_start\x18\x04 \x01(\x03R\vperiodStart\x12\x1d\n" +
	"\n" +
	"period_end\x18\x05 \x01(\x03R\tperiodEnd\x1a;\n" +
	"\rCountersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a9\n" +
	"\vGaugesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01*\xfe\x02\n" +
	"\fResourceType\x12\x19\n" +
	"\x15RESOURCE_TYPE_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12RESOURCE_TYPE_GOLD\x10\x01\x12\x16\n" +
	"\x12RESOURCE_TYPE_WOOD\x10\x02\x12\x17\n" +
	"\x13RESOURCE_TYPE_STONE\x10\x03\x12\x16\n" +
	"\x12RESOURCE_TYPE_IRON\x10\x04\x12\x16\n" +
	"\x12RESOURCE_TYPE_FOOD\x10\x05\x12\x15\n" +
	"\x11RESOURCE_TYPE_GEM\x10\x06\x12\x18\n" +
	"\x14RESOURCE_TYPE_ENERGY\x10\a\x12\x17\n" +
	"\x13RESOURCE_TYPE_HONOR\x10\b\x12\x1f\n" +
	"\x1bRESOURCE_TYPE_ALLIANCE_COIN\x10\t\x12\x19\n" +
	"\x15RESOURCE_TYPE_CRYSTAL\x10\n" +
	"\x12\x16\n" +
	"\x12RESOURCE_TYPE_MANA\x10\v\x12\x1a\n" +
	"\x16RESOURCE_TYPE_PVP_COIN\x10\f\x12 \n" +
	"\x1cRESOURCE_TYPE_ACTIVITY_POINT\x10\r*\xcc\x03\n" +
	"\tErrorCode\x12\x16\n" +
	"\x12ERROR_CODE_SUCCESS\x10\x00\x12\x16\n" +
	"\x12ERROR_CODE_UNKNOWN\x10\x01\x12\x1c\n" +
	"\x18ERROR_CODE_INVALID_PARAM\x10\x02\x12\x18\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10\x03\x12 \n" +
	"\x1cERROR_CODE_PERMISSION_DENIED\x10\x04\x12$\n" +
	" ERROR_CODE_INSUFFICIENT_RESOURCE\x10\x05\x12\x1e\n" +
	"\x1aERROR_CODE_COOLDOWN_ACTIVE\x10\x06\x12!\n" +
	"\x1dERROR_CODE_SYSTEM_MAINTENANCE\x10\a\x12\x1f\n" +
	"\x1bERROR_CODE_VERSION_MISMATCH\x10\b\x12\x1b\n" +
	"\x17ERROR_CODE_RATE_LIMITED\x10\t\x12\x1d\n" +
	"\x19ERROR_CODE_ACCOUNT_BANNED\x10\n" +
	"\x12\x1f\n" +
	"\x1bERROR_CODE_FEATURE_DISABLED\x10\v\x12\x16\n" +
	"\x12ERROR_CODE_TIMEOUT\x10\f\x12\x17\n" +
	"\x13ERROR_CODE_CONFLICT\x10\r\x12\x1d\n" +
	"\x19ERROR_CODE_QUOTA_EXCEEDED\x10\x0e*\xcd\x01\n" +
	"\fPlayerStatus\x12\x19\n" +
	"\x15PLAYER_STATUS_OFFLINE\x10\x00\x12\x18\n" +
	"\x14PLAYER_STATUS_ONLINE\x10\x01\x12\x16\n" +
	"\x12PLAYER_STATUS_AWAY\x10\x02\x12\x16\n" +
	"\x12PLAYER_STATUS_BUSY\x10\x03\x12\x1b\n" +
	"\x17PLAYER_STATUS_IN_BATTLE\x10\x04\x12\x1d\n" +
	"\x19PLAYER_STATUS_IN_ACTIVITY\x10\x05\x12\x1c\n" +
	"\x18PLAYER_STATUS_SPECTATING\x10\x06*\xb6\x01\n" +
	"\n" +
	"ItemRarity\x12\x17\n" +
	"\x13ITEM_RARITY_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12ITEM_RARITY_COMMON\x10\x01\x12\x18\n" +
	"\x14ITEM_RARITY_UNCOMMON\x10\x02\x12\x14\n" +
	"\x10ITEM_RARITY_RARE\x10\x03\x12\x14\n" +
	"\x10ITEM_RARITY_EPIC\x10\x04\x12\x19\n" +
	"\x15ITEM_RARITY_LEGENDARY\x10\x05\x12\x16\n" +
	"\x12ITEM_RARITY_MYTHIC\x10\x06*\xab\x01\n" +
	"\fPlayerRegion\x12\x19\n" +
	"\x15PLAYER_REGION_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12PLAYER_REGION_ASIA\x10\x01\x12\x18\n" +
	"\x14PLAYER_REGION_EUROPE\x10\x02\x12\x19\n" +
	"\x15PLAYER_REGION_AMERICA\x10\x03\x12\x19\n" +
	"\x15PLAYER_REGION_OCEANIA\x10\x04\x12\x18\n" +
	"\x14PLAYER_REGION_AFRICA\x10\x05*\xb8\x01\n" +
	"\n" +
	"ConfigType\x12\x17\n" +
	"\x13CONFIG_TYPE_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18CONFIG_TYPE_GAME_SETTING\x10\x01\x12\x17\n" +
	"\x13CONFIG_TYPE_BALANCE\x10\x02\x12\x1e\n" +
	"\x1aCONFIG_TYPE_FEATURE_TOGGLE\x10\x03\x12\x1c\n" +
	"\x18CONFIG_TYPE_LOCALIZATION\x10\x04\x12\x1c\n" +
	"\x18CONFIG_TYPE_MONETIZATION\x10\x05*\xeb\x01\n" +
	"\x10NotificationType\x12\x1d\n" +
	"\x19NOTIFICATION_TYPE_UNKNOWN\x10\x00\x12\x1c\n" +
	"\x18NOTIFICATION_TYPE_SYSTEM\x10\x01\x12\x1c\n" +
	"\x18NOTIFICATION_TYPE_BATTLE\x10\x02\x12\x1b\n" +
	"\x17NOTIFICATION_TYPE_GUILD\x10\x03\x12\x1c\n" +
	"\x18NOTIFICATION_TYPE_FRIEND\x10\x04\x12\x1e\n" +
	"\x1aNOTIFICATION_TYPE_ACTIVITY\x10\x05\x12!\n" +
	"\x1dNOTIFICATION_TYPE_MAINTENANCE\x10\x06B\xb8\x01\n" +
	"\x15com.slg.common.v1_1_0B\n" +
	"TypesProtoP\x01Z5GoSlgBenchmarkTest/generated/slg/v1_1_0/common;common\xa2\x02\x03SCV\xaa\x02\x0fSlg.Common.V110\xca\x02\x0fSlg\\Common\\V110\xe2\x02\x1bSlg\\Common\\V110\\GPBMetadata\xea\x02\x11Slg::Common::V110b\x06proto3"

var (
	file_v1_1_0_common_types_proto_rawDescOnce sync.Once
	file_v1_1_0_common_types_proto_rawDescData []byte
)

func file_v1_1_0_common_types_proto_rawDescGZIP() []byte {
	file_v1_1_0_common_types_proto_rawDescOnce.Do(func() {
		file_v1_1_0_common_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_1_0_common_types_proto_rawDesc), len(file_v1_1_0_common_types_proto_rawDesc)))
	})
	return file_v1_1_0_common_types_proto_rawDescData
}

var file_v1_1_0_common_types_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_v1_1_0_common_types_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_v1_1_0_common_types_proto_goTypes = []any{
	(ResourceType)(0),        // 0: slg.common.v1_1_0.ResourceType
	(ErrorCode)(0),           // 1: slg.common.v1_1_0.ErrorCode
	(PlayerStatus)(0),        // 2: slg.common.v1_1_0.PlayerStatus
	(ItemRarity)(0),          // 3: slg.common.v1_1_0.ItemRarity
	(PlayerRegion)(0),        // 4: slg.common.v1_1_0.PlayerRegion
	(ConfigType)(0),          // 5: slg.common.v1_1_0.ConfigType
	(NotificationType)(0),    // 6: slg.common.v1_1_0.NotificationType
	(*Position)(nil),         // 7: slg.common.v1_1_0.Position
	(*Item)(nil),             // 8: slg.common.v1_1_0.Item
	(*Resource)(nil),         // 9: slg.common.v1_1_0.Resource
	(*ErrorInfo)(nil),        // 10: slg.common.v1_1_0.ErrorInfo
	(*PlayerInfo)(nil),       // 11: slg.common.v1_1_0.PlayerInfo
	(*TimeRange)(nil),        // 12: slg.common.v1_1_0.TimeRange
	(*Pagination)(nil),       // 13: slg.common.v1_1_0.Pagination
	(*ConfigInfo)(nil),       // 14: slg.common.v1_1_0.ConfigInfo
	(*NotificationInfo)(nil), // 15: slg.common.v1_1_0.NotificationInfo
	(*StatisticsInfo)(nil),   // 16: slg.common.v1_1_0.StatisticsInfo
	nil,                      // 17: slg.common.v1_1_0.Item.PropertiesEntry
	nil,                      // 18: slg.common.v1_1_0.ErrorInfo.ContextEntry
	nil,                      // 19: slg.common.v1_1_0.ConfigInfo.ValuesEntry
	nil,                      // 20: slg.common.v1_1_0.NotificationInfo.DataEntry
	nil,                      // 21: slg.common.v1_1_0.StatisticsInfo.CountersEntry
	nil,                      // 22: slg.common.v1_1_0.StatisticsInfo.GaugesEntry
}
var file_v1_1_0_common_types_proto_depIdxs = []int32{
	17, // 0: slg.common.v1_1_0.Item.properties:type_name -> slg.common.v1_1_0.Item.PropertiesEntry
	3,  // 1: slg.common.v1_1_0.Item.rarity:type_name -> slg.common.v1_1_0.ItemRarity
	0,  // 2: slg.common.v1_1_0.Resource.type:type_name -> slg.common.v1_1_0.ResourceType
	1,  // 3: slg.common.v1_1_0.ErrorInfo.code:type_name -> slg.common.v1_1_0.ErrorCode
	18, // 4: slg.common.v1_1_0.ErrorInfo.context:type_name -> slg.common.v1_1_0.ErrorInfo.ContextEntry
	2,  // 5: slg.common.v1_1_0.PlayerInfo.status:type_name -> slg.common.v1_1_0.PlayerStatus
	4,  // 6: slg.common.v1_1_0.PlayerInfo.region:type_name -> slg.common.v1_1_0.PlayerRegion
	5,  // 7: slg.common.v1_1_0.ConfigInfo.config_type:type_name -> slg.common.v1_1_0.ConfigType
	19, // 8: slg.common.v1_1_0.ConfigInfo.values:type_name -> slg.common.v1_1_0.ConfigInfo.ValuesEntry
	6,  // 9: slg.common.v1_1_0.NotificationInfo.type:type_name -> slg.common.v1_1_0.NotificationType
	20, // 10: slg.common.v1_1_0.NotificationInfo.data:type_name -> slg.common.v1_1_0.NotificationInfo.DataEntry
	21, // 11: slg.common.v1_1_0.StatisticsInfo.counters:type_name -> slg.common.v1_1_0.StatisticsInfo.CountersEntry
	22, // 12: slg.common.v1_1_0.StatisticsInfo.gauges:type_name -> slg.common.v1_1_0.StatisticsInfo.GaugesEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_v1_1_0_common_types_proto_init() }
func file_v1_1_0_common_types_proto_init() {
	if File_v1_1_0_common_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_1_0_common_types_proto_rawDesc), len(file_v1_1_0_common_types_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_1_0_common_types_proto_goTypes,
		DependencyIndexes: file_v1_1_0_common_types_proto_depIdxs,
		EnumInfos:         file_v1_1_0_common_types_proto_enumTypes,
		MessageInfos:      file_v1_1_0_common_types_proto_msgTypes,
	}.Build()
	File_v1_1_0_common_types_proto = out.File
	file_v1_1_0_common_types_proto_goTypes = nil
	file_v1_1_0_common_types_proto_depIdxs = nil
}
