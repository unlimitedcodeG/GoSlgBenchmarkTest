// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: v1.0.0/combat/battle.proto

package combat

import (
	common "GoSlgBenchmarkTest/generated/slg/v1_0_0/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举定义
type BattleType int32

const (
	BattleType_BATTLE_TYPE_UNKNOWN   BattleType = 0
	BattleType_BATTLE_TYPE_PVE       BattleType = 1 // PVE战斗
	BattleType_BATTLE_TYPE_PVP       BattleType = 2 // PVP战斗
	BattleType_BATTLE_TYPE_GUILD_WAR BattleType = 3 // 公会�?
	BattleType_BATTLE_TYPE_ARENA     BattleType = 4 // 竞技�?
	BattleType_BATTLE_TYPE_RAID      BattleType = 5 // 团队副本
)

// Enum value maps for BattleType.
var (
	BattleType_name = map[int32]string{
		0: "BATTLE_TYPE_UNKNOWN",
		1: "BATTLE_TYPE_PVE",
		2: "BATTLE_TYPE_PVP",
		3: "BATTLE_TYPE_GUILD_WAR",
		4: "BATTLE_TYPE_ARENA",
		5: "BATTLE_TYPE_RAID",
	}
	BattleType_value = map[string]int32{
		"BATTLE_TYPE_UNKNOWN":   0,
		"BATTLE_TYPE_PVE":       1,
		"BATTLE_TYPE_PVP":       2,
		"BATTLE_TYPE_GUILD_WAR": 3,
		"BATTLE_TYPE_ARENA":     4,
		"BATTLE_TYPE_RAID":      5,
	}
)

func (x BattleType) Enum() *BattleType {
	p := new(BattleType)
	*p = x
	return p
}

func (x BattleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[0].Descriptor()
}

func (BattleType) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[0]
}

func (x BattleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleType.Descriptor instead.
func (BattleType) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{0}
}

type BattleResult int32

const (
	BattleResult_BATTLE_RESULT_UNKNOWN BattleResult = 0
	BattleResult_BATTLE_RESULT_VICTORY BattleResult = 1 // 胜利
	BattleResult_BATTLE_RESULT_DEFEAT  BattleResult = 2 // 失败
	BattleResult_BATTLE_RESULT_DRAW    BattleResult = 3 // 平局
	BattleResult_BATTLE_RESULT_TIMEOUT BattleResult = 4 // 超时
)

// Enum value maps for BattleResult.
var (
	BattleResult_name = map[int32]string{
		0: "BATTLE_RESULT_UNKNOWN",
		1: "BATTLE_RESULT_VICTORY",
		2: "BATTLE_RESULT_DEFEAT",
		3: "BATTLE_RESULT_DRAW",
		4: "BATTLE_RESULT_TIMEOUT",
	}
	BattleResult_value = map[string]int32{
		"BATTLE_RESULT_UNKNOWN": 0,
		"BATTLE_RESULT_VICTORY": 1,
		"BATTLE_RESULT_DEFEAT":  2,
		"BATTLE_RESULT_DRAW":    3,
		"BATTLE_RESULT_TIMEOUT": 4,
	}
)

func (x BattleResult) Enum() *BattleResult {
	p := new(BattleResult)
	*p = x
	return p
}

func (x BattleResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleResult) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[1].Descriptor()
}

func (BattleResult) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[1]
}

func (x BattleResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleResult.Descriptor instead.
func (BattleResult) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{1}
}

type BattlePhase int32

const (
	BattlePhase_BATTLE_PHASE_UNKNOWN   BattlePhase = 0
	BattlePhase_BATTLE_PHASE_PREPARING BattlePhase = 1 // 准备阶段
	BattlePhase_BATTLE_PHASE_FIGHTING  BattlePhase = 2 // 战斗阶段
	BattlePhase_BATTLE_PHASE_ENDING    BattlePhase = 3 // 结束阶段
)

// Enum value maps for BattlePhase.
var (
	BattlePhase_name = map[int32]string{
		0: "BATTLE_PHASE_UNKNOWN",
		1: "BATTLE_PHASE_PREPARING",
		2: "BATTLE_PHASE_FIGHTING",
		3: "BATTLE_PHASE_ENDING",
	}
	BattlePhase_value = map[string]int32{
		"BATTLE_PHASE_UNKNOWN":   0,
		"BATTLE_PHASE_PREPARING": 1,
		"BATTLE_PHASE_FIGHTING":  2,
		"BATTLE_PHASE_ENDING":    3,
	}
)

func (x BattlePhase) Enum() *BattlePhase {
	p := new(BattlePhase)
	*p = x
	return p
}

func (x BattlePhase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattlePhase) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[2].Descriptor()
}

func (BattlePhase) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[2]
}

func (x BattlePhase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattlePhase.Descriptor instead.
func (BattlePhase) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{2}
}

type UnitStatus int32

const (
	UnitStatus_UNIT_STATUS_UNKNOWN   UnitStatus = 0
	UnitStatus_UNIT_STATUS_IDLE      UnitStatus = 1 // 待机
	UnitStatus_UNIT_STATUS_MOVING    UnitStatus = 2 // 移动�?
	UnitStatus_UNIT_STATUS_ATTACKING UnitStatus = 3 // 攻击�?
	UnitStatus_UNIT_STATUS_CASTING   UnitStatus = 4 // 施法�?
	UnitStatus_UNIT_STATUS_STUNNED   UnitStatus = 5 // 晕眩
	UnitStatus_UNIT_STATUS_DEAD      UnitStatus = 6 // 死亡
)

// Enum value maps for UnitStatus.
var (
	UnitStatus_name = map[int32]string{
		0: "UNIT_STATUS_UNKNOWN",
		1: "UNIT_STATUS_IDLE",
		2: "UNIT_STATUS_MOVING",
		3: "UNIT_STATUS_ATTACKING",
		4: "UNIT_STATUS_CASTING",
		5: "UNIT_STATUS_STUNNED",
		6: "UNIT_STATUS_DEAD",
	}
	UnitStatus_value = map[string]int32{
		"UNIT_STATUS_UNKNOWN":   0,
		"UNIT_STATUS_IDLE":      1,
		"UNIT_STATUS_MOVING":    2,
		"UNIT_STATUS_ATTACKING": 3,
		"UNIT_STATUS_CASTING":   4,
		"UNIT_STATUS_STUNNED":   5,
		"UNIT_STATUS_DEAD":      6,
	}
)

func (x UnitStatus) Enum() *UnitStatus {
	p := new(UnitStatus)
	*p = x
	return p
}

func (x UnitStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[3].Descriptor()
}

func (UnitStatus) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[3]
}

func (x UnitStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitStatus.Descriptor instead.
func (UnitStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{3}
}

type ActionType int32

const (
	ActionType_ACTION_TYPE_UNKNOWN ActionType = 0
	ActionType_ACTION_TYPE_MOVE    ActionType = 1 // 移动
	ActionType_ACTION_TYPE_ATTACK  ActionType = 2 // 普通攻�?
	ActionType_ACTION_TYPE_SKILL   ActionType = 3 // 技能攻�?
	ActionType_ACTION_TYPE_HEAL    ActionType = 4 // 治疗
	ActionType_ACTION_TYPE_BUFF    ActionType = 5 // 增益
	ActionType_ACTION_TYPE_DEBUFF  ActionType = 6 // 减益
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_UNKNOWN",
		1: "ACTION_TYPE_MOVE",
		2: "ACTION_TYPE_ATTACK",
		3: "ACTION_TYPE_SKILL",
		4: "ACTION_TYPE_HEAL",
		5: "ACTION_TYPE_BUFF",
		6: "ACTION_TYPE_DEBUFF",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNKNOWN": 0,
		"ACTION_TYPE_MOVE":    1,
		"ACTION_TYPE_ATTACK":  2,
		"ACTION_TYPE_SKILL":   3,
		"ACTION_TYPE_HEAL":    4,
		"ACTION_TYPE_BUFF":    5,
		"ACTION_TYPE_DEBUFF":  6,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[4].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[4]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{4}
}

type BuffType int32

const (
	BuffType_BUFF_TYPE_UNKNOWN      BuffType = 0
	BuffType_BUFF_TYPE_ATTACK_UP    BuffType = 1 // 攻击力提�?
	BuffType_BUFF_TYPE_DEFENSE_UP   BuffType = 2 // 防御力提�?
	BuffType_BUFF_TYPE_SPEED_UP     BuffType = 3 // 速度提升
	BuffType_BUFF_TYPE_ATTACK_DOWN  BuffType = 4 // 攻击力降�?
	BuffType_BUFF_TYPE_DEFENSE_DOWN BuffType = 5 // 防御力降�?
	BuffType_BUFF_TYPE_SPEED_DOWN   BuffType = 6 // 速度降低
	BuffType_BUFF_TYPE_POISON       BuffType = 7 // 中毒
	BuffType_BUFF_TYPE_REGENERATION BuffType = 8 // 回复
)

// Enum value maps for BuffType.
var (
	BuffType_name = map[int32]string{
		0: "BUFF_TYPE_UNKNOWN",
		1: "BUFF_TYPE_ATTACK_UP",
		2: "BUFF_TYPE_DEFENSE_UP",
		3: "BUFF_TYPE_SPEED_UP",
		4: "BUFF_TYPE_ATTACK_DOWN",
		5: "BUFF_TYPE_DEFENSE_DOWN",
		6: "BUFF_TYPE_SPEED_DOWN",
		7: "BUFF_TYPE_POISON",
		8: "BUFF_TYPE_REGENERATION",
	}
	BuffType_value = map[string]int32{
		"BUFF_TYPE_UNKNOWN":      0,
		"BUFF_TYPE_ATTACK_UP":    1,
		"BUFF_TYPE_DEFENSE_UP":   2,
		"BUFF_TYPE_SPEED_UP":     3,
		"BUFF_TYPE_ATTACK_DOWN":  4,
		"BUFF_TYPE_DEFENSE_DOWN": 5,
		"BUFF_TYPE_SPEED_DOWN":   6,
		"BUFF_TYPE_POISON":       7,
		"BUFF_TYPE_REGENERATION": 8,
	}
)

func (x BuffType) Enum() *BuffType {
	p := new(BuffType)
	*p = x
	return p
}

func (x BuffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuffType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_0_0_combat_battle_proto_enumTypes[5].Descriptor()
}

func (BuffType) Type() protoreflect.EnumType {
	return &file_v1_0_0_combat_battle_proto_enumTypes[5]
}

func (x BuffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuffType.Descriptor instead.
func (BuffType) EnumDescriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{5}
}

// 战斗请求
type BattleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BattleId      string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`                                          // 战斗ID
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`                                          // 玩家ID
	BattleType    BattleType             `protobuf:"varint,3,opt,name=battle_type,json=battleType,proto3,enum=slg.combat.v1_0_0.BattleType" json:"battle_type,omitempty"` // 战斗类型
	UnitIds       []string               `protobuf:"bytes,4,rep,name=unit_ids,json=unitIds,proto3" json:"unit_ids,omitempty"`                                             // 参战单位ID列表
	TargetPos     *common.Position       `protobuf:"bytes,5,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`                                       // 目标位置
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                       // 请求时间�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleRequest) Reset() {
	*x = BattleRequest{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRequest) ProtoMessage() {}

func (x *BattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRequest.ProtoReflect.Descriptor instead.
func (*BattleRequest) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{0}
}

func (x *BattleRequest) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BattleRequest) GetBattleType() BattleType {
	if x != nil {
		return x.BattleType
	}
	return BattleType_BATTLE_TYPE_UNKNOWN
}

func (x *BattleRequest) GetUnitIds() []string {
	if x != nil {
		return x.UnitIds
	}
	return nil
}

func (x *BattleRequest) GetTargetPos() *common.Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

func (x *BattleRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 战斗响应
type BattleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BattleId      string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`                  // 战斗ID
	Result        BattleResult           `protobuf:"varint,2,opt,name=result,proto3,enum=slg.combat.v1_0_0.BattleResult" json:"result,omitempty"` // 战斗结果
	BattleUnits   []*BattleUnit          `protobuf:"bytes,3,rep,name=battle_units,json=battleUnits,proto3" json:"battle_units,omitempty"`         // 战斗单位状�?
	Reward        *BattleReward          `protobuf:"bytes,4,opt,name=reward,proto3" json:"reward,omitempty"`                                      // 战斗奖励
	DurationMs    int32                  `protobuf:"varint,5,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`           // 战斗持续时间(毫秒)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleResponse) Reset() {
	*x = BattleResponse{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleResponse) ProtoMessage() {}

func (x *BattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleResponse.ProtoReflect.Descriptor instead.
func (*BattleResponse) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{1}
}

func (x *BattleResponse) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleResponse) GetResult() BattleResult {
	if x != nil {
		return x.Result
	}
	return BattleResult_BATTLE_RESULT_UNKNOWN
}

func (x *BattleResponse) GetBattleUnits() []*BattleUnit {
	if x != nil {
		return x.BattleUnits
	}
	return nil
}

func (x *BattleResponse) GetReward() *BattleReward {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *BattleResponse) GetDurationMs() int32 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

// 战斗状态推�?
type BattleStatePush struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BattleId      string                 `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`               // 战斗ID
	FrameSeq      uint64                 `protobuf:"varint,2,opt,name=frame_seq,json=frameSeq,proto3" json:"frame_seq,omitempty"`              // 帧序列号
	Actions       []*BattleAction        `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`                                 // 本帧动作列表
	Phase         BattlePhase            `protobuf:"varint,4,opt,name=phase,proto3,enum=slg.combat.v1_0_0.BattlePhase" json:"phase,omitempty"` // 战斗阶段
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                            // 服务器时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleStatePush) Reset() {
	*x = BattleStatePush{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleStatePush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleStatePush) ProtoMessage() {}

func (x *BattleStatePush) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleStatePush.ProtoReflect.Descriptor instead.
func (*BattleStatePush) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{2}
}

func (x *BattleStatePush) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *BattleStatePush) GetFrameSeq() uint64 {
	if x != nil {
		return x.FrameSeq
	}
	return 0
}

func (x *BattleStatePush) GetActions() []*BattleAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *BattleStatePush) GetPhase() BattlePhase {
	if x != nil {
		return x.Phase
	}
	return BattlePhase_BATTLE_PHASE_UNKNOWN
}

func (x *BattleStatePush) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 战斗单位
type BattleUnit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UnitId        string                 `protobuf:"bytes,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`                      // 单位ID
	TemplateId    string                 `protobuf:"bytes,2,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`          // 模板ID
	Hp            int32                  `protobuf:"varint,3,opt,name=hp,proto3" json:"hp,omitempty"`                                           // 当前血�?
	MaxHp         int32                  `protobuf:"varint,4,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`                        // 最大血�?
	Mp            int32                  `protobuf:"varint,5,opt,name=mp,proto3" json:"mp,omitempty"`                                           // 当前魔法�?
	MaxMp         int32                  `protobuf:"varint,6,opt,name=max_mp,json=maxMp,proto3" json:"max_mp,omitempty"`                        // 最大魔法�?
	Position      *common.Position       `protobuf:"bytes,7,opt,name=position,proto3" json:"position,omitempty"`                                // 位置
	Status        UnitStatus             `protobuf:"varint,8,opt,name=status,proto3,enum=slg.combat.v1_0_0.UnitStatus" json:"status,omitempty"` // 状�?
	Buffs         []*UnitBuff            `protobuf:"bytes,9,rep,name=buffs,proto3" json:"buffs,omitempty"`                                      // 增益/减益效果
	Stats         *UnitStats             `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`                                     // 单位属�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleUnit) Reset() {
	*x = BattleUnit{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleUnit) ProtoMessage() {}

func (x *BattleUnit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleUnit.ProtoReflect.Descriptor instead.
func (*BattleUnit) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{3}
}

func (x *BattleUnit) GetUnitId() string {
	if x != nil {
		return x.UnitId
	}
	return ""
}

func (x *BattleUnit) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *BattleUnit) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *BattleUnit) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *BattleUnit) GetMp() int32 {
	if x != nil {
		return x.Mp
	}
	return 0
}

func (x *BattleUnit) GetMaxMp() int32 {
	if x != nil {
		return x.MaxMp
	}
	return 0
}

func (x *BattleUnit) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BattleUnit) GetStatus() UnitStatus {
	if x != nil {
		return x.Status
	}
	return UnitStatus_UNIT_STATUS_UNKNOWN
}

func (x *BattleUnit) GetBuffs() []*UnitBuff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *BattleUnit) GetStats() *UnitStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 战斗动作
type BattleAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionId      string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`                                          // 动作ID
	ActionType    ActionType             `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=slg.combat.v1_0_0.ActionType" json:"action_type,omitempty"` // 动作类型
	SourceUnitId  string                 `protobuf:"bytes,3,opt,name=source_unit_id,json=sourceUnitId,proto3" json:"source_unit_id,omitempty"`                            // 发起单位ID
	TargetUnitIds []string               `protobuf:"bytes,4,rep,name=target_unit_ids,json=targetUnitIds,proto3" json:"target_unit_ids,omitempty"`                         // 目标单位ID列表
	Damage        int32                  `protobuf:"varint,5,opt,name=damage,proto3" json:"damage,omitempty"`                                                             // 伤害�?
	Healing       int32                  `protobuf:"varint,6,opt,name=healing,proto3" json:"healing,omitempty"`                                                           // 治疗�?
	EffectIds     []string               `protobuf:"bytes,7,rep,name=effect_ids,json=effectIds,proto3" json:"effect_ids,omitempty"`                                       // 触发的效果ID列表
	TargetPos     *common.Position       `protobuf:"bytes,8,opt,name=target_pos,json=targetPos,proto3" json:"target_pos,omitempty"`                                       // 目标位置
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleAction) Reset() {
	*x = BattleAction{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleAction) ProtoMessage() {}

func (x *BattleAction) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleAction.ProtoReflect.Descriptor instead.
func (*BattleAction) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{4}
}

func (x *BattleAction) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *BattleAction) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_ACTION_TYPE_UNKNOWN
}

func (x *BattleAction) GetSourceUnitId() string {
	if x != nil {
		return x.SourceUnitId
	}
	return ""
}

func (x *BattleAction) GetTargetUnitIds() []string {
	if x != nil {
		return x.TargetUnitIds
	}
	return nil
}

func (x *BattleAction) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *BattleAction) GetHealing() int32 {
	if x != nil {
		return x.Healing
	}
	return 0
}

func (x *BattleAction) GetEffectIds() []string {
	if x != nil {
		return x.EffectIds
	}
	return nil
}

func (x *BattleAction) GetTargetPos() *common.Position {
	if x != nil {
		return x.TargetPos
	}
	return nil
}

// 战斗奖励
type BattleReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exp           int32                  `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`     // 经验�?
	Gold          int32                  `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`   // 金币
	Items         []*common.Item         `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`  // 物品奖励
	Honor         int32                  `protobuf:"varint,4,opt,name=honor,proto3" json:"honor,omitempty"` // 荣誉�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BattleReward) Reset() {
	*x = BattleReward{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattleReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleReward) ProtoMessage() {}

func (x *BattleReward) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleReward.ProtoReflect.Descriptor instead.
func (*BattleReward) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{5}
}

func (x *BattleReward) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *BattleReward) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *BattleReward) GetItems() []*common.Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BattleReward) GetHonor() int32 {
	if x != nil {
		return x.Honor
	}
	return 0
}

// 单位增益/减益效果
type UnitBuff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuffId        string                 `protobuf:"bytes,1,opt,name=buff_id,json=buffId,proto3" json:"buff_id,omitempty"`                                                                                              // 效果ID
	BuffType      BuffType               `protobuf:"varint,2,opt,name=buff_type,json=buffType,proto3,enum=slg.combat.v1_0_0.BuffType" json:"buff_type,omitempty"`                                                       // 效果类型
	Duration      int32                  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                       // 持续时间(�?
	StackCount    int32                  `protobuf:"varint,4,opt,name=stack_count,json=stackCount,proto3" json:"stack_count,omitempty"`                                                                                 // 叠加层数
	EffectValues  map[string]int32       `protobuf:"bytes,5,rep,name=effect_values,json=effectValues,proto3" json:"effect_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 效果数�?
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnitBuff) Reset() {
	*x = UnitBuff{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitBuff) ProtoMessage() {}

func (x *UnitBuff) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitBuff.ProtoReflect.Descriptor instead.
func (*UnitBuff) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{6}
}

func (x *UnitBuff) GetBuffId() string {
	if x != nil {
		return x.BuffId
	}
	return ""
}

func (x *UnitBuff) GetBuffType() BuffType {
	if x != nil {
		return x.BuffType
	}
	return BuffType_BUFF_TYPE_UNKNOWN
}

func (x *UnitBuff) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *UnitBuff) GetStackCount() int32 {
	if x != nil {
		return x.StackCount
	}
	return 0
}

func (x *UnitBuff) GetEffectValues() map[string]int32 {
	if x != nil {
		return x.EffectValues
	}
	return nil
}

// 单位属�?
type UnitStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Attack         int32                  `protobuf:"varint,1,opt,name=attack,proto3" json:"attack,omitempty"`                                       // 攻击�?
	Defense        int32                  `protobuf:"varint,2,opt,name=defense,proto3" json:"defense,omitempty"`                                     // 防御�?
	Speed          int32                  `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`                                         // 速度
	CriticalRate   int32                  `protobuf:"varint,4,opt,name=critical_rate,json=criticalRate,proto3" json:"critical_rate,omitempty"`       // 暴击�?千分�?
	CriticalDamage int32                  `protobuf:"varint,5,opt,name=critical_damage,json=criticalDamage,proto3" json:"critical_damage,omitempty"` // 暴击伤害(千分�?
	Accuracy       int32                  `protobuf:"varint,6,opt,name=accuracy,proto3" json:"accuracy,omitempty"`                                   // 命中�?千分�?
	Dodge          int32                  `protobuf:"varint,7,opt,name=dodge,proto3" json:"dodge,omitempty"`                                         // 闪避�?千分�?
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UnitStats) Reset() {
	*x = UnitStats{}
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnitStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitStats) ProtoMessage() {}

func (x *UnitStats) ProtoReflect() protoreflect.Message {
	mi := &file_v1_0_0_combat_battle_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitStats.ProtoReflect.Descriptor instead.
func (*UnitStats) Descriptor() ([]byte, []int) {
	return file_v1_0_0_combat_battle_proto_rawDescGZIP(), []int{7}
}

func (x *UnitStats) GetAttack() int32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *UnitStats) GetDefense() int32 {
	if x != nil {
		return x.Defense
	}
	return 0
}

func (x *UnitStats) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *UnitStats) GetCriticalRate() int32 {
	if x != nil {
		return x.CriticalRate
	}
	return 0
}

func (x *UnitStats) GetCriticalDamage() int32 {
	if x != nil {
		return x.CriticalDamage
	}
	return 0
}

func (x *UnitStats) GetAccuracy() int32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *UnitStats) GetDodge() int32 {
	if x != nil {
		return x.Dodge
	}
	return 0
}

var File_v1_0_0_combat_battle_proto protoreflect.FileDescriptor

const file_v1_0_0_combat_battle_proto_rawDesc = "" +
	"\n" +
	"\x1av1.0.0/combat/battle.proto\x12\x11slg.combat.v1_0_0\x1a\x19v1.0.0/common/types.proto\"\xfe\x01\n" +
	"\rBattleRequest\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12>\n" +
	"\vbattle_type\x18\x03 \x01(\x0e2\x1d.slg.combat.v1_0_0.BattleTypeR\n" +
	"battleType\x12\x19\n" +
	"\bunit_ids\x18\x04 \x03(\tR\aunitIds\x12:\n" +
	"\n" +
	"target_pos\x18\x05 \x01(\v2\x1b.slg.common.v1_0_0.PositionR\ttargetPos\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\"\x82\x02\n" +
	"\x0eBattleResponse\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x127\n" +
	"\x06result\x18\x02 \x01(\x0e2\x1f.slg.combat.v1_0_0.BattleResultR\x06result\x12@\n" +
	"\fbattle_units\x18\x03 \x03(\v2\x1d.slg.combat.v1_0_0.BattleUnitR\vbattleUnits\x127\n" +
	"\x06reward\x18\x04 \x01(\v2\x1f.slg.combat.v1_0_0.BattleRewardR\x06reward\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\x05R\n" +
	"durationMs\"\xda\x01\n" +
	"\x0fBattleStatePush\x12\x1b\n" +
	"\tbattle_id\x18\x01 \x01(\tR\bbattleId\x12\x1b\n" +
	"\tframe_seq\x18\x02 \x01(\x04R\bframeSeq\x129\n" +
	"\aactions\x18\x03 \x03(\v2\x1f.slg.combat.v1_0_0.BattleActionR\aactions\x124\n" +
	"\x05phase\x18\x04 \x01(\x0e2\x1e.slg.combat.v1_0_0.BattlePhaseR\x05phase\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"\xeb\x02\n" +
	"\n" +
	"BattleUnit\x12\x17\n" +
	"\aunit_id\x18\x01 \x01(\tR\x06unitId\x12\x1f\n" +
	"\vtemplate_id\x18\x02 \x01(\tR\n" +
	"templateId\x12\x0e\n" +
	"\x02hp\x18\x03 \x01(\x05R\x02hp\x12\x15\n" +
	"\x06max_hp\x18\x04 \x01(\x05R\x05maxHp\x12\x0e\n" +
	"\x02mp\x18\x05 \x01(\x05R\x02mp\x12\x15\n" +
	"\x06max_mp\x18\x06 \x01(\x05R\x05maxMp\x127\n" +
	"\bposition\x18\a \x01(\v2\x1b.slg.common.v1_0_0.PositionR\bposition\x125\n" +
	"\x06status\x18\b \x01(\x0e2\x1d.slg.combat.v1_0_0.UnitStatusR\x06status\x121\n" +
	"\x05buffs\x18\t \x03(\v2\x1b.slg.combat.v1_0_0.UnitBuffR\x05buffs\x122\n" +
	"\x05stats\x18\n" +
	" \x01(\v2\x1c.slg.combat.v1_0_0.UnitStatsR\x05stats\"\xc6\x02\n" +
	"\fBattleAction\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12>\n" +
	"\vaction_type\x18\x02 \x01(\x0e2\x1d.slg.combat.v1_0_0.ActionTypeR\n" +
	"actionType\x12$\n" +
	"\x0esource_unit_id\x18\x03 \x01(\tR\fsourceUnitId\x12&\n" +
	"\x0ftarget_unit_ids\x18\x04 \x03(\tR\rtargetUnitIds\x12\x16\n" +
	"\x06damage\x18\x05 \x01(\x05R\x06damage\x12\x18\n" +
	"\ahealing\x18\x06 \x01(\x05R\ahealing\x12\x1d\n" +
	"\n" +
	"effect_ids\x18\a \x03(\tR\teffectIds\x12:\n" +
	"\n" +
	"target_pos\x18\b \x01(\v2\x1b.slg.common.v1_0_0.PositionR\ttargetPos\"y\n" +
	"\fBattleReward\x12\x10\n" +
	"\x03exp\x18\x01 \x01(\x05R\x03exp\x12\x12\n" +
	"\x04gold\x18\x02 \x01(\x05R\x04gold\x12-\n" +
	"\x05items\x18\x03 \x03(\v2\x17.slg.common.v1_0_0.ItemR\x05items\x12\x14\n" +
	"\x05honor\x18\x04 \x01(\x05R\x05honor\"\xaf\x02\n" +
	"\bUnitBuff\x12\x17\n" +
	"\abuff_id\x18\x01 \x01(\tR\x06buffId\x128\n" +
	"\tbuff_type\x18\x02 \x01(\x0e2\x1b.slg.combat.v1_0_0.BuffTypeR\bbuffType\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x05R\bduration\x12\x1f\n" +
	"\vstack_count\x18\x04 \x01(\x05R\n" +
	"stackCount\x12R\n" +
	"\reffect_values\x18\x05 \x03(\v2-.slg.combat.v1_0_0.UnitBuff.EffectValuesEntryR\feffectValues\x1a?\n" +
	"\x11EffectValuesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd3\x01\n" +
	"\tUnitStats\x12\x16\n" +
	"\x06attack\x18\x01 \x01(\x05R\x06attack\x12\x18\n" +
	"\adefense\x18\x02 \x01(\x05R\adefense\x12\x14\n" +
	"\x05speed\x18\x03 \x01(\x05R\x05speed\x12#\n" +
	"\rcritical_rate\x18\x04 \x01(\x05R\fcriticalRate\x12'\n" +
	"\x0fcritical_damage\x18\x05 \x01(\x05R\x0ecriticalDamage\x12\x1a\n" +
	"\baccuracy\x18\x06 \x01(\x05R\baccuracy\x12\x14\n" +
	"\x05dodge\x18\a \x01(\x05R\x05dodge*\x97\x01\n" +
	"\n" +
	"BattleType\x12\x17\n" +
	"\x13BATTLE_TYPE_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fBATTLE_TYPE_PVE\x10\x01\x12\x13\n" +
	"\x0fBATTLE_TYPE_PVP\x10\x02\x12\x19\n" +
	"\x15BATTLE_TYPE_GUILD_WAR\x10\x03\x12\x15\n" +
	"\x11BATTLE_TYPE_ARENA\x10\x04\x12\x14\n" +
	"\x10BATTLE_TYPE_RAID\x10\x05*\x91\x01\n" +
	"\fBattleResult\x12\x19\n" +
	"\x15BATTLE_RESULT_UNKNOWN\x10\x00\x12\x19\n" +
	"\x15BATTLE_RESULT_VICTORY\x10\x01\x12\x18\n" +
	"\x14BATTLE_RESULT_DEFEAT\x10\x02\x12\x16\n" +
	"\x12BATTLE_RESULT_DRAW\x10\x03\x12\x19\n" +
	"\x15BATTLE_RESULT_TIMEOUT\x10\x04*w\n" +
	"\vBattlePhase\x12\x18\n" +
	"\x14BATTLE_PHASE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16BATTLE_PHASE_PREPARING\x10\x01\x12\x19\n" +
	"\x15BATTLE_PHASE_FIGHTING\x10\x02\x12\x17\n" +
	"\x13BATTLE_PHASE_ENDING\x10\x03*\xb6\x01\n" +
	"\n" +
	"UnitStatus\x12\x17\n" +
	"\x13UNIT_STATUS_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10UNIT_STATUS_IDLE\x10\x01\x12\x16\n" +
	"\x12UNIT_STATUS_MOVING\x10\x02\x12\x19\n" +
	"\x15UNIT_STATUS_ATTACKING\x10\x03\x12\x17\n" +
	"\x13UNIT_STATUS_CASTING\x10\x04\x12\x17\n" +
	"\x13UNIT_STATUS_STUNNED\x10\x05\x12\x14\n" +
	"\x10UNIT_STATUS_DEAD\x10\x06*\xae\x01\n" +
	"\n" +
	"ActionType\x12\x17\n" +
	"\x13ACTION_TYPE_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10ACTION_TYPE_MOVE\x10\x01\x12\x16\n" +
	"\x12ACTION_TYPE_ATTACK\x10\x02\x12\x15\n" +
	"\x11ACTION_TYPE_SKILL\x10\x03\x12\x14\n" +
	"\x10ACTION_TYPE_HEAL\x10\x04\x12\x14\n" +
	"\x10ACTION_TYPE_BUFF\x10\x05\x12\x16\n" +
	"\x12ACTION_TYPE_DEBUFF\x10\x06*\xef\x01\n" +
	"\bBuffType\x12\x15\n" +
	"\x11BUFF_TYPE_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13BUFF_TYPE_ATTACK_UP\x10\x01\x12\x18\n" +
	"\x14BUFF_TYPE_DEFENSE_UP\x10\x02\x12\x16\n" +
	"\x12BUFF_TYPE_SPEED_UP\x10\x03\x12\x19\n" +
	"\x15BUFF_TYPE_ATTACK_DOWN\x10\x04\x12\x1a\n" +
	"\x16BUFF_TYPE_DEFENSE_DOWN\x10\x05\x12\x18\n" +
	"\x14BUFF_TYPE_SPEED_DOWN\x10\x06\x12\x14\n" +
	"\x10BUFF_TYPE_POISON\x10\a\x12\x1a\n" +
	"\x16BUFF_TYPE_REGENERATION\x10\bB\xb9\x01\n" +
	"\x15com.slg.combat.v1_0_0B\vBattleProtoP\x01Z5GoSlgBenchmarkTest/generated/slg/v1_0_0/combat;combat\xa2\x02\x03SCV\xaa\x02\x0fSlg.Combat.V100\xca\x02\x0fSlg\\Combat\\V100\xe2\x02\x1bSlg\\Combat\\V100\\GPBMetadata\xea\x02\x11Slg::Combat::V100b\x06proto3"

var (
	file_v1_0_0_combat_battle_proto_rawDescOnce sync.Once
	file_v1_0_0_combat_battle_proto_rawDescData []byte
)

func file_v1_0_0_combat_battle_proto_rawDescGZIP() []byte {
	file_v1_0_0_combat_battle_proto_rawDescOnce.Do(func() {
		file_v1_0_0_combat_battle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_0_0_combat_battle_proto_rawDesc), len(file_v1_0_0_combat_battle_proto_rawDesc)))
	})
	return file_v1_0_0_combat_battle_proto_rawDescData
}

var file_v1_0_0_combat_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_v1_0_0_combat_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_v1_0_0_combat_battle_proto_goTypes = []any{
	(BattleType)(0),         // 0: slg.combat.v1_0_0.BattleType
	(BattleResult)(0),       // 1: slg.combat.v1_0_0.BattleResult
	(BattlePhase)(0),        // 2: slg.combat.v1_0_0.BattlePhase
	(UnitStatus)(0),         // 3: slg.combat.v1_0_0.UnitStatus
	(ActionType)(0),         // 4: slg.combat.v1_0_0.ActionType
	(BuffType)(0),           // 5: slg.combat.v1_0_0.BuffType
	(*BattleRequest)(nil),   // 6: slg.combat.v1_0_0.BattleRequest
	(*BattleResponse)(nil),  // 7: slg.combat.v1_0_0.BattleResponse
	(*BattleStatePush)(nil), // 8: slg.combat.v1_0_0.BattleStatePush
	(*BattleUnit)(nil),      // 9: slg.combat.v1_0_0.BattleUnit
	(*BattleAction)(nil),    // 10: slg.combat.v1_0_0.BattleAction
	(*BattleReward)(nil),    // 11: slg.combat.v1_0_0.BattleReward
	(*UnitBuff)(nil),        // 12: slg.combat.v1_0_0.UnitBuff
	(*UnitStats)(nil),       // 13: slg.combat.v1_0_0.UnitStats
	nil,                     // 14: slg.combat.v1_0_0.UnitBuff.EffectValuesEntry
	(*common.Position)(nil), // 15: slg.common.v1_0_0.Position
	(*common.Item)(nil),     // 16: slg.common.v1_0_0.Item
}
var file_v1_0_0_combat_battle_proto_depIdxs = []int32{
	0,  // 0: slg.combat.v1_0_0.BattleRequest.battle_type:type_name -> slg.combat.v1_0_0.BattleType
	15, // 1: slg.combat.v1_0_0.BattleRequest.target_pos:type_name -> slg.common.v1_0_0.Position
	1,  // 2: slg.combat.v1_0_0.BattleResponse.result:type_name -> slg.combat.v1_0_0.BattleResult
	9,  // 3: slg.combat.v1_0_0.BattleResponse.battle_units:type_name -> slg.combat.v1_0_0.BattleUnit
	11, // 4: slg.combat.v1_0_0.BattleResponse.reward:type_name -> slg.combat.v1_0_0.BattleReward
	10, // 5: slg.combat.v1_0_0.BattleStatePush.actions:type_name -> slg.combat.v1_0_0.BattleAction
	2,  // 6: slg.combat.v1_0_0.BattleStatePush.phase:type_name -> slg.combat.v1_0_0.BattlePhase
	15, // 7: slg.combat.v1_0_0.BattleUnit.position:type_name -> slg.common.v1_0_0.Position
	3,  // 8: slg.combat.v1_0_0.BattleUnit.status:type_name -> slg.combat.v1_0_0.UnitStatus
	12, // 9: slg.combat.v1_0_0.BattleUnit.buffs:type_name -> slg.combat.v1_0_0.UnitBuff
	13, // 10: slg.combat.v1_0_0.BattleUnit.stats:type_name -> slg.combat.v1_0_0.UnitStats
	4,  // 11: slg.combat.v1_0_0.BattleAction.action_type:type_name -> slg.combat.v1_0_0.ActionType
	15, // 12: slg.combat.v1_0_0.BattleAction.target_pos:type_name -> slg.common.v1_0_0.Position
	16, // 13: slg.combat.v1_0_0.BattleReward.items:type_name -> slg.common.v1_0_0.Item
	5,  // 14: slg.combat.v1_0_0.UnitBuff.buff_type:type_name -> slg.combat.v1_0_0.BuffType
	14, // 15: slg.combat.v1_0_0.UnitBuff.effect_values:type_name -> slg.combat.v1_0_0.UnitBuff.EffectValuesEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_v1_0_0_combat_battle_proto_init() }
func file_v1_0_0_combat_battle_proto_init() {
	if File_v1_0_0_combat_battle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_0_0_combat_battle_proto_rawDesc), len(file_v1_0_0_combat_battle_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_0_0_combat_battle_proto_goTypes,
		DependencyIndexes: file_v1_0_0_combat_battle_proto_depIdxs,
		EnumInfos:         file_v1_0_0_combat_battle_proto_enumTypes,
		MessageInfos:      file_v1_0_0_combat_battle_proto_msgTypes,
	}.Build()
	File_v1_0_0_combat_battle_proto = out.File
	file_v1_0_0_combat_battle_proto_goTypes = nil
	file_v1_0_0_combat_battle_proto_depIdxs = nil
}
