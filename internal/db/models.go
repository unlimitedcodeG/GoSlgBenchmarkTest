// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type SessionEvent struct {
	ID        int64              `json:"id"`
	SessionID int64              `json:"session_id"`
	EventType string             `json:"event_type"`
	EventData []byte             `json:"event_data"`
	Timestamp pgtype.Timestamptz `json:"timestamp"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type SessionMessage struct {
	ID          int64              `json:"id"`
	SessionID   int64              `json:"session_id"`
	Direction   string             `json:"direction"`
	Opcode      pgtype.Int4        `json:"opcode"`
	MessageSize pgtype.Int4        `json:"message_size"`
	BodySize    pgtype.Int4        `json:"body_size"`
	SequenceNum pgtype.Int8        `json:"sequence_num"`
	MessageHash pgtype.Text        `json:"message_hash"`
	RawData     []byte             `json:"raw_data"`
	Timestamp   pgtype.Timestamptz `json:"timestamp"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type SlgBattleRecord struct {
	ID              int64              `json:"id"`
	TestID          int64              `json:"test_id"`
	BattleID        string             `json:"battle_id"`
	BattleType      pgtype.Text        `json:"battle_type"`
	PlayerIds       []byte             `json:"player_ids"`
	MapID           pgtype.Text        `json:"map_id"`
	Winner          pgtype.Text        `json:"winner"`
	BattleDuration  pgtype.Int8        `json:"battle_duration"`
	InitLatency     pgtype.Int8        `json:"init_latency"`
	UpdateFrequency pgtype.Numeric     `json:"update_frequency"`
	SyncErrorRate   pgtype.Numeric     `json:"sync_error_rate"`
	UnityFps        pgtype.Numeric     `json:"unity_fps"`
	BattleData      []byte             `json:"battle_data"`
	StartTime       pgtype.Timestamptz `json:"start_time"`
	EndTime         pgtype.Timestamptz `json:"end_time"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
}

type Test struct {
	ID           int64              `json:"id"`
	Name         string             `json:"name"`
	Type         string             `json:"type"`
	Status       string             `json:"status"`
	StartTime    pgtype.Timestamptz `json:"start_time"`
	EndTime      pgtype.Timestamptz `json:"end_time"`
	Duration     pgtype.Int8        `json:"duration"`
	Score        pgtype.Numeric     `json:"score"`
	Grade        pgtype.Text        `json:"grade"`
	Config       pgtype.Text        `json:"config"`
	ErrorMessage pgtype.Text        `json:"error_message"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
	DeletedAt    pgtype.Timestamptz `json:"deleted_at"`
}

type TestMetric struct {
	ID          int64              `json:"id"`
	TestID      int64              `json:"test_id"`
	MetricType  string             `json:"metric_type"`
	MetricName  string             `json:"metric_name"`
	MetricValue pgtype.Numeric     `json:"metric_value"`
	MetricUnit  pgtype.Text        `json:"metric_unit"`
	Timestamp   pgtype.Timestamptz `json:"timestamp"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type TestReport struct {
	ID          int64              `json:"id"`
	TestID      int64              `json:"test_id"`
	Summary     pgtype.Text        `json:"summary"`
	Issues      []byte             `json:"issues"`
	Suggestions []byte             `json:"suggestions"`
	RawData     pgtype.Text        `json:"raw_data"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type TestSession struct {
	ID              int64              `json:"id"`
	TestID          int64              `json:"test_id"`
	SessionID       string             `json:"session_id"`
	ClientType      pgtype.Text        `json:"client_type"`
	ClientInfo      []byte             `json:"client_info"`
	ConnectionCount pgtype.Int4        `json:"connection_count"`
	MessageCount    pgtype.Int4        `json:"message_count"`
	BytesTransfer   pgtype.Int8        `json:"bytes_transfer"`
	AvgLatency      pgtype.Int8        `json:"avg_latency"`
	MinLatency      pgtype.Int8        `json:"min_latency"`
	MaxLatency      pgtype.Int8        `json:"max_latency"`
	ErrorCount      pgtype.Int4        `json:"error_count"`
	ReconnectCount  pgtype.Int4        `json:"reconnect_count"`
	StartTime       pgtype.Timestamptz `json:"start_time"`
	EndTime         pgtype.Timestamptz `json:"end_time"`
	CreatedAt       pgtype.Timestamptz `json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `json:"updated_at"`
}

type UnityClientRecord struct {
	ID             int64              `json:"id"`
	TestID         int64              `json:"test_id"`
	PlayerID       string             `json:"player_id"`
	UnityVersion   pgtype.Text        `json:"unity_version"`
	Platform       pgtype.Text        `json:"platform"`
	DeviceInfo     []byte             `json:"device_info"`
	ConnectTime    pgtype.Timestamptz `json:"connect_time"`
	DisconnectTime pgtype.Timestamptz `json:"disconnect_time"`
	TotalDuration  pgtype.Int8        `json:"total_duration"`
	ActionCount    pgtype.Int4        `json:"action_count"`
	AvgFps         pgtype.Numeric     `json:"avg_fps"`
	MemoryUsage    pgtype.Numeric     `json:"memory_usage"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
}
